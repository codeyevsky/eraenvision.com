{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# EraEnvision Website\n\n## Overview\n\nEraEnvision is an AI-powered business growth and digital transformation platform offering personalized AI consulting through three main segments: Launch (for entrepreneurs), Scale (for businesses), and Invest (for investors). The platform provides customized roadmaps, optimization tools, and investment insights through a comprehensive SaaS solution.\n\nThis repository contains a modern landing page built as a full-stack web application showcasing the platform's capabilities, featuring a sophisticated user interface with Turkish/English language support, contact forms, and detailed segment presentations.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React with TypeScript using Vite for fast development and building\n- **Styling**: Tailwind CSS with shadcn/ui component library for consistent, modern UI components\n- **Design System**: Custom brand colors (Era Red #E1182E as primary) with Space Grotesk for headings and Inter for body text\n- **Routing**: Wouter for lightweight client-side routing\n- **State Management**: TanStack React Query for server state management and caching\n- **Internationalization**: Custom translation system supporting Turkish and English languages\n- **UI Components**: Radix UI primitives with custom styling for accessibility and consistency\n\n### Backend Architecture\n- **Server**: Express.js with TypeScript running on Node.js\n- **API Design**: RESTful endpoints with proper error handling and request/response logging\n- **Development Server**: Integrated Vite development server with HMR support\n- **Static Serving**: Production-ready static file serving with proper caching headers\n\n### Data Storage Solutions\n- **Database**: PostgreSQL with Drizzle ORM for type-safe database operations\n- **Schema Management**: Drizzle migrations for version-controlled database schema changes\n- **Connection**: Neon Database serverless PostgreSQL for production deployment\n- **Fallback Storage**: In-memory storage implementation for development and testing\n\n### Database Schema Design\n- **Users Table**: Basic user authentication with username/password\n- **Contacts Table**: Contact form submissions with GDPR/KVKK compliance fields\n- **Blog Posts Table**: Content management with multilingual support, SEO fields, and publishing workflow\n- **Case Studies Table**: Success stories with structured problem/solution format\n\n### Authentication and Authorization\n- **Current Implementation**: Basic user storage structure in place\n- **Session Management**: Cookie-based sessions using connect-pg-simple for production scalability\n- **Security**: Prepared for production-grade authentication implementation\n\n### Performance Optimizations\n- **Build Process**: Optimized production builds with code splitting and asset optimization\n- **Image Handling**: External image sources with proper lazy loading and optimization\n- **CSS**: Tailwind CSS with purging for minimal bundle sizes\n- **Caching**: Query client configuration with intelligent caching strategies\n\n### Development Workflow\n- **Type Safety**: Full TypeScript implementation across client, server, and shared code\n- **Code Quality**: ESLint configuration and consistent code formatting\n- **Development Tools**: Hot module replacement, error overlays, and development-specific tooling\n- **Build System**: Unified build process for both client and server components\n\n## External Dependencies\n\n### Core Framework Dependencies\n- **React Ecosystem**: React 18 with TypeScript, React DOM, and modern hooks\n- **Build Tools**: Vite for development server and building, esbuild for server bundling\n- **Database**: PostgreSQL via Neon Database serverless platform\n- **ORM**: Drizzle ORM with PostgreSQL dialect and Zod integration for type safety\n\n### UI and Styling\n- **Component Library**: shadcn/ui built on Radix UI primitives for accessibility\n- **Styling**: Tailwind CSS with PostCSS for advanced CSS processing\n- **Fonts**: Google Fonts integration for Space Grotesk and Inter typography\n- **Icons**: Lucide React for consistent, customizable icons\n\n### Development and Production Tools\n- **Server Framework**: Express.js with middleware for JSON parsing and static serving\n- **Session Management**: connect-pg-simple for PostgreSQL session storage\n- **Development**: tsx for TypeScript execution, Replit-specific development plugins\n- **Utilities**: date-fns for date formatting, nanoid for unique ID generation\n\n### Form Handling and Validation\n- **Form Management**: React Hook Form with Radix UI form components integration\n- **Validation**: Zod for runtime type validation and schema definition\n- **UI Components**: Custom form components built with Radix UI and proper validation display\n\n### Deployment and Infrastructure\n- **Database Hosting**: Neon Database for serverless PostgreSQL\n- **Environment**: Node.js with ESM module support\n- **Build Output**: Optimized static assets and server bundle for production deployment\n- **Development Environment**: Replit-optimized with cartographer and runtime error handling","size_bytes":5139},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      colors: {\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        chart: {\n          \"1\": \"hsl(var(--chart-1))\",\n          \"2\": \"hsl(var(--chart-2))\",\n          \"3\": \"hsl(var(--chart-3))\",\n          \"4\": \"hsl(var(--chart-4))\",\n          \"5\": \"hsl(var(--chart-5))\",\n        },\n        sidebar: {\n          DEFAULT: \"hsl(var(--sidebar-background))\",\n          foreground: \"hsl(var(--sidebar-foreground))\",\n          primary: \"hsl(var(--sidebar-primary))\",\n          \"primary-foreground\": \"hsl(var(--sidebar-primary-foreground))\",\n          accent: \"hsl(var(--sidebar-accent))\",\n          \"accent-foreground\": \"hsl(var(--sidebar-accent-foreground))\",\n          border: \"hsl(var(--sidebar-border))\",\n          ring: \"hsl(var(--sidebar-ring))\",\n        },\n        // EraEnvision Brand Colors\n        \"era-red\": \"hsl(347, 83%, 49%)\",\n        \"era-red-dark\": \"hsl(347, 79%, 42%)\",\n        \"ink-black\": \"hsl(240, 5%, 4%)\",\n        \"soft-paper\": \"hsl(0, 0%, 97%)\",\n        \"graphite\": \"hsl(240, 5%, 11%)\",\n        \"accent-mint\": \"hsl(147, 69%, 46%)\",\n        \"accent-amber\": \"hsl(42, 90%, 56%)\",\n        \"accent-blue\": \"hsl(213, 73%, 56%)\",\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        heading: [\"var(--font-heading)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n        \"2xl\": \"1.25rem\",\n        \"3xl\": \"1.5rem\",\n      },\n      spacing: {\n        \"18\": \"4.5rem\",\n        \"22\": \"5.5rem\",\n        \"26\": \"6.5rem\",\n        \"30\": \"7.5rem\",\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n        float: {\n          \"0%, 100%\": { transform: \"translateY(0px)\" },\n          \"50%\": { transform: \"translateY(-20px)\" },\n        },\n        fadeInUp: {\n          \"0%\": { opacity: \"0\", transform: \"translateY(30px)\" },\n          \"100%\": { opacity: \"1\", transform: \"translateY(0)\" },\n        },\n        scaleIn: {\n          \"0%\": { opacity: \"0\", transform: \"scale(0.9)\" },\n          \"100%\": { opacity: \"1\", transform: \"scale(1)\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        float: \"float 6s ease-in-out infinite\",\n        \"fade-in-up\": \"fadeInUp 0.6s ease-out forwards\",\n        \"scale-in\": \"scaleIn 0.4s ease-out forwards\",\n      },\n      boxShadow: {\n        \"era-sm\": \"0 2px 8px hsl(347, 83%, 49%, 0.10)\",\n        \"era-md\": \"0 8px 24px hsl(347, 83%, 49%, 0.12)\",\n        \"era-lg\": \"0 16px 40px hsl(347, 83%, 49%, 0.14)\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":4287},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { z } from \"zod\";\nimport { insertContactSchema, type InsertContact, type Contact } from \"@shared/schema\";\nimport { storage } from \"./storage\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Contact form submission\n  app.post(\"/api/contact\", async (req, res) => {\n    try {\n      const contactData = insertContactSchema.parse(req.body);\n      const contact = await storage.createContact(contactData);\n      \n      // TODO: Send email notification\n      console.log('New contact submission:', contact);\n      \n      res.json({ success: true, message: \"Contact form submitted successfully\" });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        res.status(400).json({ \n          success: false, \n          message: \"Invalid form data\",\n          errors: error.errors \n        });\n      } else {\n        console.error('Contact form error:', error);\n        res.status(500).json({ \n          success: false, \n          message: \"Internal server error\" \n        });\n      }\n    }\n  });\n\n  // Get all contacts (admin endpoint)\n  app.get(\"/api/contacts\", async (req, res) => {\n    try {\n      const contacts = await storage.getContacts();\n      res.json(contacts);\n    } catch (error) {\n      console.error('Get contacts error:', error);\n      res.status(500).json({ \n        success: false, \n        message: \"Failed to fetch contacts\" \n      });\n    }\n  });\n\n  // Newsletter signup\n  app.post(\"/api/newsletter\", async (req, res) => {\n    try {\n      const { email } = z.object({ email: z.string().email() }).parse(req.body);\n      \n      // TODO: Add to newsletter service\n      console.log('Newsletter signup:', email);\n      \n      res.json({ success: true, message: \"Successfully subscribed to newsletter\" });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        res.status(400).json({ \n          success: false, \n          message: \"Invalid email address\" \n        });\n      } else {\n        console.error('Newsletter signup error:', error);\n        res.status(500).json({ \n          success: false, \n          message: \"Failed to subscribe to newsletter\" \n        });\n      }\n    }\n  });\n\n  // Analytics tracking endpoint\n  app.post(\"/api/analytics\", async (req, res) => {\n    try {\n      const { event, properties } = z.object({\n        event: z.string(),\n        properties: z.object({}).passthrough().optional(),\n      }).parse(req.body);\n      \n      // TODO: Send to analytics service\n      console.log('Analytics event:', event, properties);\n      \n      res.json({ success: true });\n    } catch (error) {\n      console.error('Analytics error:', error);\n      res.status(200).json({ success: false }); // Don't fail on analytics errors\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":2881},"server/storage.ts":{"content":"import { type User, type InsertUser, type Contact, type InsertContact } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  \n  // Contact methods\n  createContact(contact: InsertContact): Promise<Contact>;\n  getContacts(): Promise<Contact[]>;\n  getContactById(id: string): Promise<Contact | undefined>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n  private contacts: Map<string, Contact>;\n\n  constructor() {\n    this.users = new Map();\n    this.contacts = new Map();\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n\n  async createContact(insertContact: InsertContact): Promise<Contact> {\n    const id = randomUUID();\n    const contact: Contact = { \n      ...insertContact, \n      id,\n      createdAt: new Date()\n    };\n    this.contacts.set(id, contact);\n    return contact;\n  }\n\n  async getContacts(): Promise<Contact[]> {\n    return Array.from(this.contacts.values());\n  }\n\n  async getContactById(id: string): Promise<Contact | undefined> {\n    return this.contacts.get(id);\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":1746},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, timestamp, boolean, json } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const contacts = pgTable(\"contacts\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  fullName: text(\"full_name\").notNull(),\n  email: text(\"email\").notNull(),\n  company: text(\"company\"),\n  country: text(\"country\"),\n  segment: text(\"segment\"),\n  budget: text(\"budget\"),\n  message: text(\"message\"),\n  kvkkConsent: boolean(\"kvkk_consent\").notNull(),\n  marketingConsent: boolean(\"marketing_consent\").default(false),\n  createdAt: timestamp(\"created_at\").default(sql`now()`).notNull(),\n});\n\nexport const blogPosts = pgTable(\"blog_posts\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: text(\"title\").notNull(),\n  slug: text(\"slug\").notNull().unique(),\n  excerpt: text(\"excerpt\"),\n  content: text(\"content\").notNull(),\n  coverImage: text(\"cover_image\"),\n  author: json(\"author\").$type<{ name: string; title: string; avatar?: string }>(),\n  tags: text(\"tags\").array(),\n  readTime: text(\"read_time\"),\n  locale: text(\"locale\").notNull().default('tr'),\n  published: boolean(\"published\").default(false),\n  publishedAt: timestamp(\"published_at\"),\n  createdAt: timestamp(\"created_at\").default(sql`now()`).notNull(),\n  updatedAt: timestamp(\"updated_at\").default(sql`now()`).notNull(),\n});\n\nexport const caseStudies = pgTable(\"case_studies\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: text(\"title\").notNull(),\n  slug: text(\"slug\").notNull().unique(),\n  sector: text(\"sector\"),\n  companySize: text(\"company_size\"),\n  problem: text(\"problem\").notNull(),\n  approach: text(\"approach\").notNull(),\n  solution: text(\"solution\").notNull(),\n  kpis: json(\"kpis\").$type<Array<{ name: string; value: string; delta: string }>>(),\n  images: text(\"images\").array(),\n  locale: text(\"locale\").notNull().default('tr'),\n  published: boolean(\"published\").default(false),\n  publishedAt: timestamp(\"published_at\"),\n  createdAt: timestamp(\"created_at\").default(sql`now()`).notNull(),\n});\n\nexport const faqs = pgTable(\"faqs\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  category: text(\"category\").notNull(),\n  question: text(\"question\").notNull(),\n  answer: text(\"answer\").notNull(),\n  locale: text(\"locale\").notNull().default('tr'),\n  order: text(\"order\").default('0'),\n  published: boolean(\"published\").default(true),\n  createdAt: timestamp(\"created_at\").default(sql`now()`).notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport const insertContactSchema = createInsertSchema(contacts).pick({\n  fullName: true,\n  email: true,\n  company: true,\n  country: true,\n  segment: true,\n  budget: true,\n  message: true,\n  kvkkConsent: true,\n  marketingConsent: true,\n});\n\nexport const insertBlogPostSchema = createInsertSchema(blogPosts).pick({\n  title: true,\n  slug: true,\n  excerpt: true,\n  content: true,\n  coverImage: true,\n  author: true,\n  tags: true,\n  readTime: true,\n  locale: true,\n  published: true,\n});\n\nexport const insertCaseStudySchema = createInsertSchema(caseStudies).pick({\n  title: true,\n  slug: true,\n  sector: true,\n  companySize: true,\n  problem: true,\n  approach: true,\n  solution: true,\n  kpis: true,\n  images: true,\n  locale: true,\n  published: true,\n});\n\nexport const insertFAQSchema = createInsertSchema(faqs).pick({\n  category: true,\n  question: true,\n  answer: true,\n  locale: true,\n  order: true,\n  published: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n\nexport type InsertContact = z.infer<typeof insertContactSchema>;\nexport type Contact = typeof contacts.$inferSelect;\n\nexport type InsertBlogPost = z.infer<typeof insertBlogPostSchema>;\nexport type BlogPost = typeof blogPosts.$inferSelect;\n\nexport type InsertCaseStudy = z.infer<typeof insertCaseStudySchema>;\nexport type CaseStudy = typeof caseStudies.$inferSelect;\n\nexport type InsertFAQ = z.infer<typeof insertFAQSchema>;\nexport type FAQ = typeof faqs.$inferSelect;\n","size_bytes":4368},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { LanguageProvider } from \"@/hooks/use-language\";\nimport { Header } from \"@/components/layout/header\";\nimport { Footer } from \"@/components/layout/footer\";\nimport { CookieConsent } from \"@/components/ui/cookie-consent\";\nimport HomePage from \"@/pages/home\";\nimport ProductsPage from \"@/pages/products\";\nimport LaunchPage from \"@/pages/launch\";\nimport ScalePage from \"@/pages/scale\";\nimport InvestPage from \"@/pages/invest\";\nimport DealBridgePage from \"@/pages/dealbridge\";\nimport PricingPage from \"@/pages/pricing\";\nimport AboutPage from \"@/pages/about\";\nimport ContactPage from \"@/pages/contact\";\nimport BlogPage from \"@/pages/blog\";\nimport BlogPostPage from \"@/pages/blog-post\";\nimport NotFound from \"@/pages/not-found\";\nimport { MessageCircle } from \"lucide-react\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={HomePage} />\n      <Route path=\"/products\" component={ProductsPage} />\n      <Route path=\"/launch\" component={LaunchPage} />\n      <Route path=\"/scale\" component={ScalePage} />\n      <Route path=\"/invest\" component={InvestPage} />\n      <Route path=\"/dealbridge\" component={DealBridgePage} />\n      <Route path=\"/pricing\" component={PricingPage} />\n      <Route path=\"/about\" component={AboutPage} />\n      <Route path=\"/contact\" component={ContactPage} />\n      <Route path=\"/blog\" component={BlogPage} />\n      <Route path=\"/blog/:slug\" component={BlogPostPage} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <LanguageProvider>\n        <TooltipProvider>\n          <div className=\"min-h-screen bg-white text-gray-900\">\n            <Header />\n            <Router />\n            <Footer />\n            \n            {/* Floating Help Button */}\n            <div className=\"fixed bottom-6 right-6 z-50\">\n              <button className=\"bg-primary hover:bg-primary/90 text-primary-foreground w-14 h-14 rounded-full shadow-lg hover-lift flex items-center justify-center\">\n                <MessageCircle className=\"h-6 w-6\" />\n              </button>\n            </div>\n            \n            <CookieConsent />\n            <Toaster />\n          </div>\n        </TooltipProvider>\n      </LanguageProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":2566},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@600;700&family=Inter:wght@400;500;600&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  /* EraEnvision Brand Colors */\n  --era-red: hsl(347, 83%, 49%);\n  --era-red-dark: hsl(347, 79%, 42%);\n  --ink-black: hsl(240, 5%, 4%);\n  --soft-paper: hsl(0, 0%, 97%);\n  --graphite: hsl(240, 5%, 11%);\n  --accent-mint: hsl(147, 69%, 46%);\n  --accent-amber: hsl(42, 90%, 56%);\n  --accent-blue: hsl(213, 73%, 56%);\n\n  /* Base Design System */\n  --background: hsl(0, 0%, 100%);\n  --foreground: hsl(240, 5%, 4%);\n  --card: hsl(0, 0%, 97%);\n  --card-foreground: hsl(240, 5%, 4%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(240, 5%, 4%);\n  --primary: hsl(347, 83%, 49%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(240, 5%, 11%);\n  --secondary-foreground: hsl(0, 0%, 100%);\n  --muted: hsl(0, 0%, 97%);\n  --muted-foreground: hsl(240, 5%, 4%);\n  --accent: hsl(0, 0%, 97%);\n  --accent-foreground: hsl(347, 83%, 49%);\n  --destructive: hsl(0, 84%, 60%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(220, 13%, 91%);\n  --input: hsl(220, 13%, 91%);\n  --ring: hsl(347, 83%, 49%);\n  --chart-1: hsl(347, 83%, 49%);\n  --chart-2: hsl(147, 69%, 46%);\n  --chart-3: hsl(42, 90%, 56%);\n  --chart-4: hsl(213, 73%, 56%);\n  --chart-5: hsl(283, 89%, 50%);\n  --sidebar: hsl(0, 0%, 97%);\n  --sidebar-foreground: hsl(240, 5%, 4%);\n  --sidebar-primary: hsl(347, 83%, 49%);\n  --sidebar-primary-foreground: hsl(0, 0%, 100%);\n  --sidebar-accent: hsl(0, 0%, 97%);\n  --sidebar-accent-foreground: hsl(347, 83%, 49%);\n  --sidebar-border: hsl(220, 13%, 91%);\n  --sidebar-ring: hsl(347, 83%, 49%);\n  \n  /* Typography */\n  --font-sans: 'Inter', sans-serif;\n  --font-heading: 'Space Grotesk', sans-serif;\n  --font-mono: 'Menlo', monospace;\n  \n  /* Design Tokens */\n  --radius: 1rem;\n  --shadow-sm: 0 2px 8px hsl(347, 83%, 49%, 0.10);\n  --shadow-md: 0 8px 24px hsl(347, 83%, 49%, 0.12);\n  --shadow-lg: 0 16px 40px hsl(347, 83%, 49%, 0.14);\n  \n  /* Animation Timing */\n  --duration-hover: 220ms;\n  --duration-in-view: 420ms;\n  --ease-out: cubic-bezier(0.25, 0.46, 0.45, 0.94);\n}\n\n/* Custom Utilities */\n@layer utilities {\n  .hover-lift {\n    @apply transition-all duration-300 ease-out;\n  }\n  .hover-lift:hover {\n    @apply -translate-y-1 shadow-lg;\n  }\n  \n  .gradient-text {\n    @apply bg-gradient-to-r from-primary to-primary/80 bg-clip-text text-transparent;\n  }\n  \n  .font-heading {\n    font-family: var(--font-heading);\n  }\n  \n  .animate-fade-in {\n    animation: fadeIn 0.6s ease-out;\n  }\n  \n  .animate-slide-up {\n    animation: slideUp 0.8s ease-out;\n  }\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes slideUp {\n  from {\n    opacity: 0;\n    transform: translateY(40px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.dark {\n  --background: hsl(240, 5%, 4%);\n  --foreground: hsl(0, 0%, 95%);\n  --card: hsl(240, 5%, 11%);\n  --card-foreground: hsl(0, 0%, 95%);\n  --popover: hsl(240, 5%, 4%);\n  --popover-foreground: hsl(0, 0%, 95%);\n  --primary: hsl(347, 83%, 49%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(0, 0%, 95%);\n  --secondary-foreground: hsl(240, 5%, 4%);\n  --muted: hsl(240, 5%, 11%);\n  --muted-foreground: hsl(240, 3%, 46%);\n  --accent: hsl(240, 5%, 11%);\n  --accent-foreground: hsl(347, 83%, 49%);\n  --destructive: hsl(0, 84%, 60%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(240, 5%, 15%);\n  --input: hsl(240, 5%, 15%);\n  --ring: hsl(347, 83%, 49%);\n  --sidebar: hsl(240, 5%, 11%);\n  --sidebar-foreground: hsl(0, 0%, 95%);\n  --sidebar-primary: hsl(347, 83%, 49%);\n  --sidebar-primary-foreground: hsl(0, 0%, 100%);\n  --sidebar-accent: hsl(240, 5%, 11%);\n  --sidebar-accent-foreground: hsl(347, 83%, 49%);\n  --sidebar-border: hsl(240, 5%, 15%);\n  --sidebar-ring: hsl(347, 83%, 49%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply bg-background text-foreground font-sans antialiased;\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    font-family: var(--font-heading);\n  }\n}\n\n@layer components {\n  /* Brand Colors */\n  .era-red {\n    @apply bg-[hsl(var(--era-red))] text-white;\n  }\n  \n  .era-red-dark {\n    @apply bg-[hsl(var(--era-red-dark))] text-white;\n  }\n  \n  .ink-black {\n    @apply bg-[hsl(var(--ink-black))] text-white;\n  }\n  \n  .soft-paper {\n    @apply bg-[hsl(var(--soft-paper))];\n  }\n  \n  .accent-mint {\n    @apply bg-[hsl(var(--accent-mint))] text-white;\n  }\n  \n  .accent-blue {\n    @apply bg-[hsl(var(--accent-blue))] text-white;\n  }\n  \n  /* Typography */\n  .font-heading {\n    font-family: var(--font-heading);\n  }\n  \n  .gradient-text {\n    @apply bg-gradient-to-r from-primary to-primary/80 bg-clip-text text-transparent;\n  }\n  \n  /* Interactive Elements */\n  .hover-lift {\n    @apply transition-all duration-500 ease-out hover:transform hover:-translate-y-2 hover:scale-105;\n    filter: drop-shadow(0 10px 25px hsl(var(--primary) / 0.15));\n  }\n  \n  .hover-lift:hover {\n    filter: drop-shadow(0 25px 50px hsl(var(--primary) / 0.25));\n  }\n  \n  .hover-glow {\n    @apply transition-all duration-300 hover:shadow-[0_0_40px_hsl(var(--primary)/30%)];\n  }\n  \n  .glass-effect {\n    @apply bg-background/70 backdrop-blur-xl border border-border/30;\n    background: linear-gradient(135deg, \n      hsl(var(--background) / 0.8) 0%,\n      hsl(var(--background) / 0.4) 100%);\n    box-shadow: \n      0 8px 32px hsl(var(--primary) / 0.1),\n      inset 0 1px 0 hsl(255 255 255 / 0.1);\n  }\n  \n  .gradient-border {\n    position: relative;\n    background: linear-gradient(135deg, \n      hsl(var(--primary)) 0%,\n      hsl(var(--accent-blue)) 25%,\n      hsl(var(--accent-mint)) 50%,\n      hsl(var(--primary)) 75%,\n      hsl(var(--accent-blue)) 100%);\n    background-size: 200% 200%;\n    animation: gradientShift 3s ease infinite;\n    padding: 2px;\n    border-radius: 1.5rem;\n  }\n  \n  .gradient-border > * {\n    @apply bg-background rounded-2xl;\n  }\n  \n  /* Apple-style frosted glass */\n  .frosted-glass {\n    background: linear-gradient(135deg,\n      hsl(var(--background) / 0.8) 0%,\n      hsl(var(--background) / 0.6) 100%);\n    backdrop-filter: blur(20px) saturate(180%);\n    border: 1px solid hsl(var(--border) / 0.3);\n    box-shadow: \n      0 8px 32px hsl(var(--primary) / 0.1),\n      0 1px 0 hsl(255 255 255 / 0.1) inset;\n  }\n  \n  /* Floating elements */\n  .float-animation {\n    animation: floatGentle 6s ease-in-out infinite;\n  }\n  \n  .float-animation-delayed {\n    animation: floatGentle 6s ease-in-out infinite -2s;\n  }\n  \n  /* Magnetic hover effect */\n  .magnetic-hover {\n    transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1);\n  }\n  \n  .magnetic-hover:hover {\n    transform: scale(1.05) rotate(1deg);\n  }\n  \n  /* Morphing blobs */\n  .blob-1 {\n    animation: blob1 20s infinite;\n    background: linear-gradient(45deg, hsl(var(--primary) / 0.1), hsl(var(--accent-blue) / 0.1));\n  }\n  \n  .blob-2 {\n    animation: blob2 20s infinite -10s;\n    background: linear-gradient(45deg, hsl(var(--accent-mint) / 0.1), hsl(var(--primary) / 0.1));\n  }\n  \n  /* Animations */\n  .fade-in-up {\n    animation: fadeInUp 0.6s ease-out forwards;\n  }\n  \n  .fade-in-scale {\n    animation: fadeInScale 0.5s ease-out forwards;\n  }\n  \n  .bounce-in {\n    animation: bounceIn 0.8s ease-out forwards;\n  }\n  \n  .slide-in-left {\n    animation: slideInLeft 0.6s ease-out forwards;\n  }\n  \n  .slide-in-right {\n    animation: slideInRight 0.6s ease-out forwards;\n  }\n  \n  /* Button Variants */\n  .btn-gradient {\n    @apply bg-gradient-to-r from-primary to-primary/90 text-primary-foreground font-semibold px-6 py-3 rounded-xl hover:from-primary/90 hover:to-primary transition-all duration-300 shadow-lg hover:shadow-xl transform hover:-translate-y-0.5;\n  }\n  \n  .btn-outline-gradient {\n    @apply border-2 border-transparent bg-gradient-to-r from-primary to-accent-blue bg-clip-border text-transparent font-semibold px-6 py-3 rounded-xl hover:text-primary-foreground hover:bg-gradient-to-r hover:from-primary hover:to-accent-blue transition-all duration-300;\n    background-clip: padding-box;\n  }\n  \n  /* Cards */\n  .card-glow {\n    @apply bg-background/95 backdrop-blur-sm border border-border/50 rounded-2xl shadow-lg hover:shadow-xl hover:border-primary/20 transition-all duration-300;\n  }\n  \n  .card-hover-lift {\n    @apply transform transition-all duration-300 hover:-translate-y-2 hover:shadow-2xl;\n  }\n  \n  /* Text Effects */\n  .text-glow {\n    text-shadow: 0 0 10px hsl(var(--primary) / 0.5);\n  }\n  \n  .text-shimmer {\n    background: linear-gradient(\n      90deg,\n      hsl(var(--muted-foreground)) 0%,\n      hsl(var(--primary)) 50%,\n      hsl(var(--muted-foreground)) 100%\n    );\n    background-size: 200% 100%;\n    background-clip: text;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    animation: shimmer 2s infinite;\n  }\n\n  /* Loading States */\n  .skeleton {\n    @apply bg-gradient-to-r from-muted via-muted/50 to-muted bg-[length:200%_100%] animate-pulse;\n  }\n  \n  .pulse-glow {\n    animation: pulseGlow 2s ease-in-out infinite;\n  }\n}\n\n@layer utilities {\n  /* Scrollbar Styling */\n  .scrollbar-thin {\n    scrollbar-width: thin;\n  }\n  \n  .scrollbar-thin::-webkit-scrollbar {\n    width: 6px;\n  }\n  \n  .scrollbar-thin::-webkit-scrollbar-track {\n    @apply bg-muted rounded-full;\n  }\n  \n  .scrollbar-thin::-webkit-scrollbar-thumb {\n    @apply bg-primary/30 rounded-full hover:bg-primary/50;\n  }\n  \n  /* Focus States */\n  .focus-ring {\n    @apply focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2 focus:ring-offset-background;\n  }\n  \n  /* Responsive Text */\n  .text-responsive-xl {\n    @apply text-2xl sm:text-3xl lg:text-4xl xl:text-5xl;\n  }\n  \n  .text-responsive-lg {\n    @apply text-xl sm:text-2xl lg:text-3xl;\n  }\n  \n  .text-responsive-base {\n    @apply text-sm sm:text-base lg:text-lg;\n  }\n}\n\n/* Apple-style Keyframe Animations */\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(40px) scale(0.95);\n    filter: blur(4px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n    filter: blur(0);\n  }\n}\n\n@keyframes fadeInScale {\n  from {\n    opacity: 0;\n    transform: scale(0.8) rotateY(10deg);\n    filter: blur(2px);\n  }\n  to {\n    opacity: 1;\n    transform: scale(1) rotateY(0deg);\n    filter: blur(0);\n  }\n}\n\n@keyframes bounceIn {\n  0% {\n    opacity: 0;\n    transform: scale(0.1) rotate(-15deg);\n  }\n  50% {\n    transform: scale(1.1) rotate(5deg);\n  }\n  70% {\n    transform: scale(0.95) rotate(-2deg);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1) rotate(0deg);\n  }\n}\n\n@keyframes slideInLeft {\n  from {\n    opacity: 0;\n    transform: translateX(-80px) rotateY(-20deg);\n    filter: blur(3px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0) rotateY(0deg);\n    filter: blur(0);\n  }\n}\n\n@keyframes slideInRight {\n  from {\n    opacity: 0;\n    transform: translateX(80px) rotateY(20deg);\n    filter: blur(3px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0) rotateY(0deg);\n    filter: blur(0);\n  }\n}\n\n@keyframes shimmer {\n  0% {\n    background-position: -200% 0;\n    transform: skewX(-15deg);\n  }\n  50% {\n    transform: skewX(0deg);\n  }\n  100% {\n    background-position: 200% 0;\n    transform: skewX(15deg);\n  }\n}\n\n@keyframes pulseGlow {\n  0%, 100% {\n    box-shadow: \n      0 0 5px hsl(var(--primary) / 0.3),\n      0 0 10px hsl(var(--primary) / 0.2),\n      0 0 15px hsl(var(--primary) / 0.1);\n    transform: scale(1);\n  }\n  50% {\n    box-shadow: \n      0 0 20px hsl(var(--primary) / 0.6),\n      0 0 30px hsl(var(--primary) / 0.4),\n      0 0 40px hsl(var(--primary) / 0.2);\n    transform: scale(1.02);\n  }\n}\n\n@keyframes gradientShift {\n  0% { background-position: 0% 50%; }\n  50% { background-position: 100% 50%; }\n  100% { background-position: 0% 50%; }\n}\n\n@keyframes floatGentle {\n  0%, 100% { \n    transform: translateY(0px) rotate(0deg);\n  }\n  25% { \n    transform: translateY(-10px) rotate(1deg);\n  }\n  50% { \n    transform: translateY(-20px) rotate(0deg);\n  }\n  75% { \n    transform: translateY(-10px) rotate(-1deg);\n  }\n}\n\n@keyframes blob1 {\n  0%, 100% {\n    transform: translate(0px, 0px) scale(1) rotate(0deg);\n    border-radius: 60% 40% 30% 70% / 60% 30% 70% 40%;\n  }\n  25% {\n    transform: translate(30px, -50px) scale(1.1) rotate(90deg);\n    border-radius: 40% 60% 70% 30% / 40% 70% 30% 60%;\n  }\n  50% {\n    transform: translate(-20px, 20px) scale(0.9) rotate(180deg);\n    border-radius: 70% 30% 40% 60% / 30% 60% 40% 70%;\n  }\n  75% {\n    transform: translate(-30px, -30px) scale(1.05) rotate(270deg);\n    border-radius: 30% 70% 60% 40% / 70% 40% 60% 30%;\n  }\n}\n\n@keyframes blob2 {\n  0%, 100% {\n    transform: translate(0px, 0px) scale(1) rotate(0deg);\n    border-radius: 40% 60% 70% 30% / 60% 30% 70% 40%;\n  }\n  33% {\n    transform: translate(50px, 30px) scale(1.2) rotate(120deg);\n    border-radius: 60% 40% 30% 70% / 40% 70% 30% 60%;\n  }\n  66% {\n    transform: translate(-40px, -10px) scale(0.8) rotate(240deg);\n    border-radius: 30% 70% 60% 40% / 70% 40% 60% 30%;\n  }\n}\n\n@keyframes morphing {\n  0%, 100% {\n    border-radius: 60% 40% 30% 70% / 60% 30% 70% 40%;\n    transform: translate(0, 0) rotateZ(0deg);\n  }\n  50% {\n    border-radius: 40% 60% 70% 30% / 40% 70% 30% 60%;\n    transform: translate(50px, -30px) rotateZ(180deg);\n  }\n}\n\n@keyframes particleFloat {\n  0% {\n    transform: translateY(0px) rotate(0deg);\n    opacity: 1;\n  }\n  50% {\n    transform: translateY(-100px) rotate(180deg);\n    opacity: 0.5;\n  }\n  100% {\n    transform: translateY(-200px) rotate(360deg);\n    opacity: 0;\n  }\n}\n\n/* Apple-style utility classes */\n.animate-fade-in-up {\n  animation: fadeInUp 0.8s ease-out forwards;\n}\n\n.animate-fade-in-scale {\n  animation: fadeInScale 0.6s ease-out forwards;\n}\n\n.animate-bounce-in {\n  animation: bounceIn 0.8s ease-out forwards;\n}\n\n.animate-slide-in-left {\n  animation: slideInLeft 0.7s ease-out forwards;\n}\n\n.animate-slide-in-right {\n  animation: slideInRight 0.7s ease-out forwards;\n}\n\n.animate-shimmer {\n  background: linear-gradient(\n    90deg,\n    transparent 0%,\n    rgba(255, 255, 255, 0.4) 50%,\n    transparent 100%\n  );\n  background-size: 200% 100%;\n  animation: shimmer 2s infinite;\n}\n\n.animate-pulse-glow {\n  animation: pulseGlow 2s ease-in-out infinite;\n}\n\n.animate-gradient-shift {\n  background-size: 200% 200%;\n  animation: gradientShift 3s ease-in-out infinite;\n}\n\n.float-animation {\n  animation: floatGentle 4s ease-in-out infinite;\n}\n\n.float-animation-delayed {\n  animation: floatGentle 4s ease-in-out infinite 2s;\n}\n\n.blob-1 {\n  background: linear-gradient(45deg, hsl(var(--primary) / 0.1), hsl(var(--accent-blue) / 0.1));\n  animation: blob1 20s ease-in-out infinite;\n}\n\n.blob-2 {\n  background: linear-gradient(45deg, hsl(var(--accent-mint) / 0.1), hsl(var(--primary) / 0.1));\n  animation: blob2 25s ease-in-out infinite;\n}\n\n/* Frosted glass effect */\n.frosted-glass {\n  background: rgba(255, 255, 255, 0.1);\n  backdrop-filter: blur(20px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n}\n\n/* Magnetic hover effect */\n.magnetic-hover {\n  transition: transform 0.3s ease-out;\n}\n\n.magnetic-hover:hover {\n  transform: scale(1.05) rotate(2deg);\n}\n\n/* Pulse glow effect */\n.pulse-glow {\n  animation: pulseGlow 2s ease-in-out infinite;\n}\n\n/* Enhanced shadow for depth */\n.shadow-4xl {\n  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);\n}\n\n/* Animation delays */\n.delay-200 {\n  animation-delay: 0.2s;\n}\n\n.delay-300 {\n  animation-delay: 0.3s;\n}\n\n.delay-400 {\n  animation-delay: 0.4s;\n}\n\n.delay-500 {\n  animation-delay: 0.5s;\n}\n\n.delay-600 {\n  animation-delay: 0.6s;\n}\n\n/* Advanced Animation Keyframes */\n@keyframes geometricFloat {\n  0%, 100% {\n    transform: translate(0, 0) rotate(0deg) scale(1);\n  }\n  25% {\n    transform: translate(20px, -30px) rotate(90deg) scale(1.1);\n  }\n  50% {\n    transform: translate(-10px, -20px) rotate(180deg) scale(0.9);\n  }\n  75% {\n    transform: translate(-30px, 10px) rotate(270deg) scale(1.05);\n  }\n}\n\n@keyframes particleFloatAdvanced {\n  0% {\n    transform: translateY(0) translateX(0) rotate(0deg);\n    opacity: 0;\n  }\n  10% {\n    opacity: 1;\n  }\n  90% {\n    opacity: 1;\n  }\n  100% {\n    transform: translateY(-300px) translateX(50px) rotate(360deg);\n    opacity: 0;\n  }\n}\n\n@keyframes orbit {\n  from {\n    transform: rotate(0deg) translateX(48px) rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg) translateX(48px) rotate(-360deg);\n  }\n}\n\n@keyframes morphShape {\n  0%, 100% {\n    border-radius: 60% 40% 30% 70% / 60% 30% 70% 40%;\n    transform: translate(0, 0) rotate(0deg) scale(1);\n  }\n  20% {\n    border-radius: 30% 60% 70% 40% / 50% 60% 30% 60%;\n    transform: translate(10px, -10px) rotate(72deg) scale(1.1);\n  }\n  40% {\n    border-radius: 70% 30% 40% 60% / 30% 70% 40% 60%;\n    transform: translate(-5px, 15px) rotate(144deg) scale(0.9);\n  }\n  60% {\n    border-radius: 40% 70% 60% 30% / 70% 40% 60% 30%;\n    transform: translate(-15px, -5px) rotate(216deg) scale(1.05);\n  }\n  80% {\n    border-radius: 60% 30% 70% 40% / 40% 60% 30% 70%;\n    transform: translate(5px, 10px) rotate(288deg) scale(0.95);\n  }\n}\n\n@keyframes spinSlow {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes spinReverse {\n  from {\n    transform: rotate(360deg);\n  }\n  to {\n    transform: rotate(0deg);\n  }\n}\n\n@keyframes waveMotion {\n  0%, 100% {\n    transform: translateY(0px);\n  }\n  50% {\n    transform: translateY(-20px);\n  }\n}\n\n@keyframes colorShift {\n  0%, 100% {\n    filter: hue-rotate(0deg);\n  }\n  50% {\n    filter: hue-rotate(180deg);\n  }\n}\n\n@keyframes gradientShift {\n  0%, 100% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n}\n\n@keyframes scaleUp {\n  0% {\n    transform: scale(0);\n    opacity: 0;\n  }\n  100% {\n    transform: scale(1);\n    opacity: 1;\n  }\n}\n\n@keyframes slideInFromLeft {\n  0% {\n    transform: translateX(-100vw);\n    opacity: 0;\n  }\n  100% {\n    transform: translateX(0);\n    opacity: 1;\n  }\n}\n\n@keyframes slideInFromRight {\n  0% {\n    transform: translateX(100vw);\n    opacity: 0;\n  }\n  100% {\n    transform: translateX(0);\n    opacity: 1;\n  }\n}\n\n@keyframes slideInFromTop {\n  0% {\n    transform: translateY(-100vh);\n    opacity: 0;\n  }\n  100% {\n    transform: translateY(0);\n    opacity: 1;\n  }\n}\n\n@keyframes slideInFromBottom {\n  0% {\n    transform: translateY(100vh);\n    opacity: 0;\n  }\n  100% {\n    transform: translateY(0);\n    opacity: 1;\n  }\n}\n\n/* Advanced Utility Classes */\n.animate-spin-slow {\n  animation: spinSlow 8s linear infinite;\n}\n\n.animate-spin-reverse {\n  animation: spinReverse 6s linear infinite;\n}\n\n.animate-morph-shape {\n  animation: morphShape 8s ease-in-out infinite;\n}\n\n.animate-morph-shape-reverse {\n  animation: morphShape 10s ease-in-out infinite reverse;\n}\n\n.animate-wave {\n  animation: waveMotion 3s ease-in-out infinite;\n}\n\n.animate-color-shift {\n  animation: colorShift 4s ease-in-out infinite;\n}\n\n.animate-scale-up {\n  animation: scaleUp 0.6s ease-out;\n}\n\n.animate-slide-in-left {\n  animation: slideInFromLeft 0.8s ease-out;\n}\n\n.animate-slide-in-right {\n  animation: slideInFromRight 0.8s ease-out;\n}\n\n.animate-slide-in-top {\n  animation: slideInFromTop 0.8s ease-out;\n}\n\n.animate-slide-in-bottom {\n  animation: slideInFromBottom 0.8s ease-out;\n}\n\n.animate-particle-float {\n  animation: particleFloatAdvanced 15s linear infinite;\n}\n\n/* Advanced Interactive Effects */\n.hover-3d {\n  transform-style: preserve-3d;\n  transition: transform 0.5s ease;\n}\n\n.hover-3d:hover {\n  transform: perspective(1000px) rotateX(10deg) rotateY(10deg) translateZ(20px);\n}\n\n.magnetic-attraction {\n  transition: transform 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n}\n\n.magnetic-attraction:hover {\n  transform: scale(1.1) translateY(-10px);\n  filter: drop-shadow(0 10px 20px rgba(0, 0, 0, 0.2));\n}\n\n.text-glow {\n  text-shadow: 0 0 10px hsl(var(--primary) / 0.5),\n               0 0 20px hsl(var(--primary) / 0.3),\n               0 0 30px hsl(var(--primary) / 0.2);\n}\n\n.text-glow-blue {\n  text-shadow: 0 0 10px hsl(var(--accent-blue) / 0.5),\n               0 0 20px hsl(var(--accent-blue) / 0.3),\n               0 0 30px hsl(var(--accent-blue) / 0.2);\n}\n\n.text-glow-mint {\n  text-shadow: 0 0 10px hsl(var(--accent-mint) / 0.5),\n               0 0 20px hsl(var(--accent-mint) / 0.3),\n               0 0 30px hsl(var(--accent-mint) / 0.2);\n}\n\n.gradient-text-animated {\n  background: linear-gradient(45deg, hsl(var(--primary)), hsl(var(--accent-blue)), hsl(var(--accent-mint)), hsl(var(--primary)));\n  background-size: 300% 300%;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  animation: gradientShift 3s ease-in-out infinite;\n}\n\n/* Enhanced Glass Morphism */\n.ultra-glass {\n  background: rgba(255, 255, 255, 0.05);\n  backdrop-filter: blur(30px) saturate(180%);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  box-shadow: \n    0 8px 32px rgba(0, 0, 0, 0.1),\n    inset 0 1px 0 rgba(255, 255, 255, 0.2);\n}\n\n.neon-border {\n  border: 2px solid transparent;\n  background: linear-gradient(45deg, hsl(var(--primary)), hsl(var(--accent-blue))) border-box;\n  mask: linear-gradient(#fff 0 0) padding-box, linear-gradient(#fff 0 0);\n  mask-composite: exclude;\n}\n\n/* Responsive Animation Controls */\n@media (prefers-reduced-motion: reduce) {\n  *, *::before, *::after {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n  }\n}\n\n/* Accessibility */\n@media (prefers-reduced-motion: reduce) {\n  .hover-lift,\n  .fade-in-up,\n  .fade-in-scale,\n  .bounce-in,\n  .slide-in-left,\n  .slide-in-right {\n    animation: none;\n    transition: none;\n  }\n  \n  .hover-lift:hover {\n    transform: none;\n  }\n}\n\n/* Print Styles */\n@media print {\n  .hover-lift,\n  .card-hover-lift {\n    transform: none !important;\n    box-shadow: none !important;\n  }\n}\n\n/* High Contrast Mode */\n@media (prefers-contrast: high) {\n  .gradient-text {\n    background: none;\n    color: hsl(var(--primary));\n  }\n}\n\n@keyframes float {\n  0%, 100% { transform: translateY(0px); }\n  50% { transform: translateY(-20px); }\n}\n\n@keyframes fadeInUp {\n  0% { opacity: 0; transform: translateY(30px); }\n  100% { opacity: 1; transform: translateY(0); }\n}\n\n@keyframes scaleIn {\n  0% { opacity: 0; transform: scale(0.9); }\n  100% { opacity: 1; transform: scale(1); }\n}\n\n/* Custom scrollbar */\n::-webkit-scrollbar {\n  width: 6px;\n}\n\n::-webkit-scrollbar-track {\n  @apply bg-muted;\n}\n\n::-webkit-scrollbar-thumb {\n  @apply bg-primary rounded-full;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  @apply bg-primary/80;\n}\n","size_bytes":22580},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/hooks/use-language.tsx":{"content":"import { createContext, useContext, useState, ReactNode } from 'react';\nimport { translations, Language, TranslationKey } from '@/lib/translations';\n\ninterface LanguageContextType {\n  language: Language;\n  setLanguage: (lang: Language) => void;\n  t: (key: TranslationKey) => string;\n}\n\nconst LanguageContext = createContext<LanguageContextType | undefined>(undefined);\n\nexport function LanguageProvider({ children }: { children: ReactNode }) {\n  const [language, setLanguage] = useState<Language>('tr');\n\n  const t = (key: TranslationKey): string => {\n    return translations[language][key] || key;\n  };\n\n  return (\n    <LanguageContext.Provider value={{ language, setLanguage, t }}>\n      {children}\n    </LanguageContext.Provider>\n  );\n}\n\nexport function useLanguage() {\n  const context = useContext(LanguageContext);\n  if (context === undefined) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n}\n","size_bytes":950},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/translations.ts":{"content":"export const translations = {\n  tr: {\n    // Navigation\n    products: \"Ürünler\",\n    howItWorks: \"Nasıl Çalışır\",\n    pricing: \"Fiyatlandırma\",\n    about: \"Hakkımızda\",\n    resources: \"Kaynaklar\",\n    contact: \"İletişim\",\n    startFree: \"Ücretsiz Başla\",\n    watchDemo: \"Demoyu İzle\",\n\n    // Hero Section\n    heroTitle: \"Tek bir AI ile büyümeyi basitleştir\",\n    heroSubtitle: \"EraEnvision; girişimciler, işletmeler ve yatırımcılar için kişiselleştirilmiş AI danışmanıyla fikirden ölçeğe uzanan net yol haritaları çıkarır.\",\n\n    // Trust Metrics\n    roadmapsCreated: \"Yol haritası\",\n    averageIncrease: \"Ortalama artış\",\n    segmentsOnePlatform: \"Segment, tek platform\",\n\n    // Features\n    whyEraEnvision: \"Neden EraEnvision?\",\n    featuresSubtitle: \"Büyümeyi hızlandıran üç temel özellik\",\n    aiConsultant: \"AI Danışman\",\n    aiConsultantDesc: \"Kişiselleştirilmiş bağlamla dakikalar içinde net yol haritaları\",\n    modularTools: \"Modüler Araçlar\",\n    modularToolsDesc: \"SEO, sosyal medya, pazarlama otomasyonu - ihtiyacınız kadar\",\n    automationFocused: \"Otomasyon Odaklı\",\n    automationFocusedDesc: \"Manuel işleri minimize et, büyümeye odaklan\",\n\n    // Segments\n    threeSegmentsOnePlatform: \"Üç Segment, Bir Platform\",\n    customizedSolutions: \"İhtiyacınıza göre özelleştirilmiş çözümler\",\n    \n    // Launch Segment\n    forEntrepreneurs: \"Girişimciler İçin\",\n    launchTitle: \"Launch — Fikrini hızla doğrula, yol haritanı netleştir\",\n    launchSubtitle: \"Pazar boyutu, rakipler, riskler ve MVP adımlarını AI ile saniyeler içinde gör. Tek ekranda uygulanabilir plan.\",\n    ideaGeneration: \"Fikir Jenerasyonu\",\n    ideaGenerationDesc: \"AI destekli yaratıcı beyin fırtınası\",\n    marketAnalysis: \"Pazar Analizi\",\n    marketAnalysisDesc: \"Otomatik rakip ve fırsat analizi\",\n    mvpRoadmap: \"MVP Roadmap\",\n    mvpRoadmapDesc: \"Adım adım geliştirme planı\",\n    sampleRoadmap: \"Örnek Yol Haritası Gör\",\n\n    // Scale Segment\n    forBusinesses: \"İşletmeler İçin\",\n    scaleTitle: \"Scale — E‑ticaret ve operasyonlarını akıllıca büyüt\",\n    scaleSubtitle: \"Huniler, SEO/ads ve otomasyonlar için veri‑temelli öneriler. ROI'yi artıran tekrarlanabilir planlar.\",\n    funnelOptimization: \"Huni Optimizasyonu\",\n    funnelOptimizationDesc: \"Dönüşüm oranlarını artıran stratejiler\",\n    seoAdsPrescriptions: \"SEO & Ads Reçeteleri\",\n    seoAdsPrescriptionsDesc: \"Aksiyon odaklı pazarlama önerileri\",\n    automationIntegration: \"Otomasyon Entegrasyonu\",\n    automationIntegrationDesc: \"CRM ve operasyonel sistemler\",\n    requestDemo: \"Demo Talep Et\",\n    seeAuditExample: \"Audit Örneğini Gör\",\n\n    // Invest Segment\n    forInvestors: \"Yatırımcılar İçin\",\n    investTitle: \"Invest — Gürültüyü filtrele, sinyalin peşinden git\",\n    investSubtitle: \"Yatırım tezinle eşleşen girişimleri AI ile puanla, listeni yönet, uyarılar al.\",\n    profileDiscovery: \"Profil Keşfi\",\n    profileDiscoveryDesc: \"AI destekli girişim taraması\",\n    thesisMatching: \"Tez Eşleşmesi\",\n    thesisMatchingDesc: \"Yatırım kriterlerinizle otomatik eşleştirme\",\n    watchLists: \"İzleme Listeleri\",\n    watchListsDesc: \"Organize edilmiş takip ve uyarı sistemi\",\n    earlyAccess: \"Erken Erişim\",\n    sampleScoreCard: \"Örnek Skor Kartı\",\n\n    // How It Works\n    howItWorksTitle: \"Nasıl Çalışır?\",\n    howItWorksSubtitle: \"4 basit adımda büyümeye başla\",\n    defineProfile: \"Profilini Tanı\",\n    defineProfileDesc: \"Hedeflerini, durumunu ve önceliklerini belirle\",\n    getYourRoadmap: \"Yol Haritanı Al\",\n    getRoadmapDesc: \"AI danışmanından kişiselleştirilmiş plan al\",\n    executeActions: \"Aksiyonları Uygula\",\n    executeActionsDesc: \"Adım adım önerileri hayata geçir\",\n    trackResults: \"Sonuçları İzle\",\n    trackResultsDesc: \"İlerlemeyi takip et ve planını optimize et\",\n    tryItNow: \"Hemen Deneyimle\",\n\n    // Pricing\n    pricingTitle: \"Basit ve Şeffaf Fiyatlandırma\",\n    pricingSubtitle: \"İhtiyacına göre ölçeklenebilir planlar\",\n    currency: \"Para Birimi:\",\n    monthly: \"Aylık\",\n    yearly: \"Yıllık\",\n    discount20: \"%20 İndirim\",\n    \n    // Plans\n    starter: \"Starter\",\n    pro: \"Pro\",\n    business: \"Business\",\n    enterprise: \"Enterprise\",\n    popular: \"Popüler\",\n    custom: \"Özel\",\n    \n    // Plan Features\n    roadmapsPerMonth: \"yol haritası/ay\",\n    basicAiConsultant: \"Temel AI danışman\",\n    emailSupport: \"E-posta desteği\",\n    advancedAiConsultant: \"Gelişmiş AI danışman\",\n    seoAnalysis: \"SEO analizi\",\n    prioritySupport: \"Öncelikli destek\",\n    unlimitedRoadmaps: \"Sınırsız yol haritası\",\n    allModularTools: \"Tüm modüler araçlar\",\n    crmIntegration: \"CRM entegrasyonu\",\n    support24_7: \"7/24 destek\",\n    customSolutions: \"Özel çözümler\",\n    customIntegrations: \"Özel entegrasyonlar\",\n    customTraining: \"Özel eğitim\",\n    dedicatedSupport: \"Özel destek\",\n    \n    contactSales: \"Satışla Görüş\",\n    startPro: \"Pro'ya Başla\",\n    startBusiness: \"Business'a Başla\",\n    \n    pricingDisclaimer: \"Tüm planlar 14 gün ücretsiz deneme ile gelir. İstediğin zaman iptal edebilirsin.\",\n\n    // Testimonials\n    testimonialsTitle: \"Müşterilerimiz Ne Diyor?\",\n\n    // FAQ\n    faqTitle: \"Sık Sorulan Sorular\",\n    \n    // FAQ Questions\n    howDoesItWork: \"EraEnvision nasıl çalışır?\",\n    howDoesItWorkAnswer: \"EraEnvision, AI destekli danışmanımız ile profilinizi analiz eder ve size özel yol haritaları oluşturur. Bu yol haritaları, sektörünüze ve hedeflerinize göre kişiselleştirilmiş aksiyonlar içerir.\",\n    \n    whichSegments: \"Hangi segmentler için uygundur?\",\n    whichSegmentsAnswer: \"EraEnvision üç ana segment için tasarlanmıştır: Launch (Girişimciler), Scale (İşletmeler) ve Invest (Yatırımcılar). Her segment kendine özel özellikler ve araçlar sunar.\",\n    \n    isDataSafe: \"Verilerim güvende mi?\",\n    isDataSafeAnswer: \"Evet, tüm verileriniz KVKK ve GDPR standartlarına uygun olarak korunmaktadır. Verilerinizi hiçbir üçüncü tarafla paylaşmıyoruz ve en yüksek güvenlik standartlarını uyguluyoruz.\",\n    \n    freeTrialAvailable: \"Ücretsiz deneme var mı?\",\n    freeTrialAvailableAnswer: \"Evet, tüm ücretli planlarımız 14 gün ücretsiz deneme ile gelir. Starter planımız ise tamamen ücretsizdir ve temel özellikleri içerir.\",\n    \n    aiReliability: \"AI önerileri ne kadar güvenilir?\",\n    aiReliabilityAnswer: \"AI önerilerimiz geniş veri setleri ve başarılı örnekler üzerinde eğitilmiştir. Ancak, tüm kararlar size aittir ve önerileri kendi durumunuza göre değerlendirmeniz önemlidir.\",\n\n    // Contact\n    contactTitle: \"İletişime Geçin\",\n    contactSubtitle: \"Sorularınızı yanıtlamaktan memnuniyet duyarız\",\n    fullName: \"Ad Soyad\",\n    fullNamePlaceholder: \"Adınız ve soyadınız\",\n    email: \"E-posta\",\n    emailPlaceholder: \"ornek@email.com\",\n    company: \"Şirket\",\n    companyPlaceholder: \"Şirket adınız (opsiyonel)\",\n    country: \"Ülke\",\n    segmentInterest: \"İlgilendiğiniz Segment\",\n    budgetRange: \"Bütçe Aralığı\",\n    yourMessage: \"Mesajınız\",\n    messagePlaceholder: \"Nasıl yardımcı olabiliriz?\",\n    kvkkConsent: \"KVKK kapsamında kişisel verilerimin işlenmesini kabul ediyorum.\",\n    marketingConsent: \"Pazarlama iletişimlerini almayı kabul ediyorum.\",\n    sendMessage: \"Mesaj Gönder\",\n    \n    // Countries\n    turkey: \"Türkiye\",\n    unitedStates: \"United States\",\n    germany: \"Germany\",\n    france: \"France\",\n    unitedKingdom: \"United Kingdom\",\n    other: \"Diğer\",\n\n    // CTA Banner\n    ctaBannerTitle: \"Gürültüyü kes. Büyümeyi hızlandır.\",\n    ctaBannerSubtitle: \"AI destekli danışmanınla bugün büyümeye başla\",\n\n    // Footer\n    footerDescription: \"AI destekli iş büyütme ve dijital dönüşüm platformu. Girişimciler, işletmeler ve yatırımcılar için kişiselleştirilmiş çözümler.\",\n    \n    // Footer Links\n    companyFooter: \"Şirket\",\n    careers: \"Kariyer\",\n    blog: \"Blog\",\n    legal: \"Hukuki\",\n    privacyPolicy: \"Gizlilik Politikası\",\n    termsOfService: \"Kullanım Şartları\",\n    cookiePolicy: \"Çerez Politikası\",\n    aiDisclaimer: \"AI Sorumluluk Reddi\",\n    \n    footerCopyright: \"© 2024 EraEnvision. Tüm hakları saklıdır.\",\n    footerDisclaimer: \"AI çıktıları bilgilendiricidir; kararlar kullanıcı sorumluluğundadır.\",\n\n    // Cookie Consent\n    cookieMessage: \"Bu site çerezler kullanır. Devam ederek çerez politikamızı kabul etmiş olursunuz.\",\n    cookiePolicyLink: \"Çerez Politikası\",\n    manageCookies: \"Yönet\",\n    acceptCookies: \"Kabul Et\",\n  },\n  en: {\n    // Navigation\n    products: \"Products\",\n    howItWorks: \"How It Works\",\n    pricing: \"Pricing\",\n    about: \"About\",\n    resources: \"Resources\",\n    contact: \"Contact\",\n    startFree: \"Start Free\",\n    watchDemo: \"Watch Demo\",\n\n    // Hero Section\n    heroTitle: \"Simplify growth with one AI\",\n    heroSubtitle: \"EraEnvision creates clear roadmaps from idea to scale with personalized AI consulting for entrepreneurs, businesses, and investors.\",\n\n    // Trust Metrics\n    roadmapsCreated: \"Roadmaps\",\n    averageIncrease: \"Average growth\",\n    segmentsOnePlatform: \"Segments, one platform\",\n\n    // Features\n    whyEraEnvision: \"Why EraEnvision?\",\n    featuresSubtitle: \"Three core features that accelerate growth\",\n    aiConsultant: \"AI Consultant\",\n    aiConsultantDesc: \"Clear roadmaps in minutes with personalized context\",\n    modularTools: \"Modular Tools\",\n    modularToolsDesc: \"SEO, social media, marketing automation - as much as you need\",\n    automationFocused: \"Automation Focused\",\n    automationFocusedDesc: \"Minimize manual work, focus on growth\",\n\n    // Segments\n    threeSegmentsOnePlatform: \"Three Segments, One Platform\",\n    customizedSolutions: \"Customized solutions for your needs\",\n    \n    // Launch Segment\n    forEntrepreneurs: \"For Entrepreneurs\",\n    launchTitle: \"Launch — Quickly validate your idea, clarify your roadmap\",\n    launchSubtitle: \"See market size, competitors, risks, and MVP steps with AI in seconds. Actionable plan on one screen.\",\n    ideaGeneration: \"Idea Generation\",\n    ideaGenerationDesc: \"AI-powered creative brainstorming\",\n    marketAnalysis: \"Market Analysis\",\n    marketAnalysisDesc: \"Automatic competitor and opportunity analysis\",\n    mvpRoadmap: \"MVP Roadmap\",\n    mvpRoadmapDesc: \"Step-by-step development plan\",\n    sampleRoadmap: \"See Sample Roadmap\",\n\n    // Scale Segment\n    forBusinesses: \"For Businesses\",\n    scaleTitle: \"Scale — Smartly grow your e-commerce and operations\",\n    scaleSubtitle: \"Data-driven recommendations for funnels, SEO/ads, and automation. Repeatable plans that increase ROI.\",\n    funnelOptimization: \"Funnel Optimization\",\n    funnelOptimizationDesc: \"Strategies that increase conversion rates\",\n    seoAdsPrescriptions: \"SEO & Ads Prescriptions\",\n    seoAdsPrescriptionsDesc: \"Action-focused marketing recommendations\",\n    automationIntegration: \"Automation Integration\",\n    automationIntegrationDesc: \"CRM and operational systems\",\n    requestDemo: \"Request Demo\",\n    seeAuditExample: \"See Audit Example\",\n\n    // Invest Segment\n    forInvestors: \"For Investors\",\n    investTitle: \"Invest — Filter noise, follow the signal\",\n    investSubtitle: \"Score startups that match your investment thesis with AI, manage your list, get alerts.\",\n    profileDiscovery: \"Profile Discovery\",\n    profileDiscoveryDesc: \"AI-powered startup screening\",\n    thesisMatching: \"Thesis Matching\",\n    thesisMatchingDesc: \"Automatic matching with your investment criteria\",\n    watchLists: \"Watch Lists\",\n    watchListsDesc: \"Organized tracking and alert system\",\n    earlyAccess: \"Early Access\",\n    sampleScoreCard: \"Sample Score Card\",\n\n    // How It Works\n    howItWorksTitle: \"How It Works?\",\n    howItWorksSubtitle: \"Start growing in 4 simple steps\",\n    defineProfile: \"Define Your Profile\",\n    defineProfileDesc: \"Define your goals, situation, and priorities\",\n    getYourRoadmap: \"Get Your Roadmap\",\n    getRoadmapDesc: \"Get a personalized plan from your AI consultant\",\n    executeActions: \"Execute Actions\",\n    executeActionsDesc: \"Implement step-by-step recommendations\",\n    trackResults: \"Track Results\",\n    trackResultsDesc: \"Track progress and optimize your plan\",\n    tryItNow: \"Try It Now\",\n\n    // Pricing\n    pricingTitle: \"Simple and Transparent Pricing\",\n    pricingSubtitle: \"Scalable plans according to your needs\",\n    currency: \"Currency:\",\n    monthly: \"Monthly\",\n    yearly: \"Yearly\",\n    discount20: \"20% Off\",\n    \n    // Plans\n    starter: \"Starter\",\n    pro: \"Pro\",\n    business: \"Business\",\n    enterprise: \"Enterprise\",\n    popular: \"Popular\",\n    custom: \"Custom\",\n    \n    // Plan Features\n    roadmapsPerMonth: \"roadmaps/month\",\n    basicAiConsultant: \"Basic AI consultant\",\n    emailSupport: \"Email support\",\n    advancedAiConsultant: \"Advanced AI consultant\",\n    seoAnalysis: \"SEO analysis\",\n    prioritySupport: \"Priority support\",\n    unlimitedRoadmaps: \"Unlimited roadmaps\",\n    allModularTools: \"All modular tools\",\n    crmIntegration: \"CRM integration\",\n    support24_7: \"24/7 support\",\n    customSolutions: \"Custom solutions\",\n    customIntegrations: \"Custom integrations\",\n    customTraining: \"Custom training\",\n    dedicatedSupport: \"Dedicated support\",\n    \n    contactSales: \"Contact Sales\",\n    startPro: \"Start Pro\",\n    startBusiness: \"Start Business\",\n    \n    pricingDisclaimer: \"All plans come with a 14-day free trial. Cancel anytime.\",\n\n    // Testimonials\n    testimonialsTitle: \"What Our Customers Say?\",\n\n    // FAQ\n    faqTitle: \"Frequently Asked Questions\",\n    \n    // FAQ Questions\n    howDoesItWork: \"How does EraEnvision work?\",\n    howDoesItWorkAnswer: \"EraEnvision analyzes your profile with our AI-powered consultant and creates personalized roadmaps for you. These roadmaps include personalized actions according to your industry and goals.\",\n    \n    whichSegments: \"Which segments is it suitable for?\",\n    whichSegmentsAnswer: \"EraEnvision is designed for three main segments: Launch (Entrepreneurs), Scale (Businesses), and Invest (Investors). Each segment offers its own features and tools.\",\n    \n    isDataSafe: \"Is my data safe?\",\n    isDataSafeAnswer: \"Yes, all your data is protected in accordance with KVKK and GDPR standards. We do not share your data with any third parties and apply the highest security standards.\",\n    \n    freeTrialAvailable: \"Is there a free trial?\",\n    freeTrialAvailableAnswer: \"Yes, all our paid plans come with a 14-day free trial. Our Starter plan is completely free and includes basic features.\",\n    \n    aiReliability: \"How reliable are AI recommendations?\",\n    aiReliabilityAnswer: \"Our AI recommendations are trained on extensive datasets and successful examples. However, all decisions are yours and it is important to evaluate recommendations according to your own situation.\",\n\n    // Contact\n    contactTitle: \"Get In Touch\",\n    contactSubtitle: \"We'd be happy to answer your questions\",\n    fullName: \"Full Name\",\n    fullNamePlaceholder: \"Your first and last name\",\n    email: \"Email\",\n    emailPlaceholder: \"example@email.com\",\n    company: \"Company\",\n    companyPlaceholder: \"Your company name (optional)\",\n    country: \"Country\",\n    segmentInterest: \"Segment of Interest\",\n    budgetRange: \"Budget Range\",\n    yourMessage: \"Your Message\",\n    messagePlaceholder: \"How can we help you?\",\n    kvkkConsent: \"I accept the processing of my personal data under KVKK.\",\n    marketingConsent: \"I accept to receive marketing communications.\",\n    sendMessage: \"Send Message\",\n    \n    // Countries\n    turkey: \"Turkey\",\n    unitedStates: \"United States\",\n    germany: \"Germany\",\n    france: \"France\",\n    unitedKingdom: \"United Kingdom\",\n    other: \"Other\",\n\n    // CTA Banner\n    ctaBannerTitle: \"Cut the noise. Accelerate growth.\",\n    ctaBannerSubtitle: \"Start growing today with your AI-powered consultant\",\n\n    // Footer\n    footerDescription: \"AI-powered business growth and digital transformation platform. Personalized solutions for entrepreneurs, businesses, and investors.\",\n    \n    // Footer Links\n    companyFooter: \"Company\",\n    careers: \"Careers\",\n    blog: \"Blog\",\n    legal: \"Legal\",\n    privacyPolicy: \"Privacy Policy\",\n    termsOfService: \"Terms of Service\",\n    cookiePolicy: \"Cookie Policy\",\n    aiDisclaimer: \"AI Disclaimer\",\n    \n    footerCopyright: \"© 2024 EraEnvision. All rights reserved.\",\n    footerDisclaimer: \"AI outputs are informative; decisions are the user's responsibility.\",\n\n    // Cookie Consent\n    cookieMessage: \"This site uses cookies. By continuing, you accept our cookie policy.\",\n    cookiePolicyLink: \"Cookie Policy\",\n    manageCookies: \"Manage\",\n    acceptCookies: \"Accept\",\n  },\n};\n\nexport type TranslationKey = keyof typeof translations.tr;\nexport type Language = keyof typeof translations;\n","size_bytes":16972},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/about.tsx":{"content":"import { Button } from '@/components/ui/button';\nimport { useLanguage } from '@/hooks/use-language';\nimport { Eye, Users, Target, Zap, Award, TrendingUp } from 'lucide-react';\n\nexport default function AboutPage() {\n  const { t } = useLanguage();\n\n  const values = [\n    {\n      icon: Target,\n      title: \"Dürüstlük\",\n      description: \"Her tavsiyemiz gerçek veriler ve kanıtlanmış stratejiler üzerine kuruludur. Gürültüyü kesmek için buradayız.\",\n      color: \"bg-primary/10 text-primary\"\n    },\n    {\n      icon: Zap,\n      title: \"Hız\",\n      description: \"Dakikalar içinde analiz, saatler içinde plan. Büyümeye odaklanırken zaman kaybetmeyeceksiniz.\",\n      color: \"bg-accent-blue/10 text-accent-blue\"\n    },\n    {\n      icon: TrendingUp,\n      title: \"Ölçülebilirlik\",\n      description: \"Her öneri ölçülebilir sonuçlar hedefler. İlerlemeyi takip edin, optimize edin, büyüyün.\",\n      color: \"bg-accent-mint/10 text-accent-mint\"\n    }\n  ];\n\n  const milestones = [\n    {\n      year: \"2024\",\n      title: \"EraEnvision Kuruluş\",\n      description: \"AI destekli iş danışmanlığı vizyonuyla yola çıktık\"\n    },\n    {\n      year: \"2024 Q2\",\n      title: \"Launch Segmenti\",\n      description: \"Girişimciler için AI destekli fikir doğrulama platformu\"\n    },\n    {\n      year: \"2024 Q3\",\n      title: \"Scale Segmenti\",\n      description: \"İşletmeler için e-ticaret ve operasyon optimizasyonu\"\n    },\n    {\n      year: \"2024 Q4\",\n      title: \"Invest Segmenti\",\n      description: \"Yatırımcılar için AI destekli deal sourcing\"\n    }\n  ];\n\n  const team = [\n    {\n      name: \"Emirhan\",\n      title: \"Founder & CEO\",\n      avatar: \"E\",\n      description: \"10+ yıl teknoloji ve iş geliştirme deneyimi\"\n    },\n    {\n      name: \"AI Team\",\n      title: \"Machine Learning Engineers\",\n      avatar: \"AI\",\n      description: \"Dünyanın en iyi AI modellerini iş çözümlerine dönüştürüyor\"\n    },\n    {\n      name: \"Product Team\",\n      title: \"Product & Design\",\n      avatar: \"P\",\n      description: \"Kullanıcı odaklı tasarım ve deneyim uzmanları\"\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Clean Hero Section */}\n      <section className=\"pt-24 pb-16 bg-gradient-to-br from-soft-paper to-background\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <h1 className=\"font-heading font-bold text-4xl lg:text-6xl mb-6 tracking-wide\">\n                <span>Neden </span>\n                <span className=\"gradient-text\">Varız?</span>\n              </h1>\n              <p className=\"text-xl text-muted-foreground mb-8 leading-relaxed\">\n                İş dünyasında gürültü çok, net planlar az. EraEnvision, AI'ın gücüyle \n                girişimciler, işletmeler ve yatırımcılar için karmaşayı keser, \n                eyleme geçirilebilir planlar sunar.\n              </p>\n              <div className=\"flex items-center space-x-6 text-muted-foreground\">\n                <div className=\"text-center\">\n                  <div className=\"text-3xl font-bold text-primary\">+120</div>\n                  <div className=\"text-sm\">Başarılı Proje</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-3xl font-bold text-primary\">3</div>\n                  <div className=\"text-sm\">Ana Segment</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-3xl font-bold text-primary\">2024</div>\n                  <div className=\"text-sm\">Kuruluş Yılı</div>\n                </div>\n              </div>\n            </div>\n            <div className=\"relative\">\n              <div className=\"relative z-10\">\n                <img \n                  src=\"https://images.unsplash.com/photo-1522071820081-009f0129c71c?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\" \n                  alt=\"Team collaboration and innovation\" \n                  className=\"rounded-3xl shadow-2xl w-full h-auto hover-lift\"\n                />\n              </div>\n              <div className=\"absolute -top-6 -right-6 w-32 h-32 bg-primary/10 rounded-full blur-3xl\"></div>\n              <div className=\"absolute -bottom-6 -left-6 w-24 h-24 bg-accent-blue/10 rounded-full blur-2xl\"></div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Mission Section */}\n      <section className=\"py-24 bg-background\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-heading font-bold text-3xl lg:text-4xl mb-4\">\n              Misyonumuz\n            </h2>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Her girişimcinin net bir yol haritası, her işletmenin optimal stratejisi, \n              her yatırımcının doğru fırsatları bulmasını sağlamak.\n            </p>\n          </div>\n          \n          <div className=\"bg-gradient-to-r from-primary/5 via-primary/10 to-primary/5 rounded-3xl p-12 text-center\">\n            <div className=\"max-w-4xl mx-auto\">\n              <div className=\"w-20 h-20 bg-primary rounded-3xl flex items-center justify-center mx-auto mb-8\">\n                <Eye className=\"h-10 w-10 text-primary-foreground\" />\n              </div>\n              <h3 className=\"font-heading font-bold text-2xl lg:text-3xl mb-6\">\n                Büyümeyi Basitleştir, Gürültüyü Kes\n              </h3>\n              <p className=\"text-lg text-muted-foreground leading-relaxed\">\n                İş dünyasında her gün binlerce tavsiye, strateji ve \"kesin çözüm\" ile karşılaşıyoruz. \n                Bizim amacımız bu gürültüyü kesmek ve size gerçekten işe yarayacak, \n                ölçülebilir sonuçlar verecek planlar sunmak. AI'ın analitik gücü ile \n                insan deneyimini birleştirerek, büyümenizi hızlandırıyoruz.\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Values Section */}\n      <section className=\"py-24 bg-soft-paper\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-heading font-bold text-3xl lg:text-4xl mb-4\">\n              Değerlerimiz\n            </h2>\n            <p className=\"text-xl text-muted-foreground\">\n              Her kararımızı yönlendiren temel ilkeler\n            </p>\n          </div>\n          \n          <div className=\"grid lg:grid-cols-3 gap-8\">\n            {values.map((value, index) => (\n              <div key={index} className=\"bg-background p-8 rounded-3xl shadow-lg hover-lift border border-border\">\n                <div className={`w-16 h-16 ${value.color} rounded-2xl flex items-center justify-center mb-6`}>\n                  <value.icon className=\"h-8 w-8\" />\n                </div>\n                <h3 className=\"font-heading font-semibold text-xl mb-4\">\n                  {value.title}\n                </h3>\n                <p className=\"text-muted-foreground leading-relaxed\">\n                  {value.description}\n                </p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Timeline Section */}\n      <section className=\"py-24 bg-background\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-heading font-bold text-3xl lg:text-4xl mb-4\">\n              Yolculuğumuz\n            </h2>\n            <p className=\"text-xl text-muted-foreground\">\n              EraEnvision'ın gelişim hikayesi\n            </p>\n          </div>\n          \n          <div className=\"space-y-8\">\n            {milestones.map((milestone, index) => (\n              <div key={index} className=\"flex items-start space-x-6 group\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"w-16 h-16 bg-primary rounded-2xl flex items-center justify-center text-primary-foreground font-bold text-lg group-hover:scale-110 transition-transform\">\n                    {milestone.year.slice(-2)}\n                  </div>\n                </div>\n                <div className=\"bg-soft-paper p-6 rounded-2xl flex-1 border border-border group-hover:border-primary/20 transition-colors\">\n                  <div className=\"flex items-center space-x-3 mb-2\">\n                    <span className=\"text-sm font-medium text-primary\">{milestone.year}</span>\n                    <div className=\"h-1 w-8 bg-primary rounded-full\"></div>\n                  </div>\n                  <h3 className=\"font-heading font-semibold text-xl mb-2\">\n                    {milestone.title}\n                  </h3>\n                  <p className=\"text-muted-foreground\">\n                    {milestone.description}\n                  </p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Team Section */}\n      <section className=\"py-24 bg-soft-paper\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-heading font-bold text-3xl lg:text-4xl mb-4\">\n              Ekibimiz\n            </h2>\n            <p className=\"text-xl text-muted-foreground\">\n              Büyümenizi mümkün kılan insanlar\n            </p>\n          </div>\n          \n          <div className=\"grid lg:grid-cols-3 gap-8\">\n            {team.map((member, index) => (\n              <div key={index} className=\"bg-background p-8 rounded-3xl shadow-lg hover-lift border border-border text-center\">\n                <div className=\"w-24 h-24 bg-primary/10 text-primary rounded-3xl flex items-center justify-center mx-auto mb-6 text-2xl font-bold\">\n                  {member.avatar}\n                </div>\n                <h3 className=\"font-heading font-semibold text-xl mb-2\">\n                  {member.name}\n                </h3>\n                <p className=\"text-primary font-medium mb-4\">\n                  {member.title}\n                </p>\n                <p className=\"text-muted-foreground text-sm\">\n                  {member.description}\n                </p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Stats Section */}\n      <section className=\"py-24 bg-background\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <div className=\"bg-gradient-to-r from-primary/5 via-primary/10 to-primary/5 rounded-3xl p-12\">\n            <div className=\"grid md:grid-cols-4 gap-8 text-center\">\n              <div>\n                <div className=\"text-4xl font-bold text-primary mb-2\">+120</div>\n                <div className=\"text-muted-foreground\">Başarılı Proje</div>\n              </div>\n              <div>\n                <div className=\"text-4xl font-bold text-primary mb-2\">%28</div>\n                <div className=\"text-muted-foreground\">Ortalama Büyüme</div>\n              </div>\n              <div>\n                <div className=\"text-4xl font-bold text-primary mb-2\">3</div>\n                <div className=\"text-muted-foreground\">Ana Segment</div>\n              </div>\n              <div>\n                <div className=\"text-4xl font-bold text-primary mb-2\">24/7</div>\n                <div className=\"text-muted-foreground\">AI Desteği</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-24 bg-gradient-to-r from-primary to-primary/90 text-primary-foreground\">\n        <div className=\"max-w-4xl mx-auto px-6 text-center\">\n          <h2 className=\"font-heading font-bold text-3xl lg:text-4xl mb-4\">\n            Bize Katılın\n          </h2>\n          <p className=\"text-xl opacity-90 mb-8\">\n            Büyümenizi hızlandırmaya hazır mısınız? Hemen başlayın.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button \n              size=\"lg\" \n              className=\"bg-background text-primary hover:bg-background/90 px-8 py-4 text-lg font-semibold hover-lift\"\n            >\n              {t('startFree')}\n            </Button>\n            <Button \n              variant=\"outline\" \n              size=\"lg\" \n              className=\"border-2 border-background text-background hover:bg-background hover:text-primary px-8 py-4 text-lg font-semibold hover-lift\"\n            >\n              İletişime Geç\n            </Button>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":12632},"client/src/pages/blog-post.tsx":{"content":"import { useParams } from 'wouter';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Separator } from '@/components/ui/separator';\nimport { ArrowLeft, Calendar, Clock, User, Share2, BookOpen, Tag } from 'lucide-react';\nimport { Link } from 'wouter';\n\ninterface BlogPost {\n  id: string;\n  title: string;\n  excerpt: string;\n  content: string;\n  author: string;\n  date: string;\n  readTime: number;\n  category: string;\n  tags: string[];\n  slug: string;\n}\n\nexport default function BlogPostPage() {\n  const params = useParams();\n  const slug = params.slug;\n\n  // Mock blog post data - in real app this would come from API/CMS\n  const blogPosts: Record<string, BlogPost> = {\n    'ai-ile-girisimcilik-2025-stratejileri': {\n      id: '1',\n      title: 'AI ile Girişimcilik: 2025\\'te Başarılı Olmak İçin 10 Strateji',\n      excerpt: 'Yapay zekanın girişimcilik dünyasını nasıl dönüştürdüğünü ve bu değişimde öne geçmek için neler yapmanız gerektiğini keşfedin.',\n      content: `\n        <p>2025 yılı, yapay zekanın iş dünyasında tam anlamıyla yerleşik hale geldiği bir dönem olarak tarihe geçecek. Girişimciler için bu durum hem büyük fırsatlar hem de yeni zorluklar anlamına geliyor.</p>\n\n        <h2>1. AI-First Düşünce Yapısını Benimseyin</h2>\n        <p>Artık \"bu işi AI ile nasıl yapabilirim?\" sorusunu sormak yerine, \"bu sorunu çözmek için AI'a nasıl ihtiyaç duymam?\" sorusunu sormalıyız. Bu paradigma değişimi, işinizin temellerinden başlayarak her süreci yeniden düşünmenizi gerektirir.</p>\n\n        <h2>2. Veri Toplama Stratejinizi Güçlendirin</h2>\n        <p>AI'ın gücü, beslenen verinin kalitesi ile doğru orantılıdır. Müşteri davranışlarından operasyonel süreçlere kadar her alanda sistematik veri toplama alışkanlığı geliştirin.</p>\n\n        <h2>3. Küçük Başlayın, Hızlı Ölçeklendirin</h2>\n        <p>AI implementasyonunda \"büyük patlama\" yaklaşımı yerine, küçük pilot projelerle başlayıp başarıları hızlıca ölçeklendirme stratejisi benimseyin.</p>\n\n        <h2>4. İnsan-AI İş Birliğini Optimize Edin</h2>\n        <p>AI'ın insanları değiştirmediği, onları güçlendirdiği alanları belirleyin. En büyük değer, insan yaratıcılığı ile AI verimliliğinin birleştiği noktalarda ortaya çıkar.</p>\n\n        <h2>5. Sürekli Öğrenme Kültürü Oluşturun</h2>\n        <p>AI teknolojileri hızla gelişiyor. Hem siz hem de ekibiniz için sürekli öğrenme ve adaptasyon kültürü oluşturmak kritik.</p>\n\n        <h2>6. Etik AI Kullanımını Öncelik Yapın</h2>\n        <p>Uzun vadeli başarı için AI kullanımında etik ilkeleri baştan tanımlayın ve sürekli denetleyin.</p>\n\n        <h2>7. Rakip Analizini AI ile Derinleştirin</h2>\n        <p>Geleneksel rakip analizi yöntemlerini AI destekli araçlarla geliştirerek pazar dinamiklerini daha iyi anlayın.</p>\n\n        <h2>8. Müşteri Deneyimini Kişiselleştirin</h2>\n        <p>AI ile her müşteriye özgü deneyimler yaratarak sadakat ve gelir artışı sağlayın.</p>\n\n        <h2>9. Operasyonel Verimliliği Artırın</h2>\n        <p>Rutin işlemleri AI ile otomatikleştirerek ekibinizi daha değer yaratan işlere odaklayın.</p>\n\n        <h2>10. Gelecek Senaryolarını Planlayın</h2>\n        <p>AI'ın sektörünüzü nasıl değiştireceğini öngörerek proaktif stratejiler geliştirin.</p>\n\n        <h2>Sonuç</h2>\n        <p>2025 yılında AI ile girişimcilik yapmak, teknoloji odaklı olmaktan çok, teknoloji destekli insan odaklı çözümler üretmek anlamına gelir. Başarının anahtarı, AI'ı bir araç olarak görüp, gerçek değeri müşteri problemlerine odaklanarak yaratmakta yatar.</p>\n      `,\n      author: 'Emirhan Akdeniz',\n      date: '2025-01-10',\n      readTime: 8,\n      category: 'AI & Girişimcilik',\n      tags: ['AI', 'Girişimcilik', 'Strateji', 'İnovasyon'],\n      slug: 'ai-ile-girisimcilik-2025-stratejileri'\n    },\n    'e-ticaret-buyutme-veri-odakli-yaklasimlar': {\n      id: '2',\n      title: 'E-ticaret Büyütme: Veri Odaklı Yaklaşımlar',\n      excerpt: 'E-ticaret işletmenizi büyütürken veriyi nasıl kullanacağınızı, hangi metrikleri takip edeceğinizi öğrenin.',\n      content: `\n        <p>E-ticaret dünyasında sürdürülebilir büyüme için veri odaklı karar verme artık zorunluluk haline geldi. Bu makalede, e-ticaret işletmenizi büyütmek için hangi verileri nasıl kullanmanız gerektiğini detaylıca inceliyoruz.</p>\n\n        <h2>Temel E-ticaret Metrikleri</h2>\n        <p>E-ticaret başarısını ölçmek için takip etmeniz gereken temel metrikler:</p>\n        <ul>\n          <li><strong>Dönüşüm Oranı (Conversion Rate):</strong> Ziyaretçilerin ne kadarı alışveriş yapıyor?</li>\n          <li><strong>Ortalama Sipariş Değeri (AOV):</strong> Müşteri başına ortalama harcama</li>\n          <li><strong>Müşteri Yaşam Boyu Değeri (CLV):</strong> Bir müşterinin toplam getirisi</li>\n          <li><strong>Müşteri Edinim Maliyeti (CAC):</strong> Yeni müşteri kazanma maliyeti</li>\n        </ul>\n\n        <h2>Veri Toplama Stratejileri</h2>\n        <p>Doğru veriyi toplamak için:</p>\n        <ul>\n          <li>Google Analytics 4 ve e-ticaret takibi kurulumu</li>\n          <li>Heat map ve kullanıcı davranış analizi araçları</li>\n          <li>A/B test altyapısı oluşturma</li>\n          <li>Müşteri geri bildirim sistemleri</li>\n        </ul>\n\n        <h2>Büyüme Hack'leri</h2>\n        <p>Veri destekli büyüme stratejileri:</p>\n        <ul>\n          <li>Sepet terk oranını azaltma taktikleri</li>\n          <li>Upsell ve cross-sell optimizasyonu</li>\n          <li>Retargeting kampanyaları</li>\n          <li>Personalizasyon stratejileri</li>\n        </ul>\n\n        <h2>Sonuç</h2>\n        <p>E-ticaret büyütme sürecinde veri, pusulanızdır. Doğru metrikleri takip ederek ve veri odaklı kararlar alarak sürdürülebilir büyüme sağlayabilirsiniz.</p>\n      `,\n      author: 'EraEnvision AI',\n      date: '2025-01-08',\n      readTime: 6,\n      category: 'E-ticaret',\n      tags: ['E-ticaret', 'Veri Analizi', 'Büyüme', 'Metrikler'],\n      slug: 'e-ticaret-buyutme-veri-odakli-yaklasimlar'\n    }\n  };\n\n  const post = blogPosts[slug || ''];\n\n  if (!post) {\n    return (\n      <div className=\"min-h-screen bg-background flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h1 className=\"text-2xl font-bold mb-4\">Makale bulunamadı</h1>\n          <p className=\"text-muted-foreground mb-6\">Aradığınız blog yazısı mevcut değil.</p>\n          <Link href=\"/blog\">\n            <Button>\n              <ArrowLeft className=\"mr-2 h-4 w-4\" />\n              Blog'a Dön\n            </Button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <title>{post.title} | EraEnvision Blog</title>\n      <meta name=\"description\" content={post.excerpt} />\n      <meta property=\"og:title\" content={`${post.title} | EraEnvision Blog`} />\n      <meta property=\"og:description\" content={post.excerpt} />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta name=\"keywords\" content={post.tags.join(', ')} />\n      \n      <div className=\"min-h-screen bg-white\">\n        {/* Header */}\n        <section className=\"pt-24 pb-8 bg-white\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6\">\n            <Link href=\"/blog\">\n              <Button variant=\"ghost\" className=\"mb-6 hover-lift\">\n                <ArrowLeft className=\"mr-2 h-4 w-4\" />\n                Blog'a Dön\n              </Button>\n            </Link>\n\n            <Badge className=\"mb-4 bg-[#E1182E] text-white\">{post.category}</Badge>\n            \n            <h1 className=\"font-heading font-bold text-2xl sm:text-3xl lg:text-5xl mb-6 leading-tight\">\n              {post.title}\n            </h1>\n            \n            <p className=\"text-lg sm:text-xl text-gray-600 mb-8 leading-relaxed\">\n              {post.excerpt}\n            </p>\n\n          <div className=\"flex flex-wrap items-center gap-6 text-sm text-muted-foreground mb-8\">\n            <div className=\"flex items-center gap-2\">\n              <User className=\"h-4 w-4\" />\n              {post.author}\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Calendar className=\"h-4 w-4\" />\n              {new Date(post.date).toLocaleDateString('tr-TR', {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric'\n              })}\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Clock className=\"h-4 w-4\" />\n              {post.readTime} dakika okuma\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <BookOpen className=\"h-4 w-4\" />\n              Makale\n            </div>\n          </div>\n\n          <div className=\"flex items-center gap-4\">\n            <Button size=\"sm\" variant=\"outline\" className=\"hover-lift\">\n              <Share2 className=\"mr-2 h-4 w-4\" />\n              Paylaş\n            </Button>\n            <div className=\"flex items-center gap-2\">\n              {post.tags.map((tag) => (\n                <Badge key={tag} variant=\"secondary\" className=\"text-xs\">\n                  <Tag className=\"mr-1 h-3 w-3\" />\n                  {tag}\n                </Badge>\n              ))}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <Separator />\n\n      {/* Article Content */}\n      <article className=\"py-12\">\n        <div className=\"max-w-4xl mx-auto px-6\">\n          <div className=\"prose prose-lg max-w-none\">\n            <div \n              className=\"article-content\"\n              dangerouslySetInnerHTML={{ __html: post.content }}\n            />\n          </div>\n        </div>\n      </article>\n\n      {/* Author Section */}\n      <section className=\"py-12 bg-soft-paper\">\n        <div className=\"max-w-4xl mx-auto px-6\">\n          <div className=\"bg-background rounded-3xl p-8 border\">\n            <div className=\"flex items-start gap-6\">\n              <div className=\"w-16 h-16 bg-primary/10 text-primary rounded-full flex items-center justify-center text-xl font-bold\">\n                {post.author.charAt(0)}\n              </div>\n              <div className=\"flex-1\">\n                <h3 className=\"font-semibold text-xl mb-2\">{post.author}</h3>\n                <p className=\"text-muted-foreground mb-4\">\n                  {post.author === 'Emirhan Akdeniz' \n                    ? 'EraEnvision kurucusu ve CEO\\'su. 10+ yıl teknoloji ve iş geliştirme deneyimi ile girişimcilere rehberlik ediyor.'\n                    : 'EraEnvision AI takımı, en güncel yapay zeka trendlerini ve iş dünyasındaki uygulamalarını analiz ediyor.'\n                  }\n                </p>\n                <div className=\"flex gap-3\">\n                  <Button size=\"sm\" variant=\"outline\">\n                    Diğer Yazılar\n                  </Button>\n                  <Button size=\"sm\" variant=\"ghost\">\n                    İletişime Geç\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Related Posts */}\n      <section className=\"py-16 bg-background\">\n        <div className=\"max-w-4xl mx-auto px-6\">\n          <h2 className=\"font-heading font-bold text-2xl mb-8\">\n            İlginizi Çekebilecek Diğer Makaleler\n          </h2>\n          <div className=\"grid md:grid-cols-2 gap-6\">\n            <div className=\"border border-border rounded-2xl p-6 hover:shadow-lg transition-all hover-lift\">\n              <Badge variant=\"outline\" className=\"mb-3\">\n                Startup\n              </Badge>\n              <h3 className=\"font-semibold text-lg mb-3\">\n                <Link href=\"/blog/startup-mvp-gelistirme-hizli-etkili-yontemler\" className=\"hover:text-primary\">\n                  Startup MVP Geliştirme: Hızlı ve Etkili Yöntemler\n                </Link>\n              </h3>\n              <p className=\"text-muted-foreground text-sm mb-4\">\n                Minimum Viable Product (MVP) geliştirme sürecini hızlandıran modern yaklaşımlar...\n              </p>\n              <div className=\"flex items-center justify-between text-sm text-muted-foreground\">\n                <span>7 dk okuma</span>\n                <span>3 Ocak 2025</span>\n              </div>\n            </div>\n\n            <div className=\"border border-border rounded-2xl p-6 hover:shadow-lg transition-all hover-lift\">\n              <Badge variant=\"outline\" className=\"mb-3\">\n                Pazarlama\n              </Badge>\n              <h3 className=\"font-semibold text-lg mb-3\">\n                <Link href=\"/blog/pazarlama-otomasyonu-roi-3-katina-cikaran-taktikler\" className=\"hover:text-primary\">\n                  Pazarlama Otomasyonu: ROI'yi 3 Katına Çıkaran Taktikler\n                </Link>\n              </h3>\n              <p className=\"text-muted-foreground text-sm mb-4\">\n                Pazarlama süreçlerinizi otomatikleştirerek ROI'nizi nasıl maksimize edeceğinizi...\n              </p>\n              <div className=\"flex items-center justify-between text-sm text-muted-foreground\">\n                <span>9 dk okuma</span>\n                <span>1 Ocak 2025</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      </div>\n    </>\n  );\n}","size_bytes":13463},"client/src/pages/blog.tsx":{"content":"import { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\nimport { useLanguage } from '@/hooks/use-language';\nimport { Search, Calendar, ArrowRight, Clock, User, Tag } from 'lucide-react';\nimport { Link } from 'wouter';\n\ninterface BlogPost {\n  id: string;\n  title: string;\n  excerpt: string;\n  content: string;\n  author: string;\n  date: string;\n  readTime: number;\n  category: string;\n  tags: string[];\n  slug: string;\n  featured?: boolean;\n}\n\nexport default function BlogPage() {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState<string>('all');\n  const { t } = useLanguage();\n\n  const blogPosts: BlogPost[] = [\n    {\n      id: '1',\n      title: 'AI ile Girişimcilik: 2025\\'te Başarılı Olmak İçin 10 Strateji',\n      excerpt: 'Yapay zekanın girişimcilik dünyasını nasıl dönüştürdüğünü ve bu değişimde öne geçmek için neler yapmanız gerektiğini keşfedin.',\n      content: '',\n      author: 'Emirhan Akdeniz',\n      date: '2025-01-10',\n      readTime: 8,\n      category: 'AI & Girişimcilik',\n      tags: ['AI', 'Girişimcilik', 'Strateji', 'İnovasyon'],\n      slug: 'ai-ile-girisimcilik-2025-stratejileri',\n      featured: true\n    },\n    {\n      id: '2',\n      title: 'E-ticaret Büyütme: Veri Odaklı Yaklaşımlar',\n      excerpt: 'E-ticaret işletmenizi büyütürken veriyi nasıl kullanacağınızı, hangi metrikleri takip edeceğinizi öğrenin.',\n      content: '',\n      author: 'EraEnvision AI',\n      date: '2025-01-08',\n      readTime: 6,\n      category: 'E-ticaret',\n      tags: ['E-ticaret', 'Veri Analizi', 'Büyüme', 'Metrikler'],\n      slug: 'e-ticaret-buyutme-veri-odakli-yaklasimlar'\n    },\n    {\n      id: '3',\n      title: 'Yatırım Kararlarında AI: Geleceğin Fon Yöneticileri',\n      excerpt: 'Yapay zekanın yatırım dünyasındaki rolü ve akıllı yatırım kararları almak için AI araçlarını nasıl kullanabileceğiniz.',\n      content: '',\n      author: 'Emirhan Akdeniz',\n      date: '2025-01-05',\n      readTime: 10,\n      category: 'Yatırım & Finans',\n      tags: ['AI', 'Yatırım', 'Fintech', 'Analiz'],\n      slug: 'yatirim-kararlarinda-ai-gelecegin-fon-yoneticileri'\n    },\n    {\n      id: '4',\n      title: 'Startup MVP Geliştirme: Hızlı ve Etkili Yöntemler',\n      excerpt: 'Minimum Viable Product (MVP) geliştirme sürecini hızlandıran modern yaklaşımlar ve araçlar.',\n      content: '',\n      author: 'EraEnvision AI',\n      date: '2025-01-03',\n      readTime: 7,\n      category: 'Startup',\n      tags: ['MVP', 'Startup', 'Ürün Geliştirme', 'Agile'],\n      slug: 'startup-mvp-gelistirme-hizli-etkili-yontemler'\n    },\n    {\n      id: '5',\n      title: 'Pazarlama Otomasyonu: ROI\\'yi 3 Katına Çıkaran Taktikler',\n      excerpt: 'Pazarlama süreçlerinizi otomatikleştirerek ROI\\'nizi nasıl maksimize edeceğinizi öğrenin.',\n      content: '',\n      author: 'Emirhan Akdeniz',\n      date: '2025-01-01',\n      readTime: 9,\n      category: 'Pazarlama',\n      tags: ['Otomasyon', 'ROI', 'Pazarlama', 'CRM'],\n      slug: 'pazarlama-otomasyonu-roi-3-katina-cikaran-taktikler'\n    },\n    {\n      id: '6',\n      title: 'SaaS Ölçeklendirme: Ayda %20 Büyüme İçin Kanıtlanmış Formül',\n      excerpt: 'SaaS işletmenizi sürdürülebilir şekilde büyütmek için uygulayabileceğiniz kanıtlanmış yöntemler.',\n      content: '',\n      author: 'EraEnvision AI',\n      date: '2024-12-28',\n      readTime: 12,\n      category: 'SaaS',\n      tags: ['SaaS', 'Büyüme', 'Ölçeklendirme', 'Metrikler'],\n      slug: 'saas-olceklendirme-ayda-20-buyume-formulu'\n    }\n  ];\n\n  const categories = [\n    'all',\n    'AI & Girişimcilik',\n    'E-ticaret',\n    'Yatırım & Finans',\n    'Startup',\n    'Pazarlama',\n    'SaaS'\n  ];\n\n  const filteredPosts = blogPosts.filter(post => {\n    const matchesSearch = post.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         post.excerpt.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         post.tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase()));\n    \n    const matchesCategory = selectedCategory === 'all' || post.category === selectedCategory;\n    \n    return matchesSearch && matchesCategory;\n  });\n\n  const featuredPost = blogPosts.find(post => post.featured);\n  const regularPosts = filteredPosts.filter(post => !post.featured);\n\n  return (\n    <>\n      <title>Blog - EraEnvision | AI ve İş Büyütme İçerikleri</title>\n      <meta name=\"description\" content=\"EraEnvision blog sayfası. AI, girişimcilik, iş büyütme ve dijital dönüşüm konularında uzman içerikler ve stratejiler.\" />\n      <meta property=\"og:title\" content=\"EraEnvision Blog | AI ve İş Büyütme İçerikleri\" />\n      <meta property=\"og:description\" content=\"AI, girişimcilik, iş büyütme ve dijital dönüşüm konularında uzman içerikler.\" />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"keywords\" content=\"blog, AI blog, iş büyütme, girişimcilik, startup rehberi, dijital pazarlama, EraEnvision\" />\n      \n      <div className=\"min-h-screen bg-white\">\n        {/* Hero Section */}\n        <section className=\"pt-24 pb-16 bg-gradient-to-br from-gray-50 to-white\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 text-center\">\n            <h1 className=\"font-heading font-bold text-3xl sm:text-4xl lg:text-6xl mb-6 tracking-wide\">\n              AI ve İş Dünyası Blog\n            </h1>\n            <p className=\"text-lg sm:text-xl text-gray-600 mb-12 leading-relaxed px-4 sm:px-0\">\n              Yapay zeka, girişimcilik ve büyüme stratejileri hakkında güncel içerikler\n            </p>\n          </div>\n        </section>\n\n      {/* Search and Filters */}\n      <section className=\"py-8 bg-white border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6\">\n          <div className=\"flex flex-col lg:flex-row gap-6 items-stretch lg:items-center justify-between\">\n            {/* Search */}\n            <div className=\"relative flex-1 max-w-md w-full\">\n              <Search className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n              <Input\n                placeholder=\"Blog yazılarında ara...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"pl-10 w-full\"\n              />\n            </div>\n\n            {/* Category Filter */}\n            <div className=\"flex flex-wrap gap-2 justify-center lg:justify-end\">\n              {categories.map((category) => (\n                <Button\n                  key={category}\n                  variant={selectedCategory === category ? 'default' : 'outline'}\n                  size=\"sm\"\n                  onClick={() => setSelectedCategory(category)}\n                  className=\"rounded-full text-xs sm:text-sm px-3 sm:px-4\"\n                >\n                  {category === 'all' ? 'Tümü' : category}\n                </Button>\n              ))}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Featured Post */}\n      {featuredPost && selectedCategory === 'all' && !searchTerm && (\n        <section className=\"py-16 bg-white\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6\">\n            <div className=\"bg-gradient-to-r from-[#E1182E]/5 to-[#E1182E]/10 rounded-3xl p-6 sm:p-8 lg:p-12\">\n              <div className=\"grid lg:grid-cols-2 gap-8 items-center\">\n                <div>\n                  <Badge className=\"mb-4 bg-[#E1182E] text-white\">\n                    Öne Çıkan Makale\n                  </Badge>\n                  <h2 className=\"font-heading font-bold text-2xl sm:text-3xl lg:text-4xl mb-4 leading-tight\">\n                    {featuredPost.title}\n                  </h2>\n                  <p className=\"text-gray-600 text-base sm:text-lg mb-6 leading-relaxed\">\n                    {featuredPost.excerpt}\n                  </p>\n                  <div className=\"flex flex-col sm:flex-row sm:items-center gap-2 sm:gap-4 text-sm text-gray-500 mb-6\">\n                    <div className=\"flex items-center gap-2\">\n                      <User className=\"h-4 w-4\" />\n                      <span>{featuredPost.author}</span>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <Calendar className=\"h-4 w-4\" />\n                      <span>{new Date(featuredPost.date).toLocaleDateString('tr-TR')}</span>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <Clock className=\"h-4 w-4\" />\n                      <span>{featuredPost.readTime} dk okuma</span>\n                    </div>\n                  </div>\n                  <Link href={`/blog/${featuredPost.slug}`}>\n                    <Button size=\"lg\" className=\"hover-lift bg-[#E1182E] hover:bg-[#C51628] text-white\">\n                      Makaleyi Oku <ArrowRight className=\"ml-2 h-4 w-4\" />\n                    </Button>\n                  </Link>\n                </div>\n                <div className=\"relative hidden lg:block\">\n                  <div className=\"aspect-[4/3] bg-gradient-to-br from-[#E1182E]/20 to-[#E1182E]/5 rounded-2xl flex items-center justify-center\">\n                    <div className=\"w-24 h-24 bg-[#E1182E]/20 rounded-full flex items-center justify-center\">\n                      <Tag className=\"h-12 w-12 text-[#E1182E]\" />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      )}\n\n      {/* Blog Posts Grid */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6\">\n          {filteredPosts.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <p className=\"text-gray-600 text-lg\">\n                Aradığınız kriterlere uygun makale bulunamadı.\n              </p>\n            </div>\n          ) : (\n            <div className=\"grid sm:grid-cols-2 lg:grid-cols-3 gap-6 sm:gap-8\">\n              {regularPosts.map((post) => (\n                <article key={post.id} className=\"bg-white border border-gray-200 rounded-3xl p-6 hover:shadow-lg transition-all hover-lift\">\n                  <div className=\"mb-4\">\n                    <Badge variant=\"outline\" className=\"mb-3\">\n                      {post.category}\n                    </Badge>\n                    <h3 className=\"font-heading font-semibold text-xl mb-3 leading-tight\">\n                      <Link href={`/blog/${post.slug}`} className=\"hover:text-primary transition-colors\">\n                        {post.title}\n                      </Link>\n                    </h3>\n                    <p className=\"text-muted-foreground mb-4\">\n                      {post.excerpt}\n                    </p>\n                  </div>\n\n                  <div className=\"flex items-center gap-4 text-sm text-muted-foreground mb-4\">\n                    <div className=\"flex items-center gap-2\">\n                      <User className=\"h-4 w-4\" />\n                      {post.author}\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <Clock className=\"h-4 w-4\" />\n                      {post.readTime} dk\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-center gap-2 mb-4\">\n                    {post.tags.slice(0, 3).map((tag) => (\n                      <Badge key={tag} variant=\"secondary\" className=\"text-xs\">\n                        {tag}\n                      </Badge>\n                    ))}\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm text-muted-foreground\">\n                      {new Date(post.date).toLocaleDateString('tr-TR')}\n                    </span>\n                    <Link href={`/blog/${post.slug}`}>\n                      <Button variant=\"ghost\" size=\"sm\" className=\"p-2\">\n                        <ArrowRight className=\"h-4 w-4\" />\n                      </Button>\n                    </Link>\n                  </div>\n                </article>\n              ))}\n            </div>\n          )}\n        </div>\n      </section>\n\n      {/* Newsletter Subscription */}\n      <section className=\"py-16 bg-soft-paper\">\n        <div className=\"max-w-4xl mx-auto px-6 text-center\">\n          <h2 className=\"font-heading font-bold text-3xl mb-4\">\n            Yeni Makaleleri Kaçırmayın\n          </h2>\n          <p className=\"text-muted-foreground text-lg mb-8\">\n            AI, girişimcilik ve büyüme stratejileri hakkında en güncel içerikleri e-posta kutunuzda alın.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 max-w-md mx-auto\">\n            <Input \n              placeholder=\"E-posta adresiniz\" \n              className=\"flex-1\"\n            />\n            <Button className=\"hover-lift\">\n              Abone Ol\n            </Button>\n          </div>\n          <p className=\"text-sm text-muted-foreground mt-4\">\n            İstediğiniz zaman aboneliğinizi iptal edebilirsiniz. Spam yapmayız.\n          </p>\n        </div>\n      </section>\n      </div>\n    </>\n  );\n}","size_bytes":13364},"client/src/pages/contact.tsx":{"content":"import { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { useLanguage } from '@/hooks/use-language';\nimport { useToast } from '@/hooks/use-toast';\nimport { Mail, Phone, MapPin, Clock, Send } from 'lucide-react';\n\nexport default function ContactPage() {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { t } = useLanguage();\n  const { toast } = useToast();\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    // TODO: Implement actual form submission\n    await new Promise(resolve => setTimeout(resolve, 1500));\n\n    toast({\n      title: \"Mesajınız gönderildi!\",\n      description: \"En kısa sürede size dönüş yapacağız.\",\n    });\n\n    setIsSubmitting(false);\n  };\n\n  const contactInfo = [\n    {\n      icon: Mail,\n      title: \"E-posta\",\n      content: \"hello@eraenvision.com\",\n      description: \"7/24 e-posta desteği\"\n    },\n    {\n      icon: Phone,\n      title: \"Telefon\",\n      content: \"+90 (555) 123-4567\",\n      description: \"Mesai saatleri içinde\"\n    },\n    {\n      icon: MapPin,\n      title: \"Adres\",\n      content: \"İstanbul, Türkiye\",\n      description: \"Uzaktan ekip\"\n    },\n    {\n      icon: Clock,\n      title: \"Çalışma Saatleri\",\n      content: \"Pzt-Cum 09:00-18:00\",\n      description: \"GMT+3 saat dilimi\"\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Hero Section */}\n      <section className=\"pt-24 pb-16 bg-gradient-to-br from-soft-paper to-background\">\n        <div className=\"max-w-4xl mx-auto px-6 text-center\">\n          <h1 className=\"font-heading font-bold text-4xl lg:text-6xl mb-6 tracking-wide\">\n            {t('contactTitle')}\n          </h1>\n          <p className=\"text-xl text-muted-foreground mb-12 leading-relaxed\">\n            {t('contactSubtitle')}\n          </p>\n        </div>\n      </section>\n\n      {/* Contact Info Cards */}\n      <section className=\"py-16 bg-background\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6 mb-16\">\n            {contactInfo.map((info, index) => (\n              <div key={index} className=\"bg-soft-paper p-6 rounded-2xl border border-border hover-lift text-center\">\n                <div className=\"w-12 h-12 bg-primary/10 text-primary rounded-xl flex items-center justify-center mx-auto mb-4\">\n                  <info.icon className=\"h-6 w-6\" />\n                </div>\n                <h3 className=\"font-semibold text-lg mb-2\">{info.title}</h3>\n                <p className=\"font-medium text-primary mb-1\">{info.content}</p>\n                <p className=\"text-sm text-muted-foreground\">{info.description}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Main Contact Form */}\n      <section className=\"py-24 bg-soft-paper\">\n        <div className=\"max-w-5xl mx-auto px-6\">\n          <div className=\"grid lg:grid-cols-2 gap-12\">\n            {/* Form */}\n            <div className=\"bg-background rounded-3xl shadow-xl p-8 border border-border\">\n              <div className=\"mb-8\">\n                <h2 className=\"font-heading font-bold text-2xl lg:text-3xl mb-4\">\n                  Mesaj Gönderin\n                </h2>\n                <p className=\"text-muted-foreground\">\n                  Formu doldurun, size en kısa sürede dönüş yapalım.\n                </p>\n              </div>\n\n              <form onSubmit={handleSubmit} className=\"space-y-6\">\n                <div className=\"grid md:grid-cols-2 gap-6\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-foreground mb-2\">\n                      {t('fullName')} *\n                    </label>\n                    <Input\n                      type=\"text\"\n                      required\n                      placeholder={t('fullNamePlaceholder')}\n                      className=\"rounded-xl h-12\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-foreground mb-2\">\n                      {t('email')} *\n                    </label>\n                    <Input\n                      type=\"email\"\n                      required\n                      placeholder={t('emailPlaceholder')}\n                      className=\"rounded-xl h-12\"\n                    />\n                  </div>\n                </div>\n                \n                <div className=\"grid md:grid-cols-2 gap-6\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-foreground mb-2\">\n                      {t('company')}\n                    </label>\n                    <Input\n                      type=\"text\"\n                      placeholder={t('companyPlaceholder')}\n                      className=\"rounded-xl h-12\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-foreground mb-2\">\n                      {t('country')}\n                    </label>\n                    <Select>\n                      <SelectTrigger className=\"rounded-xl h-12\">\n                        <SelectValue placeholder={t('country')} />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"TR\">{t('turkey')}</SelectItem>\n                        <SelectItem value=\"US\">{t('unitedStates')}</SelectItem>\n                        <SelectItem value=\"DE\">{t('germany')}</SelectItem>\n                        <SelectItem value=\"FR\">{t('france')}</SelectItem>\n                        <SelectItem value=\"UK\">{t('unitedKingdom')}</SelectItem>\n                        <SelectItem value=\"other\">{t('other')}</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n\n                <div className=\"grid md:grid-cols-2 gap-6\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-foreground mb-2\">\n                      {t('segmentInterest')}\n                    </label>\n                    <Select>\n                      <SelectTrigger className=\"rounded-xl h-12\">\n                        <SelectValue placeholder={t('segmentInterest')} />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"launch\">Launch ({t('forEntrepreneurs')})</SelectItem>\n                        <SelectItem value=\"scale\">Scale ({t('forBusinesses')})</SelectItem>\n                        <SelectItem value=\"invest\">Invest ({t('forInvestors')})</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-foreground mb-2\">\n                      {t('budgetRange')}\n                    </label>\n                    <Select>\n                      <SelectTrigger className=\"rounded-xl h-12\">\n                        <SelectValue placeholder={t('budgetRange')} />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"starter\">Starter (Ücretsiz)</SelectItem>\n                        <SelectItem value=\"pro\">Pro (₺299/ay)</SelectItem>\n                        <SelectItem value=\"business\">Business (₺599/ay)</SelectItem>\n                        <SelectItem value=\"enterprise\">Enterprise (Özel)</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-foreground mb-2\">\n                    {t('yourMessage')} *\n                  </label>\n                  <Textarea\n                    rows={5}\n                    required\n                    placeholder={t('messagePlaceholder')}\n                    className=\"rounded-xl resize-none\"\n                  />\n                </div>\n\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-start space-x-3\">\n                    <Checkbox id=\"kvkk-consent\" required className=\"mt-1\" />\n                    <label htmlFor=\"kvkk-consent\" className=\"text-sm text-muted-foreground leading-relaxed\">\n                      {t('kvkkConsent')} <span className=\"text-primary\">*</span>\n                    </label>\n                  </div>\n                  <div className=\"flex items-start space-x-3\">\n                    <Checkbox id=\"marketing-consent\" className=\"mt-1\" />\n                    <label htmlFor=\"marketing-consent\" className=\"text-sm text-muted-foreground leading-relaxed\">\n                      {t('marketingConsent')}\n                    </label>\n                  </div>\n                </div>\n\n                <Button \n                  type=\"submit\" \n                  className=\"w-full py-4 text-lg font-semibold hover-lift rounded-xl\" \n                  disabled={isSubmitting}\n                >\n                  {isSubmitting ? (\n                    <>\n                      <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2\"></div>\n                      Gönderiliyor...\n                    </>\n                  ) : (\n                    <>\n                      <Send className=\"h-5 w-5 mr-2\" />\n                      {t('sendMessage')}\n                    </>\n                  )}\n                </Button>\n              </form>\n            </div>\n\n            {/* Right Side Content */}\n            <div className=\"space-y-8\">\n              {/* Quick Contact */}\n              <div className=\"bg-background rounded-3xl shadow-xl p-8 border border-border\">\n                <h3 className=\"font-heading font-bold text-xl mb-6\">\n                  Hızlı İletişim\n                </h3>\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center space-x-4 p-4 bg-soft-paper rounded-xl\">\n                    <div className=\"w-10 h-10 bg-primary/10 text-primary rounded-lg flex items-center justify-center\">\n                      <Mail className=\"h-5 w-5\" />\n                    </div>\n                    <div>\n                      <div className=\"font-medium\">Satış Ekibi</div>\n                      <div className=\"text-sm text-muted-foreground\">sales@eraenvision.com</div>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center space-x-4 p-4 bg-soft-paper rounded-xl\">\n                    <div className=\"w-10 h-10 bg-accent-blue/10 text-accent-blue rounded-lg flex items-center justify-center\">\n                      <Mail className=\"h-5 w-5\" />\n                    </div>\n                    <div>\n                      <div className=\"font-medium\">Teknik Destek</div>\n                      <div className=\"text-sm text-muted-foreground\">support@eraenvision.com</div>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center space-x-4 p-4 bg-soft-paper rounded-xl\">\n                    <div className=\"w-10 h-10 bg-accent-mint/10 text-accent-mint rounded-lg flex items-center justify-center\">\n                      <Mail className=\"h-5 w-5\" />\n                    </div>\n                    <div>\n                      <div className=\"font-medium\">Genel Sorular</div>\n                      <div className=\"text-sm text-muted-foreground\">hello@eraenvision.com</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* FAQ Preview */}\n              <div className=\"bg-background rounded-3xl shadow-xl p-8 border border-border\">\n                <h3 className=\"font-heading font-bold text-xl mb-6\">\n                  Sık Sorulan Sorular\n                </h3>\n                <div className=\"space-y-4\">\n                  <div className=\"border-b border-border pb-4\">\n                    <h4 className=\"font-medium mb-2\">Ücretsiz deneme var mı?</h4>\n                    <p className=\"text-sm text-muted-foreground\">Evet, 14 gün ücretsiz deneme sunuyoruz.</p>\n                  </div>\n                  <div className=\"border-b border-border pb-4\">\n                    <h4 className=\"font-medium mb-2\">Hangi sektörlere hizmet veriyorsunuz?</h4>\n                    <p className=\"text-sm text-muted-foreground\">Tüm sektörlerden işletmelere hizmet veriyoruz.</p>\n                  </div>\n                  <div>\n                    <h4 className=\"font-medium mb-2\">Kurulum süresi ne kadar?</h4>\n                    <p className=\"text-sm text-muted-foreground\">Ortalama 24 saat içinde aktif hale gelir.</p>\n                  </div>\n                </div>\n              </div>\n\n              {/* Calendar Booking */}\n              <div className=\"bg-gradient-to-r from-primary to-primary/90 rounded-3xl p-8 text-primary-foreground\">\n                <h3 className=\"font-heading font-bold text-xl mb-4\">\n                  Online Toplantı Planlayın\n                </h3>\n                <p className=\"mb-6 opacity-90\">\n                  Uzmanlarımızla birebir görüşme yapmak ister misiniz?\n                </p>\n                <Button \n                  className=\"bg-background text-primary hover:bg-background/90 w-full\"\n                >\n                  Takvim Görüntüle\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Location Section */}\n      <section className=\"py-24 bg-background\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"font-heading font-bold text-3xl lg:text-4xl mb-4\">\n              Konumumuz\n            </h2>\n            <p className=\"text-xl text-muted-foreground\">\n              Uzaktan çalışan global ekibimiz\n            </p>\n          </div>\n          \n          <div className=\"bg-soft-paper rounded-3xl p-8 text-center\">\n            <div className=\"max-w-2xl mx-auto\">\n              <MapPin className=\"h-12 w-12 text-primary mx-auto mb-6\" />\n              <h3 className=\"font-heading font-bold text-2xl mb-4\">\n                İstanbul, Türkiye\n              </h3>\n              <p className=\"text-muted-foreground leading-relaxed\">\n                Ana merkezimiz İstanbul'da bulunmakla birlikte, ekibimiz farklı şehirlerden \n                uzaktan çalışmaktadır. Bu sayede size 7/24 destek sağlayabilir ve \n                global perspektif sunabiliriz.\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":14971},"client/src/pages/dealbridge.tsx":{"content":"import { Button } from '@/components/ui/button';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { useLanguage } from '@/hooks/use-language';\nimport { \n  Link2, \n  Users, \n  TrendingUp, \n  Search, \n  Shield, \n  Target,\n  Building2,\n  HandHeart,\n  ArrowRight,\n  CheckCircle,\n  Zap,\n  Filter\n} from 'lucide-react';\nimport { Link } from 'wouter';\n\nexport default function DealBridgePage() {\n  const { t } = useLanguage();\n\n  const features = [\n    {\n      icon: <Zap className=\"h-8 w-8 text-[#E1182E]\" />,\n      title: \"AI Destekli Eşleşme\",\n      description: \"İhtiyacınıza uygun girişim, işletme veya yatırımcıları akıllı algoritmalarla bulun\"\n    },\n    {\n      icon: <Users className=\"h-8 w-8 text-[#E1182E]\" />,\n      title: \"Profil Paylaşımı\",\n      description: \"Profiliniz ekosistemde görünür olsun, fırsatlar size gelsin\"\n    },\n    {\n      icon: <Target className=\"h-8 w-8 text-[#E1182E]\" />,\n      title: \"Anlaşma Takibi\",\n      description: \"Görüşmeleri ve teklifleri tek ekrandan yönetin ve takip edin\"\n    },\n    {\n      icon: <Filter className=\"h-8 w-8 text-[#E1182E]\" />,\n      title: \"Akıllı Filtreleme\",\n      description: \"Sektör, bütçe, konum ve hedefe göre detaylı arama yapın\"\n    }\n  ];\n\n  const successStories = [\n    {\n      title: \"Tech Startup + Yatırımcı\",\n      description: \"AI tabanlı fintech girişimi, DealBridge üzerinden angel yatırımcısıyla buluştu ve 2M TL seed yatırım aldı.\",\n      result: \"2M TL Yatırım\"\n    },\n    {\n      title: \"E-ticaret + Lojistik Ortaklığı\",\n      description: \"Büyüyen e-ticaret şirketi, lojistik partneri bularak operasyon maliyetlerini %30 düşürdü.\",\n      result: \"%30 Maliyet Tasarrufu\"\n    },\n    {\n      title: \"SaaS + Distribütör\",\n      description: \"B2B SaaS şirketi, DealBridge sayesinde 5 farklı sektörde distribütör anlaşması imzaladı.\",\n      result: \"5 Yeni Pazar\"\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n        {/* Hero Section */}\n        <section className=\"pt-24 pb-20 bg-gradient-to-br from-gray-50 to-white\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 text-center\">\n            <div className=\"mb-8\">\n              <div className=\"inline-flex items-center justify-center w-20 h-20 bg-[#E1182E]/10 rounded-2xl mb-6\">\n                <Link2 className=\"h-10 w-10 text-[#E1182E]\" />\n              </div>\n            </div>\n            \n            <h1 className=\"font-heading font-bold text-3xl sm:text-4xl md:text-5xl lg:text-6xl mb-6 text-gray-900 leading-tight\">\n              DealBridge — İş birliği ve{' '}\n              <span className=\"bg-gradient-to-r from-[#E1182E] to-[#FF4757] bg-clip-text text-transparent\">\n                yatırım fırsatlarını keşfet\n              </span>\n            </h1>\n            \n            <p className=\"text-lg sm:text-xl lg:text-2xl text-gray-600 mb-12 leading-relaxed max-w-4xl mx-auto\">\n              Girişimciler, işletme sahipleri ve yatırımcılar için tek ekosistem. AI destekli önerilerle doğru bağlantıları kurun.\n            </p>\n            \n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center mb-16\">\n              <Button size=\"lg\" className=\"bg-[#E1182E] hover:bg-[#C51628] text-white px-8 py-4 text-lg font-semibold\">\n                Fırsatları Keşfet\n                <ArrowRight className=\"ml-2 h-5 w-5\" />\n              </Button>\n              <Button variant=\"outline\" size=\"lg\" className=\"border-gray-300 text-gray-700 px-8 py-4 text-lg font-semibold\">\n                Nasıl Çalışır?\n              </Button>\n            </div>\n          </div>\n        </section>\n\n        {/* Description Section */}\n        <section className=\"py-20 bg-white\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 text-center\">\n            <h2 className=\"font-heading font-bold text-2xl sm:text-3xl md:text-4xl mb-8 text-gray-900\">\n              İş Dünyasının Bağlantı Merkezi\n            </h2>\n            <p className=\"text-lg sm:text-xl text-gray-600 leading-relaxed mb-12\">\n              EraEnvision, sizi yalnızca AI destekli danışmanlıkla değil, aynı zamanda iş birliği ekosistemiyle de destekler. \n              DealBridge sayesinde girişimciler yatırımcılarla tanışır, işletmeler B2B anlaşmalar yapar, \n              yatırımcılar potansiyel girişimleri keşfeder.\n            </p>\n            \n            <div className=\"grid md:grid-cols-3 gap-8 mb-16\">\n              <div className=\"text-center\">\n                <div className=\"w-16 h-16 bg-red-50 rounded-2xl flex items-center justify-center mx-auto mb-4\">\n                  <Target className=\"h-8 w-8 text-[#E1182E]\" />\n                </div>\n                <h3 className=\"font-semibold text-lg mb-2\">Girişimciler</h3>\n                <p className=\"text-gray-600\">Yatırımcı bulun, mentor desteği alın</p>\n              </div>\n              \n              <div className=\"text-center\">\n                <div className=\"w-16 h-16 bg-blue-50 rounded-2xl flex items-center justify-center mx-auto mb-4\">\n                  <Building2 className=\"h-8 w-8 text-blue-600\" />\n                </div>\n                <h3 className=\"font-semibold text-lg mb-2\">İşletme Sahipleri</h3>\n                <p className=\"text-gray-600\">B2B ortaklıklar, tedarikçi ağı</p>\n              </div>\n              \n              <div className=\"text-center\">\n                <div className=\"w-16 h-16 bg-green-50 rounded-2xl flex items-center justify-center mx-auto mb-4\">\n                  <TrendingUp className=\"h-8 w-8 text-green-600\" />\n                </div>\n                <h3 className=\"font-semibold text-lg mb-2\">Yatırımcılar</h3>\n                <p className=\"text-gray-600\">Potansiyel girişimleri keşfedin</p>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* Features Section */}\n        <section className=\"py-20 bg-gray-50\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6\">\n            <div className=\"text-center mb-16\">\n              <h2 className=\"font-heading font-bold text-2xl sm:text-3xl md:text-4xl mb-6 text-gray-900\">\n                Platform Özellikleri\n              </h2>\n              <p className=\"text-lg sm:text-xl text-gray-600 max-w-3xl mx-auto\">\n                DealBridge, iş dünyasındaki bağlantıları kolaylaştıran akıllı özelliklerle donatılmıştır\n              </p>\n            </div>\n            \n            <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n              {features.map((feature, index) => (\n                <Card key={index} className=\"border-0 shadow-sm hover:shadow-lg transition-all duration-300 bg-white\">\n                  <CardContent className=\"p-6 text-center\">\n                    <div className=\"w-16 h-16 bg-red-50 rounded-2xl flex items-center justify-center mx-auto mb-4\">\n                      {feature.icon}\n                    </div>\n                    <h3 className=\"font-semibold text-lg mb-3 text-gray-900\">\n                      {feature.title}\n                    </h3>\n                    <p className=\"text-gray-600 text-sm leading-relaxed\">\n                      {feature.description}\n                    </p>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </section>\n\n        {/* Success Stories */}\n        <section className=\"py-20 bg-white\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6\">\n            <div className=\"text-center mb-16\">\n              <h2 className=\"font-heading font-bold text-2xl sm:text-3xl md:text-4xl mb-6 text-gray-900\">\n                Başarı Hikayeleri\n              </h2>\n              <p className=\"text-lg sm:text-xl text-gray-600\">\n                DealBridge üzerinden gerçekleşen başarılı bağlantılar\n              </p>\n            </div>\n            \n            <div className=\"grid md:grid-cols-3 gap-8\">\n              {successStories.map((story, index) => (\n                <Card key={index} className=\"border-0 shadow-sm hover:shadow-lg transition-all duration-300\">\n                  <CardContent className=\"p-6\">\n                    <Badge className=\"mb-4 bg-[#E1182E] text-white\">\n                      {story.result}\n                    </Badge>\n                    <h3 className=\"font-semibold text-lg mb-3 text-gray-900\">\n                      {story.title}\n                    </h3>\n                    <p className=\"text-gray-600 text-sm leading-relaxed\">\n                      {story.description}\n                    </p>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </section>\n\n        {/* Trust & Security */}\n        <section className=\"py-16 bg-gray-50\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 text-center\">\n            <div className=\"flex items-center justify-center mb-6\">\n              <Shield className=\"h-12 w-12 text-[#E1182E]\" />\n            </div>\n            <h2 className=\"font-heading font-bold text-2xl mb-4 text-gray-900\">\n              Güven ve Güvenlik\n            </h2>\n            <p className=\"text-lg text-gray-600 mb-8\">\n              Verileriniz KVKK & GDPR uyumlu şekilde korunur. Tüm iş birliği süreçleri şeffaf ve güvenli bir ortamda gerçekleşir.\n            </p>\n            \n            <div className=\"flex flex-wrap justify-center gap-6 text-sm text-gray-500\">\n              <div className=\"flex items-center gap-2\">\n                <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                <span>KVKK Uyumlu</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                <span>GDPR Sertifikalı</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                <span>256-bit SSL Şifreleme</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                <span>7/24 Güvenlik Monitoring</span>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* CTA Section */}\n        <section className=\"py-20 bg-white\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 text-center\">\n            <h2 className=\"font-heading font-bold text-2xl sm:text-3xl md:text-4xl mb-6 text-gray-900\">\n              DealBridge'e Katılın\n            </h2>\n            <p className=\"text-lg sm:text-xl text-gray-600 mb-8\">\n              İş dünyasındaki doğru bağlantıları kurmaya bugün başlayın\n            </p>\n            \n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center\">\n              <Button size=\"lg\" className=\"bg-[#E1182E] hover:bg-[#C51628] text-white px-8 py-4 text-lg font-semibold\">\n                Hemen Başla\n                <ArrowRight className=\"ml-2 h-5 w-5\" />\n              </Button>\n              <Link href=\"/contact\">\n                <Button variant=\"outline\" size=\"lg\" className=\"border-gray-300 text-gray-700 px-8 py-4 text-lg font-semibold\">\n                  Daha Fazla Bilgi\n                </Button>\n              </Link>\n            </div>\n          </div>\n        </section>\n      </div>\n  );\n}","size_bytes":11487},"client/src/pages/home.tsx":{"content":"import { Button } from '@/components/ui/button';\nimport { useLanguage } from '@/hooks/use-language';\nimport { BarChart, TrendingUp, Target, ArrowRight, CheckCircle, Link2 } from 'lucide-react';\nimport { PageTransition, FadeIn, SlideIn, StaggeredFadeIn } from '@/components/ui/page-transition';\nimport MindMapWidget from '@/components/ui/mindmap-widget';\nimport { Link } from 'wouter';\n\nexport default function HomePage() {\n  const { t } = useLanguage();\n\n  return (\n    <PageTransition>\n      \n      <div className=\"min-h-screen bg-white\">\n        {/* Hero Section - Glide Style */}\n        <section className=\"pt-20 pb-16 bg-white\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 text-center\">\n            <FadeIn delay={100}>\n              <h1 className=\"font-heading font-bold text-4xl sm:text-5xl md:text-6xl lg:text-7xl mb-8 text-gray-900 leading-tight\">\n                AI ile iş büyütün,{' '}\n                <span className=\"bg-gradient-to-r from-[#E1182E] to-[#FF4757] bg-clip-text text-transparent\">\n                  gelecek kurun\n                </span>\n              </h1>\n            </FadeIn>\n            <FadeIn delay={200}>\n              <p className=\"text-lg sm:text-xl lg:text-2xl text-gray-600 mb-12 leading-relaxed max-w-4xl mx-auto px-4 sm:px-0\">\n                EraEnvision ile işinizi AI destekli çözümlerle büyütün. Girişimciler, büyüyen şirketler ve yatırımcılar için özel yapay zeka danışmanlığı.\n              </p>\n            </FadeIn>\n          \n            <FadeIn delay={300}>\n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center mb-16\">\n                <Button size=\"lg\" className=\"bg-[#E1182E] hover:bg-[#C51628] text-white px-6 sm:px-8 py-3 sm:py-4 text-base sm:text-lg font-semibold hover-lift w-full sm:w-auto\">\n                  Ücretsiz Başlayın\n                </Button>\n                <Button variant=\"outline\" size=\"lg\" className=\"border-gray-300 text-gray-700 px-6 sm:px-8 py-3 sm:py-4 text-base sm:text-lg font-semibold hover-lift w-full sm:w-auto\">\n                  Demo İzleyin\n                </Button>\n              </div>\n            </FadeIn>\n\n            {/* Trust Indicators */}\n            <FadeIn delay={400}>\n              <p className=\"text-sm text-gray-500 mb-8\">100.000+ şirket tarafından güveniliyor</p>\n              <div className=\"flex flex-wrap justify-center items-center gap-4 sm:gap-6 lg:gap-8 opacity-60\">\n                <div className=\"text-gray-400 font-medium hover:text-gray-600 transition-colors text-sm sm:text-base\">TechCorp</div>\n                <div className=\"text-gray-400 font-medium hover:text-gray-600 transition-colors text-sm sm:text-base\">StartupHub</div>\n                <div className=\"text-gray-400 font-medium hover:text-gray-600 transition-colors text-sm sm:text-base\">InnovateCo</div>\n                <div className=\"text-gray-400 font-medium hover:text-gray-600 transition-colors text-sm sm:text-base\">GrowthLab</div>\n                <div className=\"text-gray-400 font-medium hover:text-gray-600 transition-colors text-sm sm:text-base\">FutureWorks</div>\n              </div>\n            </FadeIn>\n        </div>\n      </section>\n\n      {/* Key Features - Simple Cards */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6\">\n          <div className=\"text-center mb-16\">\n            <FadeIn>\n              <h2 className=\"font-heading font-bold text-2xl sm:text-3xl md:text-4xl lg:text-5xl mb-6 text-gray-900\">\n                İşinizi büyüten AI çözümleri\n              </h2>\n              <p className=\"text-lg sm:text-xl text-gray-600 max-w-3xl mx-auto px-4 sm:px-0\">\n                Her büyüklükteki işletme için özel tasarlanmış yapay zeka araçları\n              </p>\n            </FadeIn>\n          </div>\n\n          <StaggeredFadeIn className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            <div className=\"bg-white p-8 rounded-2xl border border-gray-200 hover:shadow-lg transition-all duration-300 hover-lift\">\n              <div className=\"w-12 h-12 bg-[#E1182E]/10 text-[#E1182E] rounded-xl flex items-center justify-center mb-6\">\n                <Target className=\"h-6 w-6\" />\n              </div>\n              <h3 className=\"font-semibold text-xl mb-4 text-gray-900\">LAUNCH</h3>\n              <p className=\"text-gray-600 mb-6\">\n                Girişimciler için AI destekli iş planlama ve strateji geliştirme\n              </p>\n              <Link href=\"/launch\">\n                <Button variant=\"outline\" className=\"w-full\">\n                  Keşfet <ArrowRight className=\"ml-2 h-4 w-4\" />\n                </Button>\n              </Link>\n            </div>\n\n            <div className=\"bg-white p-8 rounded-2xl border border-gray-200 hover:shadow-lg transition-all duration-300 hover-lift\">\n              <div className=\"w-12 h-12 bg-blue-50 text-blue-600 rounded-xl flex items-center justify-center mb-6\">\n                <TrendingUp className=\"h-6 w-6\" />\n              </div>\n              <h3 className=\"font-semibold text-xl mb-4 text-gray-900\">SCALE</h3>\n              <p className=\"text-gray-600 mb-6\">\n                Büyüyen şirketler için AI ile operasyonel optimizasyon\n              </p>\n              <Link href=\"/scale\">\n                <Button variant=\"outline\" className=\"w-full\">\n                  Keşfet <ArrowRight className=\"ml-2 h-4 w-4\" />\n                </Button>\n              </Link>\n            </div>\n\n            <div className=\"bg-white p-8 rounded-2xl border border-gray-200 hover:shadow-lg transition-all duration-300 hover-lift\">\n              <div className=\"w-12 h-12 bg-green-50 text-green-600 rounded-xl flex items-center justify-center mb-6\">\n                <BarChart className=\"h-6 w-6\" />\n              </div>\n              <h3 className=\"font-semibold text-xl mb-4 text-gray-900\">INVEST</h3>\n              <p className=\"text-gray-600 mb-6\">\n                Yatırımcılar için AI destekli pazar analizi ve değerlendirme\n              </p>\n              <Link href=\"/invest\">\n                <Button variant=\"outline\" className=\"w-full\">\n                  Keşfet <ArrowRight className=\"ml-2 h-4 w-4\" />\n                </Button>\n              </Link>\n            </div>\n\n            <div className=\"bg-white p-8 rounded-2xl border border-gray-200 hover:shadow-lg transition-all duration-300 hover-lift\">\n              <div className=\"w-12 h-12 bg-purple-50 text-purple-600 rounded-xl flex items-center justify-center mb-6\">\n                <Link2 className=\"h-6 w-6\" />\n              </div>\n              <h3 className=\"font-semibold text-xl mb-4 text-gray-900\">DealBridge</h3>\n              <p className=\"text-gray-600 mb-6\">\n                İş birliği, yatırım ve B2B fırsatlarının merkezi\n              </p>\n              <Link href=\"/dealbridge\">\n                <Button variant=\"outline\" className=\"w-full\">\n                  Keşfet <ArrowRight className=\"ml-2 h-4 w-4\" />\n                </Button>\n              </Link>\n            </div>\n          </StaggeredFadeIn>\n        </div>\n      </section>\n\n      {/* Mind Map Section */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6\">\n          <div className=\"text-center mb-16\">\n            <FadeIn>\n              <h2 className=\"font-heading font-bold text-2xl sm:text-3xl md:text-4xl lg:text-5xl mb-6 text-gray-900\">\n                EraEnvision Ekosistemi\n              </h2>\n              <p className=\"text-lg sm:text-xl text-gray-600 max-w-3xl mx-auto px-4 sm:px-0\">\n                Tüm segmentlerimiz DealBridge'de birleşerek güçlü bir iş birliği ekosistemi oluşturur\n              </p>\n            </FadeIn>\n          </div>\n          \n          <FadeIn delay={200}>\n            <MindMapWidget />\n          </FadeIn>\n        </div>\n      </section>\n\n      {/* Features Showcase */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6\">\n          <div className=\"grid lg:grid-cols-2 gap-8 lg:gap-16 items-center\">\n            <SlideIn direction=\"left\">\n              <h2 className=\"font-heading font-bold text-2xl sm:text-3xl md:text-4xl lg:text-5xl mb-6 text-gray-900\">\n                Verileriniz, nihayet sizin için çalışıyor\n              </h2>\n              <p className=\"text-lg sm:text-xl text-gray-600 mb-8\">\n                Dağınık verileri birleştirin, öngörüler elde edin ve ekibinizi aynı hedef etrafında toplayın.\n              </p>\n              <StaggeredFadeIn className=\"space-y-6\">\n                <div className=\"flex items-start gap-4\">\n                  <CheckCircle className=\"h-6 w-6 text-[#E1182E] flex-shrink-0 mt-1\" />\n                  <div>\n                    <h3 className=\"font-semibold text-lg text-gray-900 mb-2\">Gerçek zamanlı veri senkronizasyonu</h3>\n                    <p className=\"text-gray-600\">Elektronik tablolardan, CRM'lerden ve ERP'lerden verileri içe aktarın.</p>\n                  </div>\n                </div>\n                <div className=\"flex items-start gap-4\">\n                  <CheckCircle className=\"h-6 w-6 text-blue-600 flex-shrink-0 mt-1\" />\n                  <div>\n                    <h3 className=\"font-semibold text-lg text-gray-900 mb-2\">Trendleri görselleştirin ve takip edin</h3>\n                    <p className=\"text-gray-600\">Özelleştirilebilir grafikler ve gelişmiş hesaplamalarla verilerinizi derinlemesine inceleyin.</p>\n                  </div>\n                </div>\n                <div className=\"flex items-start gap-4\">\n                  <CheckCircle className=\"h-6 w-6 text-green-600 flex-shrink-0 mt-1\" />\n                  <div>\n                    <h3 className=\"font-semibold text-lg text-gray-900 mb-2\">Farklı ekipler için kişiselleştirilmiş görünümler</h3>\n                    <p className=\"text-gray-600\">Kimin neyi görüntüleyebileceğini, düzenleyebileceğini ve yönetebileceğini kontrol edin.</p>\n                  </div>\n                </div>\n              </StaggeredFadeIn>\n            </SlideIn>\n            <SlideIn direction=\"right\">\n              <div className=\"bg-gray-100 rounded-2xl p-8 h-96 flex items-center justify-center\">\n                <div className=\"text-center\">\n                  <BarChart className=\"h-24 w-24 text-gray-400 mx-auto mb-4\" />\n                  <p className=\"text-gray-500\">Dashboard Önizlemesi</p>\n                </div>\n              </div>\n            </SlideIn>\n          </div>\n        </div>\n      </section>\n\n      {/* Use Cases */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6\">\n          <div className=\"text-center mb-16\">\n            <FadeIn>\n              <h2 className=\"font-heading font-bold text-2xl sm:text-3xl md:text-4xl lg:text-5xl mb-6 text-gray-900\">\n                İşinizin her yanını hızlandırın\n              </h2>\n              <p className=\"text-lg sm:text-xl text-gray-600 px-4 sm:px-0\">\n                AI destekli uygulamalar oluşturun - takım, süreç veya karmaşıklık ne olursa olsun.\n              </p>\n            </FadeIn>\n          </div>\n\n          <StaggeredFadeIn className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {[\n              { title: \"Portallar\", desc: \"İhtiyacınız olan her şey tek yerde. Müşteriler, çalışanlar veya yatırımcılar için merkezi hub görevi gören özel portallar oluşturun.\" },\n              { title: \"Dashboardlar\", desc: \"İş verilerinize görünürlük kazandırın. Paydaşları şirketinizin temel metriklerini görselleştiren sezgisel dashboard ile uyumlu tutun.\" },\n              { title: \"CRM\", desc: \"CRM'iniz, karmaşadan arındırılmış. Gerçekte nasıl satış yaptığınıza göre oluşturulmuş uygulamayla potansiyel müşterileri takip edin, ardışık düzenleri yönetin ve anlaşmaları kapatın.\" },\n              { title: \"Envanter\", desc: \"Envanter, aydınlatılmış. Neyin içeride, neyin az ve bir sonrakinin ne olduğunu bilin - her SKU'yu takip eden ve rafları otomatik olarak stoklu tutan sistemle.\" },\n              { title: \"Saha Satışı\", desc: \"Hareket halindeki ekipler için yapılmış. Temsilcilerinize sahada toplantıları yönetmek, anlaşmaları takip etmek ve etkinlikleri kaydetmek için güçlü mobil uygulama sağlayın.\" },\n              { title: \"Özel Çözümler\", desc: \"İhtiyaçlarınıza özel tasarlanmış AI çözümleri. Sektörünüze ve iş modelinize özel yapay zeka araçları geliştiriyoruz.\" }\n            ].map((item, index) => (\n              <div key={index} className=\"bg-white p-6 rounded-2xl border border-gray-200 hover:shadow-lg transition-all duration-300 hover-lift\">\n                <h3 className=\"font-semibold text-lg text-gray-900 mb-3\">{item.title}</h3>\n                <p className=\"text-gray-600 text-sm\">{item.desc}</p>\n              </div>\n            ))}\n          </StaggeredFadeIn>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 text-center\">\n          <FadeIn>\n            <h2 className=\"font-heading font-bold text-2xl sm:text-3xl md:text-4xl lg:text-5xl mb-6 text-gray-900\">\n              Bugün başlayın, yarın büyüyün\n            </h2>\n            <p className=\"text-lg sm:text-xl text-gray-600 mb-8 px-4 sm:px-0\">\n              İşinizi bir sonraki seviyeye taşımak için gereken tüm AI araçları burada.\n            </p>\n          </FadeIn>\n          <FadeIn delay={200}>\n            <Link href=\"/pricing\">\n              <Button size=\"lg\" className=\"bg-[#E1182E] hover:bg-[#C51628] text-white px-8 py-4 text-lg font-semibold hover-lift\">\n                Hemen Başlayın <ArrowRight className=\"ml-2 h-5 w-5\" />\n              </Button>\n            </Link>\n          </FadeIn>\n        </div>\n      </section>\n      </div>\n    </PageTransition>\n  );\n}\n","size_bytes":13986},"client/src/pages/invest.tsx":{"content":"import { Button } from '@/components/ui/button';\nimport { useLanguage } from '@/hooks/use-language';\nimport { Check, ArrowRight, BarChart3, Target, TrendingUp, Users } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\nexport default function InvestPage() {\n  const { t } = useLanguage();\n\n  const features = [\n    {\n      icon: Target,\n      title: 'Startup Profil Analizi',\n      description: 'AI algoritmaları ile startup profillerini detaylı analiz ederek yatırım potansiyelini değerlendiriyoruz.'\n    },\n    {\n      icon: TrendingUp,\n      title: 'Yatırım Tezi Eşleştirme',\n      description: 'Yatırım tesinize uygun fırsatları belirleyerek portföy stratejinizi optimize ediyoruz.'\n    },\n    {\n      icon: BarChart3,\n      title: 'Risk Değerlendirme',\n      description: 'Kapsamlı risk analizi ile yatırım kararlarınızı veriye dayalı olarak destekliyoruz.'\n    }\n  ];\n\n  const benefits = [\n    'Startup profil analizi ve puanlama',\n    'Yatırım tezi eşleştirme',\n    'Risk değerlendirme modelleri',\n    'Portföy izleme ve raporlama',\n    'Exit stratejisi planlama',\n    'Pazar trend analitiği',\n    'Due diligence desteği',\n    'ROI projeksiyon modellemesi'\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      {/* Hero Section */}\n      <section className=\"pt-20 pb-16 bg-white\">\n        <div className=\"max-w-6xl mx-auto px-6\">\n          <div className=\"grid lg:grid-cols-2 gap-16 items-center\">\n            <div>\n              <div className=\"inline-flex items-center px-4 py-2 rounded-full text-sm font-semibold mb-6 bg-green-50 text-green-600\">\n                <BarChart3 className=\"h-4 w-4 mr-2\" />\n                Yatırımcılar için\n              </div>\n              \n              <h1 className=\"font-heading font-bold text-5xl lg:text-7xl mb-8 text-gray-900 leading-tight\">\n                INVEST\n              </h1>\n              \n              <p className=\"text-xl lg:text-2xl text-gray-600 mb-8 leading-relaxed\">\n                AI destekli yatırım analizi ve portföy yönetimi araçları.\n              </p>\n\n              <div className=\"flex flex-col sm:flex-row gap-4 mb-12\">\n                <Button size=\"lg\" className=\"bg-green-600 hover:bg-green-700 text-white px-8 py-4 text-lg font-semibold\">\n                  Erken Erişim <ArrowRight className=\"ml-2 h-5 w-5\" />\n                </Button>\n                <Button variant=\"outline\" size=\"lg\" className=\"border-gray-300 text-gray-700 px-8 py-4 text-lg font-semibold\">\n                  Örnek Rapor Gör\n                </Button>\n              </div>\n\n              <div className=\"flex items-center gap-4 text-sm text-gray-500\">\n                <div className=\"flex items-center gap-1\">\n                  <Check className=\"h-4 w-4 text-green-500\" />\n                  Sınırlı erken erişim\n                </div>\n                <div className=\"flex items-center gap-1\">\n                  <Check className=\"h-4 w-4 text-green-500\" />\n                  Özel fiyatlandırma\n                </div>\n              </div>\n            </div>\n\n            <div className=\"relative\">\n              <div className=\"bg-gray-100 rounded-2xl p-8 h-96 flex items-center justify-center\">\n                <div className=\"text-center\">\n                  <BarChart3 className=\"h-24 w-24 text-gray-400 mx-auto mb-4\" />\n                  <p className=\"text-gray-500\">INVEST Dashboard Preview</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Features Section */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-6xl mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-heading font-bold text-4xl lg:text-5xl mb-6 text-gray-900\">\n              AI ile akıllı yatırım kararları\n            </h2>\n            <p className=\"text-xl text-gray-600\">\n              Veriye dayalı analizlerle yatırım portföyünüzü optimize edin\n            </p>\n          </div>\n          \n          <div className=\"grid md:grid-cols-3 gap-8 mb-16\">\n            {features.map((feature, index) => (\n              <div key={index} className=\"bg-white p-8 rounded-2xl border border-gray-200\">\n                <div className=\"w-12 h-12 bg-green-50 text-green-600 rounded-xl flex items-center justify-center mb-6\">\n                  <feature.icon className=\"h-6 w-6\" />\n                </div>\n                <h3 className=\"font-semibold text-xl mb-4 text-gray-900\">{feature.title}</h3>\n                <p className=\"text-gray-600 leading-relaxed\">{feature.description}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Benefits Section */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-6xl mx-auto px-6\">\n          <div className=\"grid lg:grid-cols-2 gap-16 items-center\">\n            <div>\n              <h2 className=\"font-heading font-bold text-4xl lg:text-5xl mb-8 text-gray-900\">\n                Yatırım sürecinizde neler kazanacaksınız?\n              </h2>\n              \n              <div className=\"space-y-4\">\n                {benefits.map((benefit, index) => (\n                  <div key={index} className=\"flex items-start gap-3\">\n                    <Check className=\"h-5 w-5 text-green-600 flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-gray-700\">{benefit}</span>\n                  </div>\n                ))}\n              </div>\n\n              <div className=\"mt-8\">\n                <Button size=\"lg\" className=\"bg-green-600 hover:bg-green-700 text-white px-8 py-4 text-lg font-semibold\">\n                  Erken Erişim Al <ArrowRight className=\"ml-2 h-5 w-5\" />\n                </Button>\n              </div>\n            </div>\n\n            <div className=\"relative\">\n              <div className=\"bg-gradient-to-br from-green-50 to-emerald-50 rounded-2xl p-8 h-96 flex items-center justify-center\">\n                <div className=\"text-center\">\n                  <Target className=\"h-24 w-24 text-green-600 mx-auto mb-4\" />\n                  <p className=\"text-gray-700 font-medium\">Yatırım Analiz Panosu</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Performance Section */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-6xl mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-heading font-bold text-4xl lg:test-5xl mb-6 text-gray-900\">\n              AI destekli analizlerin gücü\n            </h2>\n            <p className=\"text-xl text-gray-600\">\n              Platformumuz kullanılarak elde edilen ortalama iyileştirmeler\n            </p>\n          </div>\n          \n          <div className=\"grid md:grid-cols-3 gap-8\">\n            <div className=\"text-center bg-white p-8 rounded-2xl border border-gray-200\">\n              <div className=\"text-4xl font-bold text-green-600 mb-2\">%40</div>\n              <div className=\"text-gray-600\">Daha hızlı karar verme</div>\n            </div>\n            <div className=\"text-center bg-white p-8 rounded-2xl border border-gray-200\">\n              <div className=\"text-4xl font-bold text-green-600 mb-2\">%65</div>\n              <div className=\"text-gray-600\">Risk azalması</div>\n            </div>\n            <div className=\"text-center bg-white p-8 rounded-2xl border border-gray-200\">\n              <div className=\"text-4xl font-bold text-green-600 mb-2\">%30</div>\n              <div className=\"text-gray-600\">ROI artışı</div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Early Access Section */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-4xl mx-auto px-6 text-center\">\n          <div className=\"bg-gradient-to-r from-green-500 to-emerald-500 text-white p-12 rounded-3xl\">\n            <h2 className=\"font-heading font-bold text-3xl lg:text-4xl mb-6\">\n              Sınırlı Erken Erişim\n            </h2>\n            <p className=\"text-xl mb-8 opacity-90\">\n              INVEST platformu henüz geliştirme aşamasında. Erken erişim için kayıt olun ve özel fiyatlandırmadan yararlanın.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button size=\"lg\" className=\"bg-white text-green-600 hover:bg-gray-100 px-8 py-4 text-lg font-semibold\">\n                Erken Erişim Listesine Katıl <ArrowRight className=\"ml-2 h-5 w-5\" />\n              </Button>\n              <Button variant=\"outline\" size=\"lg\" className=\"border-white text-white hover:bg-white hover:text-green-600 px-8 py-4 text-lg font-semibold\">\n                Daha Fazla Bilgi\n              </Button>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":8854},"client/src/pages/launch.tsx":{"content":"import { Button } from '@/components/ui/button';\nimport { useLanguage } from '@/hooks/use-language';\nimport { Check, ArrowRight, Target, Zap, Users, TrendingUp } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\nexport default function LaunchPage() {\n  const { t } = useLanguage();\n\n  const features = [\n    {\n      icon: Target,\n      title: 'AI ile İş Fikri Analizi',\n      description: 'Yapay zeka algoritmalarımız ile iş fikrinizi analiz ederek potansiyel ve riskleri değerlendiriyoruz.'\n    },\n    {\n      icon: TrendingUp,\n      title: 'Pazar Araştırması',\n      description: 'Hedef pazarınızı analiz ediyor, rakip analizleri yapıyor ve fırsatları belirliyoruz.'\n    },\n    {\n      icon: Users,\n      title: 'MVP Yol Haritası',\n      description: 'Minimum viable product stratejinizi oluşturarak hızlı ve etkili lansmanınızı planlıyoruz.'\n    }\n  ];\n\n  const benefits = [\n    'AI ile iş fikri analizi ve geliştirme',\n    'Pazar araştırması ve rakip analizi',\n    'MVP yol haritası oluşturma',\n    'Finansal projeksiyon ve planlama',\n    'Yatırımcı pitch deck hazırlama',\n    'İlk müşteri bulma stratejileri',\n    'Risk değerlendirme ve mitigation',\n    'Go-to-market stratejisi'\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      {/* Hero Section */}\n      <section className=\"pt-20 pb-16 bg-white\">\n        <div className=\"max-w-6xl mx-auto px-6\">\n          <div className=\"grid lg:grid-cols-2 gap-16 items-center\">\n            <div>\n              <div className=\"inline-flex items-center px-4 py-2 rounded-full text-sm font-semibold mb-6 bg-red-50 text-[#E1182E]\">\n                <Target className=\"h-4 w-4 mr-2\" />\n                Girişimciler için\n              </div>\n              \n              <h1 className=\"font-heading font-bold text-5xl lg:text-7xl mb-8 text-gray-900 leading-tight\">\n                LAUNCH\n              </h1>\n              \n              <p className=\"text-xl lg:text-2xl text-gray-600 mb-8 leading-relaxed\">\n                AI destekli iş planlama ve strateji geliştirme çözümleri ile fikrini gerçeğe dönüştür.\n              </p>\n\n              <div className=\"flex flex-col sm:flex-row gap-4 mb-12\">\n                <Button size=\"lg\" className=\"bg-[#E1182E] hover:bg-[#C51628] text-white px-8 py-4 text-lg font-semibold\">\n                  Ücretsiz Başla <ArrowRight className=\"ml-2 h-5 w-5\" />\n                </Button>\n                <Button variant=\"outline\" size=\"lg\" className=\"border-gray-300 text-gray-700 px-8 py-4 text-lg font-semibold\">\n                  Örnek Yol Haritası Gör\n                </Button>\n              </div>\n\n              <div className=\"flex items-center gap-4 text-sm text-gray-500\">\n                <div className=\"flex items-center gap-1\">\n                  <Check className=\"h-4 w-4 text-green-500\" />\n                  Kredi kartı gerekmez\n                </div>\n                <div className=\"flex items-center gap-1\">\n                  <Check className=\"h-4 w-4 text-green-500\" />\n                  7 gün ücretsiz deneme\n                </div>\n              </div>\n            </div>\n\n            <div className=\"relative\">\n              <div className=\"bg-gray-100 rounded-2xl p-8 h-96 flex items-center justify-center\">\n                <div className=\"text-center\">\n                  <Target className=\"h-24 w-24 text-gray-400 mx-auto mb-4\" />\n                  <p className=\"text-gray-500\">LAUNCH Dashboard Preview</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Features Section */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-6xl mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-heading font-bold text-4xl lg:text-5xl mb-6 text-gray-900\">\n              AI destekli girişimcilik yolculuğunuz\n            </h2>\n            <p className=\"text-xl text-gray-600\">\n              Fikirden başarılı işe giden yolda size rehberlik ediyoruz\n            </p>\n          </div>\n          \n          <div className=\"grid md:grid-cols-3 gap-8 mb-16\">\n            {features.map((feature, index) => (\n              <div key={index} className=\"bg-white p-8 rounded-2xl border border-gray-200\">\n                <div className=\"w-12 h-12 bg-red-50 text-[#E1182E] rounded-xl flex items-center justify-center mb-6\">\n                  <feature.icon className=\"h-6 w-6\" />\n                </div>\n                <h3 className=\"font-semibold text-xl mb-4 text-gray-900\">{feature.title}</h3>\n                <p className=\"text-gray-600 leading-relaxed\">{feature.description}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Benefits Section */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-6xl mx-auto px-6\">\n          <div className=\"grid lg:grid-cols-2 gap-16 items-center\">\n            <div>\n              <h2 className=\"font-heading font-bold text-4xl lg:text-5xl mb-8 text-gray-900\">\n                Neler elde edeceksiniz?\n              </h2>\n              \n              <div className=\"space-y-4\">\n                {benefits.map((benefit, index) => (\n                  <div key={index} className=\"flex items-start gap-3\">\n                    <Check className=\"h-5 w-5 text-[#E1182E] flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-gray-700\">{benefit}</span>\n                  </div>\n                ))}\n              </div>\n\n              <div className=\"mt-8\">\n                <Button size=\"lg\" className=\"bg-[#E1182E] hover:bg-[#C51628] text-white px-8 py-4 text-lg font-semibold\">\n                  Hemen Başlayın <ArrowRight className=\"ml-2 h-5 w-5\" />\n                </Button>\n              </div>\n            </div>\n\n            <div className=\"relative\">\n              <div className=\"bg-gradient-to-br from-red-50 to-orange-50 rounded-2xl p-8 h-96 flex items-center justify-center\">\n                <div className=\"text-center\">\n                  <Zap className=\"h-24 w-24 text-[#E1182E] mx-auto mb-4\" />\n                  <p className=\"text-gray-700 font-medium\">AI Güçlü Analitik Araçları</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-4xl mx-auto px-6 text-center\">\n          <h2 className=\"font-heading font-bold text-4xl lg:text-5xl mb-6 text-gray-900\">\n            Girişimcilik yolculuğunuza başlamaya hazır mısınız?\n          </h2>\n          <p className=\"text-xl text-gray-600 mb-8\">\n            AI destekli çözümlerimizle iş fikrinizi başarılı bir şirkete dönüştürün.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button size=\"lg\" className=\"bg-[#E1182E] hover:bg-[#C51628] text-white px-8 py-4 text-lg font-semibold\">\n              Ücretsiz Başla <ArrowRight className=\"ml-2 h-5 w-5\" />\n            </Button>\n            <Button variant=\"outline\" size=\"lg\" className=\"border-gray-300 text-gray-700 px-8 py-4 text-lg font-semibold\">\n              Uzmanla Konuş\n            </Button>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":7328},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/pages/pricing.tsx":{"content":"import { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Switch } from '@/components/ui/switch';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Badge } from '@/components/ui/badge';\nimport { useLanguage } from '@/hooks/use-language';\nimport { Check, Star, Zap, Crown, Building } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\ntype Currency = 'try' | 'usd' | 'eur';\ntype BillingPeriod = 'monthly' | 'yearly';\n\ninterface PlanFeature {\n  text: string;\n  included: boolean;\n}\n\ninterface Plan {\n  name: string;\n  icon: any;\n  popular?: boolean;\n  enterprise?: boolean;\n  description: string;\n  prices: Record<Currency, { monthly: number; yearly: number }>;\n  features: PlanFeature[];\n  buttonText: string;\n  buttonVariant: 'default' | 'outline';\n  highlight?: string;\n}\n\nexport default function PricingPage() {\n  const [currency, setCurrency] = useState<Currency>('try');\n  const [billingPeriod, setBillingPeriod] = useState<BillingPeriod>('monthly');\n  const { t } = useLanguage();\n\n  const getCurrencySymbol = (curr: Currency) => {\n    switch (curr) {\n      case 'try': return '₺';\n      case 'usd': return '$';\n      case 'eur': return '€';\n      default: return '₺';\n    }\n  };\n\n  const plans: Plan[] = [\n    {\n      name: 'Starter',\n      icon: Star,\n      description: \"Girişimciler için temel araçlar\",\n      prices: {\n        try: { monthly: 0, yearly: 0 },\n        usd: { monthly: 0, yearly: 0 },\n        eur: { monthly: 0, yearly: 0 },\n      },\n      features: [\n        { text: '5 yol haritası/ay', included: true },\n        { text: 'Temel AI danışman', included: true },\n        { text: 'E-posta desteği', included: true },\n        { text: \"Temel şablonlar\", included: true },\n        { text: \"Mobil erişim\", included: true },\n        { text: 'SEO analizi', included: false },\n        { text: 'CRM entegrasyonu', included: false },\n        { text: 'Öncelikli destek', included: false },\n      ],\n      buttonText: 'Ücretsiz Başla',\n      buttonVariant: 'outline',\n    },\n    {\n      name: 'Pro',\n      icon: Zap,\n      popular: true,\n      description: \"Büyüyen işletmeler için\",\n      highlight: \"En Popüler\",\n      prices: {\n        try: { monthly: 299, yearly: 2390 },\n        usd: { monthly: 29, yearly: 232 },\n        eur: { monthly: 26, yearly: 208 },\n      },\n      features: [\n        { text: '50 yol haritası/ay', included: true },\n        { text: 'Gelişmiş AI danışman', included: true },\n        { text: 'SEO analizi', included: true },\n        { text: 'Öncelikli destek', included: true },\n        { text: \"Gelişmiş raporlama\", included: true },\n        { text: \"API erişimi\", included: true },\n        { text: \"Özel entegrasyonlar\", included: true },\n        { text: 'CRM entegrasyonu', included: false },\n      ],\n      buttonText: 'Pro\\'ya Başla',\n      buttonVariant: 'default',\n    },\n    {\n      name: 'Business',\n      icon: Building,\n      description: \"Ölçeklenen şirketler için\",\n      prices: {\n        try: { monthly: 599, yearly: 4790 },\n        usd: { monthly: 59, yearly: 472 },\n        eur: { monthly: 52, yearly: 416 },\n      },\n      features: [\n        { text: 'Sınırsız yol haritası', included: true },\n        { text: 'Tüm modüler araçlar', included: true },\n        { text: 'CRM entegrasyonu', included: true },\n        { text: '7/24 destek', included: true },\n        { text: \"Beyaz etiket çözümü\", included: true },\n        { text: \"Özel analitik\", included: true },\n        { text: \"Çoklu kullanıcı\", included: true },\n        { text: \"SSO entegrasyonu\", included: true },\n      ],\n      buttonText: 'Business\\'a Başla',\n      buttonVariant: 'default',\n    },\n    {\n      name: 'Enterprise',\n      icon: Crown,\n      enterprise: true,\n      description: \"Kurumsal çözümler\",\n      prices: {\n        try: { monthly: 0, yearly: 0 },\n        usd: { monthly: 0, yearly: 0 },\n        eur: { monthly: 0, yearly: 0 },\n      },\n      features: [\n        { text: 'Özel çözümler', included: true },\n        { text: 'Özel entegrasyonlar', included: true },\n        { text: 'Özel eğitim', included: true },\n        { text: 'Özel destek', included: true },\n        { text: \"SLA garantisi\", included: true },\n        { text: \"On-premise kurulum\", included: true },\n        { text: \"Gelişmiş güvenlik\", included: true },\n        { text: \"Özel geliştirme\", included: true },\n      ],\n      buttonText: 'Satışla Görüş',\n      buttonVariant: 'outline',\n    },\n  ];\n\n  const formatPrice = (plan: Plan) => {\n    if (plan.enterprise) {\n      return 'Özel';\n    }\n    \n    const price = plan.prices[currency][billingPeriod];\n    if (price === 0) return getCurrencySymbol(currency) + '0';\n    \n    return getCurrencySymbol(currency) + price.toLocaleString();\n  };\n\n  const getPeriodText = () => {\n    return billingPeriod === 'monthly' ? '/aylık' : '/yıllık';\n  };\n\n  const getSavings = () => {\n    return billingPeriod === 'yearly' ? '20%' : null;\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Hero Section */}\n      <section className=\"pt-24 pb-16 bg-gradient-to-br from-soft-paper to-background\">\n        <div className=\"max-w-4xl mx-auto px-6 text-center\">\n          <h1 className=\"font-heading font-bold text-4xl lg:text-6xl mb-6 tracking-wide\">\n            Basit ve Şeffaf Fiyatlandırma\n          </h1>\n          <p className=\"text-xl text-muted-foreground mb-12 leading-relaxed\">\n            İhtiyacına göre ölçeklenebilir planlar\n          </p>\n          \n          {/* Currency & Billing Toggle */}\n          <div className=\"bg-background p-6 rounded-3xl shadow-lg border border-border inline-flex flex-col sm:flex-row items-center gap-6\">\n            <div className=\"flex items-center space-x-3\">\n              <label className=\"text-sm font-medium text-muted-foreground\">Para Birimi:</label>\n              <Select value={currency} onValueChange={(value: Currency) => setCurrency(value)}>\n                <SelectTrigger className=\"w-32 rounded-xl\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"try\">TRY (₺)</SelectItem>\n                  <SelectItem value=\"usd\">USD ($)</SelectItem>\n                  <SelectItem value=\"eur\">EUR (€)</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n            \n            <div className=\"flex items-center space-x-4 bg-soft-paper p-2 rounded-2xl\">\n              <span className={cn(\"text-sm font-medium px-3 py-2 rounded-xl transition-colors\", billingPeriod === 'monthly' ? \"bg-background text-foreground shadow-sm\" : \"text-muted-foreground\")}>Aylık</span>\n              <Switch\n                checked={billingPeriod === 'yearly'}\n                onCheckedChange={(checked) => setBillingPeriod(checked ? 'yearly' : 'monthly')}\n              />\n              <div className=\"flex items-center space-x-2\">\n                <span className={cn(\"text-sm font-medium px-3 py-2 rounded-xl transition-colors\", billingPeriod === 'yearly' ? \"bg-background text-foreground shadow-sm\" : \"text-muted-foreground\")}>Yıllık</span>\n                {billingPeriod === 'yearly' && (\n                  <Badge className=\"bg-accent-mint text-white text-xs\">\n                    %20 İndirim\n                  </Badge>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Pricing Cards */}\n      <section className=\"py-24 bg-background\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <div className=\"grid lg:grid-cols-4 gap-8\">\n            {plans.map((plan, index) => (\n              <div \n                key={index} \n                className={cn(\n                  \"relative rounded-3xl p-8 transition-all duration-300 hover-lift\",\n                  plan.popular \n                    ? \"border-2 border-primary bg-gradient-to-b from-primary/5 to-background shadow-xl scale-105\" \n                    : \"border border-border bg-background shadow-lg hover:border-primary/20\"\n                )}\n              >\n                {plan.popular && (\n                  <div className=\"absolute -top-4 left-1/2 transform -translate-x-1/2\">\n                    <Badge className=\"bg-primary text-primary-foreground px-6 py-2 text-sm font-semibold\">\n                      {plan.highlight}\n                    </Badge>\n                  </div>\n                )}\n                \n                <div className=\"text-center mb-8\">\n                  <div className={cn(\n                    \"w-16 h-16 mx-auto rounded-2xl flex items-center justify-center mb-4\",\n                    plan.popular ? \"bg-primary text-primary-foreground\" : \"bg-primary/10 text-primary\"\n                  )}>\n                    <plan.icon className=\"h-8 w-8\" />\n                  </div>\n                  \n                  <h3 className=\"font-heading font-bold text-2xl mb-2\">{plan.name}</h3>\n                  <p className=\"text-muted-foreground text-sm mb-6\">{plan.description}</p>\n                  \n                  <div className=\"mb-6\">\n                    <div className=\"text-4xl font-bold text-primary mb-1\">\n                      {formatPrice(plan)}\n                    </div>\n                    {!plan.enterprise && (\n                      <div className=\"text-muted-foreground text-sm\">\n                        {getPeriodText()}\n                        {getSavings() && billingPeriod === 'yearly' && (\n                          <span className=\"text-accent-mint font-medium ml-2\">\n                            {getSavings()} tasarruf\n                          </span>\n                        )}\n                      </div>\n                    )}\n                  </div>\n                </div>\n                \n                <div className=\"space-y-4 mb-8\">\n                  {plan.features.map((feature, featureIndex) => (\n                    <div key={featureIndex} className=\"flex items-start space-x-3\">\n                      <div className={cn(\n                        \"w-5 h-5 rounded-full flex items-center justify-center mt-0.5 flex-shrink-0\",\n                        feature.included \n                          ? \"bg-accent-mint text-white\" \n                          : \"bg-muted text-muted-foreground\"\n                      )}>\n                        <Check className=\"h-3 w-3\" />\n                      </div>\n                      <span className={cn(\n                        \"text-sm\",\n                        feature.included ? \"text-foreground\" : \"text-muted-foreground line-through\"\n                      )}>\n                        {feature.text}\n                      </span>\n                    </div>\n                  ))}\n                </div>\n                \n                <Button \n                  variant={plan.buttonVariant}\n                  className={cn(\n                    \"w-full py-4 text-lg font-semibold hover-lift\",\n                    plan.buttonVariant === 'outline' && !plan.popular && \"border-2 border-primary text-primary hover:bg-primary hover:text-primary-foreground\",\n                    plan.popular && \"bg-primary hover:bg-primary/90 shadow-lg\"\n                  )}\n                >\n                  {plan.buttonText}\n                </Button>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* FAQ Section */}\n      <section className=\"py-24 bg-soft-paper\">\n        <div className=\"max-w-4xl mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-heading font-bold text-3xl lg:text-4xl mb-4\">\n              Fiyatlandırma Hakkında SSS\n            </h2>\n            <p className=\"text-xl text-muted-foreground\">\n              En çok sorulan sorular ve cevapları\n            </p>\n          </div>\n          \n          <div className=\"grid md:grid-cols-2 gap-8\">\n            <div className=\"space-y-6\">\n              <div className=\"bg-background p-6 rounded-2xl shadow-sm\">\n                <h3 className=\"font-semibold text-lg mb-3\">Ücretsiz deneme süresi var mı?</h3>\n                <p className=\"text-muted-foreground\">Evet, tüm ücretli planlar 14 gün ücretsiz deneme ile gelir. Starter planı ise tamamen ücretsizdir.</p>\n              </div>\n              \n              <div className=\"bg-background p-6 rounded-2xl shadow-sm\">\n                <h3 className=\"font-semibold text-lg mb-3\">Plan değişikliği yapabilir miyim?</h3>\n                <p className=\"text-muted-foreground\">Evet, istediğiniz zaman planınızı yükseltebilir veya düşürebilirsiniz. Değişiklik anında geçerli olur.</p>\n              </div>\n              \n              <div className=\"bg-background p-6 rounded-2xl shadow-sm\">\n                <h3 className=\"font-semibold text-lg mb-3\">İptal politikası nedir?</h3>\n                <p className=\"text-muted-foreground\">İstediğiniz zaman iptal edebilirsiniz. İptal sonrası abonelik süreniz sonuna kadar hizmet almaya devam edersiniz.</p>\n              </div>\n            </div>\n            \n            <div className=\"space-y-6\">\n              <div className=\"bg-background p-6 rounded-2xl shadow-sm\">\n                <h3 className=\"font-semibold text-lg mb-3\">Faturalandırma nasıl yapılır?</h3>\n                <p className=\"text-muted-foreground\">Aylık veya yıllık olarak otomatik faturalandırma yapılır. Tüm ödemeler güvenli SSL ile korunmaktadır.</p>\n              </div>\n              \n              <div className=\"bg-background p-6 rounded-2xl shadow-sm\">\n                <h3 className=\"font-semibold text-lg mb-3\">Kurumsal indirim var mı?</h3>\n                <p className=\"text-muted-foreground\">50+ kullanıcı için özel indirimler mevcuttur. Satış ekibimizle görüşün.</p>\n              </div>\n              \n              <div className=\"bg-background p-6 rounded-2xl shadow-sm\">\n                <h3 className=\"font-semibold text-lg mb-3\">Veri güvenliği nasıl sağlanıyor?</h3>\n                <p className=\"text-muted-foreground\">Tüm veriler KVKK ve GDPR uyumlu olarak şifrelenerek saklanır ve işlenir.</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Bottom CTA */}\n      <section className=\"py-24 bg-gradient-to-r from-primary to-primary/90 text-primary-foreground\">\n        <div className=\"max-w-4xl mx-auto px-6 text-center\">\n          <h2 className=\"font-heading font-bold text-3xl lg:text-4xl mb-4\">\n            Hemen Başlayın\n          </h2>\n          <p className=\"text-xl opacity-90 mb-8\">\n            14 gün ücretsiz deneme ile risk almadan deneyin\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button \n              size=\"lg\" \n              className=\"bg-background text-primary hover:bg-background/90 px-8 py-4 text-lg font-semibold hover-lift\"\n            >\n              Ücretsiz Başla\n            </Button>\n            <Button \n              variant=\"outline\" \n              size=\"lg\" \n              className=\"border-2 border-background text-background hover:bg-background hover:text-primary px-8 py-4 text-lg font-semibold hover-lift\"\n            >\n              Satışla Görüş\n            </Button>\n          </div>\n          \n          <div className=\"mt-8 text-sm opacity-75\">\n            Tüm planlar 14 gün ücretsiz deneme ile gelir. İstediğin zaman iptal edebilirsin.\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":15586},"client/src/pages/products.tsx":{"content":"import { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { useLanguage } from '@/hooks/use-language';\nimport { Check, ArrowRight, Sparkles, TrendingUp, Target, Zap, Users, BarChart3, Link2 } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { Link } from 'wouter';\n\nexport default function ProductsPage() {\n  const [activeTab, setActiveTab] = useState('launch');\n  const { t } = useLanguage();\n\n  const products = [\n    {\n      id: 'launch',\n      name: 'LAUNCH',\n      subtitle: 'Girişimciler için',\n      icon: Target,\n      color: 'bg-[#E1182E]',\n      lightColor: 'bg-red-50',\n      textColor: 'text-[#E1182E]',\n      description: 'AI destekli iş planlama ve strateji geliştirme çözümleri ile fikrini gerçeğe dönüştür.',\n      features: [\n        'AI ile iş fikri analizi ve geliştirme',\n        'Pazar araştırması ve rakip analizi',\n        'MVP yol haritası oluşturma',\n        'Finansal projeksiyon ve planlama',\n        'Yatırımcı pitch deck hazırlama',\n        'İlk müşteri bulma stratejileri',\n        'DealBridge ile yatırımcı eşleştirmesi'\n      ],\n      cta: 'Detayları Gör',\n      link: '/launch'\n    },\n    {\n      id: 'scale',\n      name: 'SCALE',\n      subtitle: 'Büyüyen şirketler için',\n      icon: TrendingUp,\n      color: 'bg-blue-600',\n      lightColor: 'bg-blue-50',\n      textColor: 'text-blue-600',\n      description: 'Operasyonel verimliliği artırın ve sürdürülebilir büyüme sağlayın.',\n      features: [\n        'Satış funnel optimizasyonu',\n        'SEO ve reklam stratejileri',\n        'Süreç otomasyonu ve entegrasyonu',\n        'Müşteri deneyimi iyileştirme',\n        'Takım performans analitiği',\n        'Büyüme metrik takibi',\n        'DealBridge ile B2B ortaklık fırsatları'\n      ],\n      cta: 'Detayları Gör',\n      link: '/scale'\n    },\n    {\n      id: 'invest',\n      name: 'INVEST',\n      subtitle: 'Yatırımcılar için',\n      icon: BarChart3,\n      color: 'bg-green-600',\n      lightColor: 'bg-green-50',\n      textColor: 'text-green-600',\n      description: 'AI destekli yatırım analizi ve portföy yönetimi araçları.',\n      features: [\n        'Startup profil analizi ve puanlama',\n        'Yatırım tezi eşleştirme',\n        'Risk değerlendirme modelleri',\n        'Portföy izleme ve raporlama',\n        'Exit stratejisi planlama',\n        'Pazar trend analitiği',\n        'DealBridge ile girişim keşfi'\n      ],\n      cta: 'Detayları Gör',\n      link: '/invest'\n    }\n  ];\n\n  const activeProduct = products.find(p => p.id === activeTab) || products[0];\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      {/* Hero Section */}\n      <section className=\"pt-20 pb-16 bg-white\">\n        <div className=\"max-w-6xl mx-auto px-6 text-center\">\n          <h1 className=\"font-heading font-bold text-5xl lg:text-7xl mb-8 text-gray-900 leading-tight\">\n            Üç segment,{' '}\n            <span className=\"bg-gradient-to-r from-[#E1182E] to-[#FF4757] bg-clip-text text-transparent\">\n              tek platform\n            </span>\n          </h1>\n          <p className=\"text-xl lg:text-2xl text-gray-600 mb-16 leading-relaxed max-w-4xl mx-auto\">\n            İşletmenizin büyüklüğü ve ihtiyaçlarına özel tasarlanmış AI çözümleri ile geleceği bugünden inşa edin.\n          </p>\n        </div>\n      </section>\n\n      {/* Product Navigation Tabs */}\n      <section className=\"py-8 bg-gray-50\">\n        <div className=\"max-w-4xl mx-auto px-6\">\n          <div className=\"flex justify-center\">\n            <div className=\"bg-white p-1 rounded-2xl border border-gray-200 shadow-sm\">\n              <div className=\"flex\">\n                {products.map((product) => (\n                  <button\n                    key={product.id}\n                    onClick={() => setActiveTab(product.id)}\n                    className={cn(\n                      \"relative px-6 py-3 rounded-xl transition-all duration-300 font-semibold text-sm\",\n                      activeTab === product.id\n                        ? `${product.color} text-white shadow-md`\n                        : \"text-gray-600 hover:text-gray-900 hover:bg-gray-50\"\n                    )}\n                  >\n                    <div className=\"flex items-center gap-2\">\n                      <product.icon className=\"h-4 w-4\" />\n                      {product.name}\n                    </div>\n                  </button>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Product Detail Section */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <div className=\"grid lg:grid-cols-2 gap-16 items-center\">\n            <div>\n              <div className={cn(\"inline-flex items-center px-4 py-2 rounded-full text-sm font-semibold mb-6\", activeProduct.lightColor, activeProduct.textColor)}>\n                <activeProduct.icon className=\"h-4 w-4 mr-2\" />\n                {activeProduct.subtitle}\n              </div>\n              \n              <h2 className=\"font-heading font-bold text-4xl lg:text-5xl mb-6 text-gray-900\">\n                {activeProduct.name}\n              </h2>\n              \n              <p className=\"text-xl text-gray-600 mb-8 leading-relaxed\">\n                {activeProduct.description}\n              </p>\n              \n              <div className=\"space-y-4 mb-8\">\n                {activeProduct.features.map((feature, index) => (\n                  <div key={index} className=\"flex items-start gap-3\">\n                    <Check className={cn(\"h-5 w-5 flex-shrink-0 mt-0.5\", activeProduct.textColor)} />\n                    <span className=\"text-gray-700\">{feature}</span>\n                  </div>\n                ))}\n              </div>\n\n              <div className=\"flex flex-col sm:flex-row gap-4\">\n                <Link href={activeProduct.link}>\n                  <Button \n                    size=\"lg\" \n                    className={cn(\"font-semibold text-white\", activeProduct.color)}\n                  >\n                    {activeProduct.cta} <ArrowRight className=\"ml-2 h-4 w-4\" />\n                  </Button>\n                </Link>\n                <Button \n                  variant=\"outline\" \n                  size=\"lg\"\n                  className=\"font-semibold border-gray-300\"\n                >\n                  Daha Fazla Bilgi\n                </Button>\n              </div>\n            </div>\n\n            <div className=\"relative\">\n              <div className=\"bg-gray-100 rounded-2xl p-8 h-96 flex items-center justify-center\">\n                <div className=\"text-center\">\n                  <activeProduct.icon className=\"h-24 w-24 text-gray-400 mx-auto mb-4\" />\n                  <p className=\"text-gray-500\">{activeProduct.name} Dashboard Preview</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* All Products Overview */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-heading font-bold text-4xl lg:text-5xl mb-6 text-gray-900\">\n              Hangi çözüm size uygun?\n            </h2>\n            <p className=\"text-xl text-gray-600\">\n              İhtiyaçlarınıza en uygun AI çözümünü keşfedin\n            </p>\n          </div>\n          \n          <div className=\"grid md:grid-cols-3 gap-8\">\n            {products.map((product) => (\n              <div \n                key={product.id} \n                className={cn(\n                  \"bg-white p-8 rounded-2xl border-2 transition-all cursor-pointer hover:shadow-lg\",\n                  activeTab === product.id ? \"border-current shadow-lg\" : \"border-gray-200\",\n                  activeTab === product.id && product.textColor\n                )}\n                onClick={() => setActiveTab(product.id)}\n              >\n                <div className={cn(\"w-12 h-12 rounded-xl flex items-center justify-center mb-6\", product.lightColor, product.textColor)}>\n                  <product.icon className=\"h-6 w-6\" />\n                </div>\n                \n                <h3 className=\"font-semibold text-xl mb-2 text-gray-900\">{product.name}</h3>\n                <p className={cn(\"text-sm font-medium mb-4\", product.textColor)}>{product.subtitle}</p>\n                <p className=\"text-gray-600 mb-6 text-sm leading-relaxed\">{product.description}</p>\n                \n                <div className=\"space-y-3 mb-6\">\n                  {product.features.slice(0, 3).map((feature, index) => (\n                    <div key={index} className=\"flex items-start gap-2\">\n                      <Check className={cn(\"h-4 w-4 flex-shrink-0 mt-0.5\", product.textColor)} />\n                      <span className=\"text-gray-700 text-sm\">{feature}</span>\n                    </div>\n                  ))}\n                </div>\n                \n                <Link href={product.link}>\n                  <Button \n                    className={cn(\"w-full font-semibold text-white\", product.color)}\n                  >\n                    {product.cta}\n                  </Button>\n                </Link>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-4xl mx-auto px-6 text-center\">\n          <h2 className=\"font-heading font-bold text-4xl lg:text-5xl mb-6 text-gray-900\">\n            İşinize en uygun çözümü bulmaya hazır mısınız?\n          </h2>\n          <p className=\"text-xl text-gray-600 mb-8\">\n            AI destekli büyüme yolculuğunuza bugün başlayın. Uzmanlarımızla konuşun ve size özel çözümü keşfedin.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button size=\"lg\" className=\"bg-[#E1182E] hover:bg-[#C51628] text-white px-8 py-4 text-lg font-semibold\">\n              Ücretsiz Danışmanlık Al <ArrowRight className=\"ml-2 h-5 w-5\" />\n            </Button>\n            <Button variant=\"outline\" size=\"lg\" className=\"border-gray-300 text-gray-700 px-8 py-4 text-lg font-semibold\">\n              Canlı Demo İzle\n            </Button>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":10408},"client/src/pages/scale.tsx":{"content":"import { Button } from '@/components/ui/button';\nimport { useLanguage } from '@/hooks/use-language';\nimport { Check, ArrowRight, TrendingUp, BarChart3, Users, Zap } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\nexport default function ScalePage() {\n  const { t } = useLanguage();\n\n  const features = [\n    {\n      icon: TrendingUp,\n      title: 'Satış Funnel Optimizasyonu',\n      description: 'Satış süreçlerinizi analiz ederek dönüşüm oranlarınızı artıracak optimizasyonlar öneririz.'\n    },\n    {\n      icon: BarChart3,\n      title: 'SEO ve Reklam Stratejileri',\n      description: 'Dijital pazarlama stratejilerinizi AI ile optimize ederek müşteri kazanım maliyetinizi düşürürüz.'\n    },\n    {\n      icon: Zap,\n      title: 'Süreç Otomasyonu',\n      description: 'İş süreçlerinizi otomatikleştirerek verimliliği artırıyor ve operasyonel maliyetleri azaltıyoruz.'\n    }\n  ];\n\n  const benefits = [\n    'Satış funnel optimizasyonu',\n    'SEO ve reklam stratejileri',\n    'Süreç otomasyonu ve entegrasyonu',\n    'Müşteri deneyimi iyileştirme',\n    'Takım performans analitiği',\n    'Büyüme metrik takibi',\n    'Operasyonel verimlilik artışı',\n    'Maliyet optimizasyonu'\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      {/* Hero Section */}\n      <section className=\"pt-20 pb-16 bg-white\">\n        <div className=\"max-w-6xl mx-auto px-6\">\n          <div className=\"grid lg:grid-cols-2 gap-16 items-center\">\n            <div>\n              <div className=\"inline-flex items-center px-4 py-2 rounded-full text-sm font-semibold mb-6 bg-blue-50 text-blue-600\">\n                <TrendingUp className=\"h-4 w-4 mr-2\" />\n                Büyüyen şirketler için\n              </div>\n              \n              <h1 className=\"font-heading font-bold text-5xl lg:text-7xl mb-8 text-gray-900 leading-tight\">\n                SCALE\n              </h1>\n              \n              <p className=\"text-xl lg:text-2xl text-gray-600 mb-8 leading-relaxed\">\n                Operasyonel verimliliği artırın ve sürdürülebilir büyüme sağlayın.\n              </p>\n\n              <div className=\"flex flex-col sm:flex-row gap-4 mb-12\">\n                <Button size=\"lg\" className=\"bg-blue-600 hover:bg-blue-700 text-white px-8 py-4 text-lg font-semibold\">\n                  Demo Talep Et <ArrowRight className=\"ml-2 h-5 w-5\" />\n                </Button>\n                <Button variant=\"outline\" size=\"lg\" className=\"border-gray-300 text-gray-700 px-8 py-4 text-lg font-semibold\">\n                  Audit Örneği Gör\n                </Button>\n              </div>\n\n              <div className=\"flex items-center gap-4 text-sm text-gray-500\">\n                <div className=\"flex items-center gap-1\">\n                  <Check className=\"h-4 w-4 text-green-500\" />\n                  Ücretsiz analiz\n                </div>\n                <div className=\"flex items-center gap-1\">\n                  <Check className=\"h-4 w-4 text-green-500\" />\n                  30 gün para iadesi\n                </div>\n              </div>\n            </div>\n\n            <div className=\"relative\">\n              <div className=\"bg-gray-100 rounded-2xl p-8 h-96 flex items-center justify-center\">\n                <div className=\"text-center\">\n                  <TrendingUp className=\"h-24 w-24 text-gray-400 mx-auto mb-4\" />\n                  <p className=\"text-gray-500\">SCALE Dashboard Preview</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Features Section */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-6xl mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-heading font-bold text-4xl lg:text-5xl mb-6 text-gray-900\">\n              AI ile işinizi büyütün\n            </h2>\n            <p className=\"text-xl text-gray-600\">\n              Veriye dayalı kararlarla sürdürülebilir büyüme elde edin\n            </p>\n          </div>\n          \n          <div className=\"grid md:grid-cols-3 gap-8 mb-16\">\n            {features.map((feature, index) => (\n              <div key={index} className=\"bg-white p-8 rounded-2xl border border-gray-200\">\n                <div className=\"w-12 h-12 bg-blue-50 text-blue-600 rounded-xl flex items-center justify-center mb-6\">\n                  <feature.icon className=\"h-6 w-6\" />\n                </div>\n                <h3 className=\"font-semibold text-xl mb-4 text-gray-900\">{feature.title}</h3>\n                <p className=\"text-gray-600 leading-relaxed\">{feature.description}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Benefits Section */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-6xl mx-auto px-6\">\n          <div className=\"grid lg:grid-cols-2 gap-16 items-center\">\n            <div>\n              <h2 className=\"font-heading font-bold text-4xl lg:text-5xl mb-8 text-gray-900\">\n                Hangi alanlarda gelişim sağlayacaksınız?\n              </h2>\n              \n              <div className=\"space-y-4\">\n                {benefits.map((benefit, index) => (\n                  <div key={index} className=\"flex items-start gap-3\">\n                    <Check className=\"h-5 w-5 text-blue-600 flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-gray-700\">{benefit}</span>\n                  </div>\n                ))}\n              </div>\n\n              <div className=\"mt-8\">\n                <Button size=\"lg\" className=\"bg-blue-600 hover:bg-blue-700 text-white px-8 py-4 text-lg font-semibold\">\n                  Demo Talep Et <ArrowRight className=\"ml-2 h-5 w-5\" />\n                </Button>\n              </div>\n            </div>\n\n            <div className=\"relative\">\n              <div className=\"bg-gradient-to-br from-blue-50 to-indigo-50 rounded-2xl p-8 h-96 flex items-center justify-center\">\n                <div className=\"text-center\">\n                  <BarChart3 className=\"h-24 w-24 text-blue-600 mx-auto mb-4\" />\n                  <p className=\"text-gray-700 font-medium\">Büyüme Analitik Panosu</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* ROI Section */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-6xl mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-heading font-bold text-4xl lg:text-5xl mb-6 text-gray-900\">\n              Sonuçlarla konuşuyoruz\n            </h2>\n            <p className=\"text-xl text-gray-600\">\n              Müşterilerimizin elde ettiği ortalama iyileştirmeler\n            </p>\n          </div>\n          \n          <div className=\"grid md:grid-cols-3 gap-8\">\n            <div className=\"text-center bg-white p-8 rounded-2xl border border-gray-200\">\n              <div className=\"text-4xl font-bold text-blue-600 mb-2\">%35</div>\n              <div className=\"text-gray-600\">Satış artışı</div>\n            </div>\n            <div className=\"text-center bg-white p-8 rounded-2xl border border-gray-200\">\n              <div className=\"text-4xl font-bold text-blue-600 mb-2\">%50</div>\n              <div className=\"text-gray-600\">Operasyonel verimlilik</div>\n            </div>\n            <div className=\"text-center bg-white p-8 rounded-2xl border border-gray-200\">\n              <div className=\"text-4xl font-bold text-blue-600 mb-2\">%25</div>\n              <div className=\"text-gray-600\">Maliyet azalması</div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-4xl mx-auto px-6 text-center\">\n          <h2 className=\"font-heading font-bold text-4xl lg:text-5xl mb-6 text-gray-900\">\n            İşinizi bir sonraki seviyeye taşımaya hazır mısınız?\n          </h2>\n          <p className=\"text-xl text-gray-600 mb-8\">\n            AI destekli çözümlerimizle sürdürülebilir büyüme sağlayın.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button size=\"lg\" className=\"bg-blue-600 hover:bg-blue-700 text-white px-8 py-4 text-lg font-semibold\">\n              Demo Talep Et <ArrowRight className=\"ml-2 h-5 w-5\" />\n            </Button>\n            <Button variant=\"outline\" size=\"lg\" className=\"border-gray-300 text-gray-700 px-8 py-4 text-lg font-semibold\">\n              Uzmanla Konuş\n            </Button>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":8641},"client/src/components/layout/footer.tsx":{"content":"import { Link } from 'wouter';\nimport { useLanguage } from '@/hooks/use-language';\nimport { Eye, Linkedin, Twitter, Github } from 'lucide-react';\n\nexport function Footer() {\n  const { t } = useLanguage();\n\n  return (\n    <footer className=\"bg-ink-black text-white py-16\">\n      <div className=\"max-w-7xl mx-auto px-6\">\n        <div className=\"grid lg:grid-cols-5 gap-8\">\n          {/* Logo & Description */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"flex items-center space-x-3 mb-6\">\n              <div className=\"w-8 h-8 flex items-center justify-center text-primary\">\n                <Eye className=\"h-6 w-6\" />\n              </div>\n              <span className=\"font-heading font-bold text-xl tracking-wide\">EraEnvision</span>\n            </div>\n            <p className=\"text-gray-400 mb-6 leading-relaxed\">\n              {t('footerDescription')}\n            </p>\n            <div className=\"flex space-x-4\">\n              <a \n                href=\"#\" \n                className=\"w-10 h-10 bg-gray-800 rounded-lg flex items-center justify-center hover:bg-primary transition-colors\"\n                aria-label=\"LinkedIn\"\n              >\n                <Linkedin className=\"h-5 w-5\" />\n              </a>\n              <a \n                href=\"#\" \n                className=\"w-10 h-10 bg-gray-800 rounded-lg flex items-center justify-center hover:bg-primary transition-colors\"\n                aria-label=\"Twitter\"\n              >\n                <Twitter className=\"h-5 w-5\" />\n              </a>\n              <a \n                href=\"#\" \n                className=\"w-10 h-10 bg-gray-800 rounded-lg flex items-center justify-center hover:bg-primary transition-colors\"\n                aria-label=\"GitHub\"\n              >\n                <Github className=\"h-5 w-5\" />\n              </a>\n            </div>\n          </div>\n\n          {/* Products */}\n          <div>\n            <h3 className=\"font-semibold mb-4\">{t('products')}</h3>\n            <ul className=\"space-y-3 text-gray-400\">\n              <li><Link href=\"/products\" className=\"hover:text-white transition-colors\">Launch</Link></li>\n              <li><Link href=\"/products\" className=\"hover:text-white transition-colors\">Scale</Link></li>\n              <li><Link href=\"/products\" className=\"hover:text-white transition-colors\">Invest</Link></li>\n              <li><Link href=\"/pricing\" className=\"hover:text-white transition-colors\">{t('pricing')}</Link></li>\n            </ul>\n          </div>\n\n          {/* Company */}\n          <div>\n            <h3 className=\"font-semibold mb-4\">{t('companyFooter')}</h3>\n            <ul className=\"space-y-3 text-gray-400\">\n              <li><Link href=\"/about\" className=\"hover:text-white transition-colors\">{t('about')}</Link></li>\n              <li><Link href=\"/contact\" className=\"hover:text-white transition-colors\">{t('contact')}</Link></li>\n              <li><Link href=\"#\" className=\"hover:text-white transition-colors\">{t('careers')}</Link></li>\n              <li><Link href=\"#\" className=\"hover:text-white transition-colors\">{t('blog')}</Link></li>\n            </ul>\n          </div>\n\n          {/* Legal */}\n          <div>\n            <h3 className=\"font-semibold mb-4\">{t('legal')}</h3>\n            <ul className=\"space-y-3 text-gray-400\">\n              <li><Link href=\"#\" className=\"hover:text-white transition-colors\">{t('privacyPolicy')}</Link></li>\n              <li><Link href=\"#\" className=\"hover:text-white transition-colors\">{t('termsOfService')}</Link></li>\n              <li><Link href=\"#\" className=\"hover:text-white transition-colors\">{t('cookiePolicy')}</Link></li>\n              <li><Link href=\"#\" className=\"hover:text-white transition-colors\">{t('aiDisclaimer')}</Link></li>\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"border-t border-gray-800 mt-12 pt-8 flex flex-col md:flex-row justify-between items-center\">\n          <p className=\"text-gray-400 text-sm\">{t('footerCopyright')}</p>\n          <p className=\"text-gray-400 text-sm mt-4 md:mt-0\">{t('footerDisclaimer')}</p>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":4120},"client/src/components/layout/header.tsx":{"content":"import { useState } from 'react';\nimport { Link } from 'wouter';\nimport { Button } from '@/components/ui/button';\nimport { LanguageSwitcher } from '@/components/ui/language-switcher';\nimport { useLanguage } from '@/hooks/use-language';\nimport { Eye, ChevronDown, Menu, X, Target, TrendingUp, BarChart3 } from 'lucide-react';\n\nexport function Header() {\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [isProductsOpen, setIsProductsOpen] = useState(false);\n  const { t } = useLanguage();\n\n  return (\n    <header className=\"sticky top-0 bg-white/95 backdrop-blur-sm border-b border-gray-200 z-40\">\n      <nav className=\"max-w-7xl mx-auto px-4 sm:px-6\">\n        <div className=\"flex items-center justify-between h-16\">\n          {/* Logo */}\n          <Link href=\"/\" className=\"flex items-center space-x-3 hover:opacity-80 transition-opacity\">\n            <div className=\"w-8 h-8 flex items-center justify-center text-[#E1182E]\">\n              <Eye className=\"h-6 w-6\" />\n            </div>\n            <span className=\"font-heading font-bold text-xl tracking-wide text-gray-900\">EraEnvision</span>\n          </Link>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden lg:flex items-center space-x-8\">\n            <div \n              className=\"relative\"\n              onMouseEnter={() => setIsProductsOpen(true)}\n              onMouseLeave={() => setIsProductsOpen(false)}\n            >\n              <Link href=\"/products\" className=\"flex items-center text-gray-600 hover:text-gray-900 transition-colors font-medium\">\n                Ürünler <ChevronDown className=\"ml-1 h-4 w-4\" />\n              </Link>\n              \n              {isProductsOpen && (\n                <div className=\"absolute top-full left-0 mt-2 w-80 bg-white rounded-2xl shadow-lg border border-gray-200 p-4 z-50\">\n                  <div className=\"space-y-3\">\n                    <Link href=\"/launch\" className=\"flex items-start gap-3 p-3 rounded-xl hover:bg-gray-50 transition-colors\">\n                      <div className=\"w-10 h-10 bg-red-50 text-[#E1182E] rounded-lg flex items-center justify-center\">\n                        <Target className=\"h-5 w-5\" />\n                      </div>\n                      <div>\n                        <div className=\"font-semibold text-gray-900\">LAUNCH</div>\n                        <div className=\"text-sm text-gray-500\">Girişimciler için</div>\n                      </div>\n                    </Link>\n                    \n                    <Link href=\"/scale\" className=\"flex items-start gap-3 p-3 rounded-xl hover:bg-gray-50 transition-colors\">\n                      <div className=\"w-10 h-10 bg-blue-50 text-blue-600 rounded-lg flex items-center justify-center\">\n                        <TrendingUp className=\"h-5 w-5\" />\n                      </div>\n                      <div>\n                        <div className=\"font-semibold text-gray-900\">SCALE</div>\n                        <div className=\"text-sm text-gray-500\">Büyüyen şirketler için</div>\n                      </div>\n                    </Link>\n                    \n                    <Link href=\"/invest\" className=\"flex items-start gap-3 p-3 rounded-xl hover:bg-gray-50 transition-colors\">\n                      <div className=\"w-10 h-10 bg-green-50 text-green-600 rounded-lg flex items-center justify-center\">\n                        <BarChart3 className=\"h-5 w-5\" />\n                      </div>\n                      <div>\n                        <div className=\"font-semibold text-gray-900\">INVEST</div>\n                        <div className=\"text-sm text-gray-500\">Yatırımcılar için</div>\n                      </div>\n                    </Link>\n                  </div>\n                </div>\n              )}\n            </div>\n            \n            <Link href=\"/dealbridge\" className=\"text-gray-600 hover:text-gray-900 transition-colors font-medium\">\n              DealBridge\n            </Link>\n            <Link href=\"/pricing\" className=\"text-gray-600 hover:text-gray-900 transition-colors font-medium\">\n              Fiyatlandırma\n            </Link>\n            <Link href=\"/blog\" className=\"text-gray-600 hover:text-gray-900 transition-colors font-medium\">\n              Blog\n            </Link>\n            <Link href=\"/about\" className=\"text-gray-600 hover:text-gray-900 transition-colors font-medium\">\n              Hakkımızda\n            </Link>\n            <Link href=\"/contact\" className=\"text-gray-600 hover:text-gray-900 transition-colors font-medium\">\n              İletişim\n            </Link>\n          </div>\n\n          {/* Language Switcher & CTA */}\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"hidden sm:block\">\n              <LanguageSwitcher />\n            </div>\n            <Button className=\"bg-[#E1182E] hover:bg-[#C51628] text-white font-semibold hidden sm:block\">\n              Ücretsiz Başla\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"lg:hidden text-gray-600\"\n              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n            >\n              {isMobileMenuOpen ? <X className=\"h-5 w-5\" /> : <Menu className=\"h-5 w-5\" />}\n            </Button>\n          </div>\n        </div>\n\n        {/* Mobile Menu */}\n        {isMobileMenuOpen && (\n          <div className=\"lg:hidden bg-white border-t border-gray-200 shadow-lg\">\n            <div className=\"px-4 sm:px-6 py-6 space-y-6\">\n              \n              {/* Mobile Products Section */}\n              <div>\n                <div className=\"text-sm font-semibold text-gray-900 mb-4\">Ürünler</div>\n                <div className=\"space-y-3\">\n                  <Link \n                    href=\"/launch\" \n                    className=\"flex items-center gap-3 py-2 text-gray-600 hover:text-gray-900 transition-colors\"\n                    onClick={() => setIsMobileMenuOpen(false)}\n                  >\n                    <div className=\"w-8 h-8 bg-red-50 text-[#E1182E] rounded-lg flex items-center justify-center\">\n                      <Target className=\"h-4 w-4\" />\n                    </div>\n                    <div>\n                      <div className=\"font-medium\">LAUNCH</div>\n                      <div className=\"text-xs text-gray-500\">Girişimciler için</div>\n                    </div>\n                  </Link>\n                  \n                  <Link \n                    href=\"/scale\" \n                    className=\"flex items-center gap-3 py-2 text-gray-600 hover:text-gray-900 transition-colors\"\n                    onClick={() => setIsMobileMenuOpen(false)}\n                  >\n                    <div className=\"w-8 h-8 bg-blue-50 text-blue-600 rounded-lg flex items-center justify-center\">\n                      <TrendingUp className=\"h-4 w-4\" />\n                    </div>\n                    <div>\n                      <div className=\"font-medium\">SCALE</div>\n                      <div className=\"text-xs text-gray-500\">Büyüyen şirketler için</div>\n                    </div>\n                  </Link>\n                  \n                  <Link \n                    href=\"/invest\" \n                    className=\"flex items-center gap-3 py-2 text-gray-600 hover:text-gray-900 transition-colors\"\n                    onClick={() => setIsMobileMenuOpen(false)}\n                  >\n                    <div className=\"w-8 h-8 bg-green-50 text-green-600 rounded-lg flex items-center justify-center\">\n                      <BarChart3 className=\"h-4 w-4\" />\n                    </div>\n                    <div>\n                      <div className=\"font-medium\">INVEST</div>\n                      <div className=\"text-xs text-gray-500\">Yatırımcılar için</div>\n                    </div>\n                  </Link>\n                </div>\n              </div>\n              \n              {/* Mobile Navigation Links */}\n              <div className=\"space-y-4 border-t border-gray-200 pt-4\">\n                <Link \n                  href=\"/dealbridge\" \n                  className=\"block text-gray-600 hover:text-gray-900 transition-colors font-medium py-2\"\n                  onClick={() => setIsMobileMenuOpen(false)}\n                >\n                  DealBridge\n                </Link>\n                <Link \n                  href=\"/pricing\" \n                  className=\"block text-gray-600 hover:text-gray-900 transition-colors font-medium py-2\"\n                  onClick={() => setIsMobileMenuOpen(false)}\n                >\n                  Fiyatlandırma\n                </Link>\n                <Link \n                  href=\"/blog\" \n                  className=\"block text-gray-600 hover:text-gray-900 transition-colors font-medium py-2\"\n                  onClick={() => setIsMobileMenuOpen(false)}\n                >\n                  Blog\n                </Link>\n                <Link \n                  href=\"/about\" \n                  className=\"block text-gray-600 hover:text-gray-900 transition-colors font-medium py-2\"\n                  onClick={() => setIsMobileMenuOpen(false)}\n                >\n                  Hakkımızda\n                </Link>\n                <Link \n                  href=\"/contact\" \n                  className=\"block text-gray-600 hover:text-gray-900 transition-colors font-medium py-2\"\n                  onClick={() => setIsMobileMenuOpen(false)}\n                >\n                  İletişim\n                </Link>\n              </div>\n              \n              {/* Mobile CTA & Language */}\n              <div className=\"border-t border-gray-200 pt-4 space-y-4\">\n                <LanguageSwitcher />\n                <Button \n                  className=\"w-full bg-[#E1182E] hover:bg-[#C51628] text-white font-semibold\"\n                  onClick={() => setIsMobileMenuOpen(false)}\n                >\n                  Ücretsiz Başla\n                </Button>\n              </div>\n            </div>\n          </div>\n        )}\n      </nav>\n    </header>\n  );\n}","size_bytes":10013},"client/src/components/sections/contact.tsx":{"content":"import { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { useLanguage } from '@/hooks/use-language';\nimport { useToast } from '@/hooks/use-toast';\n\nexport function ContactSection() {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { t } = useLanguage();\n  const { toast } = useToast();\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    // TODO: Implement actual form submission\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    toast({\n      title: \"Mesajınız gönderildi!\",\n      description: \"En kısa sürede size dönüş yapacağız.\",\n    });\n\n    setIsSubmitting(false);\n  };\n\n  return (\n    <section id=\"contact\" className=\"py-24 bg-soft-paper\">\n      <div className=\"max-w-4xl mx-auto px-6\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"font-heading font-bold text-3xl lg:text-4xl mb-4\">\n            {t('contactTitle')}\n          </h2>\n          <p className=\"text-xl text-muted-foreground\">\n            {t('contactSubtitle')}\n          </p>\n        </div>\n\n        <div className=\"bg-background rounded-2xl shadow-lg p-8\">\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-foreground mb-2\">\n                  {t('fullName')} *\n                </label>\n                <Input\n                  type=\"text\"\n                  required\n                  placeholder={t('fullNamePlaceholder')}\n                  className=\"rounded-xl\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-foreground mb-2\">\n                  {t('email')} *\n                </label>\n                <Input\n                  type=\"email\"\n                  required\n                  placeholder={t('emailPlaceholder')}\n                  className=\"rounded-xl\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-foreground mb-2\">\n                  {t('company')}\n                </label>\n                <Input\n                  type=\"text\"\n                  placeholder={t('companyPlaceholder')}\n                  className=\"rounded-xl\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-foreground mb-2\">\n                  {t('country')}\n                </label>\n                <Select>\n                  <SelectTrigger className=\"rounded-xl\">\n                    <SelectValue placeholder={t('country')} />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"TR\">{t('turkey')}</SelectItem>\n                    <SelectItem value=\"US\">{t('unitedStates')}</SelectItem>\n                    <SelectItem value=\"DE\">{t('germany')}</SelectItem>\n                    <SelectItem value=\"FR\">{t('france')}</SelectItem>\n                    <SelectItem value=\"UK\">{t('unitedKingdom')}</SelectItem>\n                    <SelectItem value=\"other\">{t('other')}</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-foreground mb-2\">\n                  {t('segmentInterest')}\n                </label>\n                <Select>\n                  <SelectTrigger className=\"rounded-xl\">\n                    <SelectValue placeholder={t('segmentInterest')} />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"launch\">Launch ({t('forEntrepreneurs')})</SelectItem>\n                    <SelectItem value=\"scale\">Scale ({t('forBusinesses')})</SelectItem>\n                    <SelectItem value=\"invest\">Invest ({t('forInvestors')})</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-foreground mb-2\">\n                  {t('budgetRange')}\n                </label>\n                <Select>\n                  <SelectTrigger className=\"rounded-xl\">\n                    <SelectValue placeholder={t('budgetRange')} />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"starter\">Starter (Ücretsiz)</SelectItem>\n                    <SelectItem value=\"pro\">Pro (₺299/ay)</SelectItem>\n                    <SelectItem value=\"business\">Business (₺599/ay)</SelectItem>\n                    <SelectItem value=\"enterprise\">Enterprise (Özel)</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-foreground mb-2\">\n                {t('yourMessage')}\n              </label>\n              <Textarea\n                rows={4}\n                placeholder={t('messagePlaceholder')}\n                className=\"rounded-xl resize-none\"\n              />\n            </div>\n\n            <div className=\"space-y-3\">\n              <div className=\"flex items-start space-x-3\">\n                <Checkbox id=\"kvkk-consent\" required className=\"mt-1\" />\n                <label htmlFor=\"kvkk-consent\" className=\"text-sm text-muted-foreground leading-relaxed\">\n                  {t('kvkkConsent')} <span className=\"text-primary\">*</span>\n                </label>\n              </div>\n              <div className=\"flex items-start space-x-3\">\n                <Checkbox id=\"marketing-consent\" className=\"mt-1\" />\n                <label htmlFor=\"marketing-consent\" className=\"text-sm text-muted-foreground leading-relaxed\">\n                  {t('marketingConsent')}\n                </label>\n              </div>\n            </div>\n\n            <Button \n              type=\"submit\" \n              className=\"w-full py-4 text-lg font-semibold hover-lift\" \n              disabled={isSubmitting}\n            >\n              {isSubmitting ? \"Gönderiliyor...\" : t('sendMessage')}\n            </Button>\n          </form>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":6725},"client/src/components/sections/cta-banner.tsx":{"content":"import { Button } from '@/components/ui/button';\nimport { useLanguage } from '@/hooks/use-language';\nimport { Play } from 'lucide-react';\n\nexport function CTABanner() {\n  const { t } = useLanguage();\n\n  return (\n    <section className=\"py-24 bg-gradient-to-r from-primary to-primary/90 text-primary-foreground\">\n      <div className=\"max-w-4xl mx-auto px-6 text-center\">\n        <h2 className=\"font-heading font-bold text-3xl lg:text-4xl mb-4\">\n          {t('ctaBannerTitle')}\n        </h2>\n        <p className=\"text-xl opacity-90 mb-8\">\n          {t('ctaBannerSubtitle')}\n        </p>\n        <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n          <Button \n            size=\"lg\" \n            className=\"bg-background text-primary hover:bg-background/90 px-8 py-4 text-lg font-semibold hover-lift\"\n          >\n            {t('startFree')}\n          </Button>\n          <Button \n            variant=\"outline\" \n            size=\"lg\" \n            className=\"border-2 border-background text-background hover:bg-background hover:text-primary px-8 py-4 text-lg font-semibold hover-lift flex items-center justify-center gap-2\"\n          >\n            <Play className=\"h-5 w-5\" />\n            {t('watchDemo')}\n          </Button>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":1293},"client/src/components/sections/faq.tsx":{"content":"import { useState } from 'react';\nimport { useLanguage } from '@/hooks/use-language';\nimport { ChevronDown } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\nexport function FAQSection() {\n  const [openItems, setOpenItems] = useState<number[]>([]);\n  const { t } = useLanguage();\n\n  const faqItems = [\n    {\n      question: t('howDoesItWork'),\n      answer: t('howDoesItWorkAnswer'),\n    },\n    {\n      question: t('whichSegments'),\n      answer: t('whichSegmentsAnswer'),\n    },\n    {\n      question: t('isDataSafe'),\n      answer: t('isDataSafeAnswer'),\n    },\n    {\n      question: t('freeTrialAvailable'),\n      answer: t('freeTrialAvailableAnswer'),\n    },\n    {\n      question: t('aiReliability'),\n      answer: t('aiReliabilityAnswer'),\n    },\n  ];\n\n  const toggleItem = (index: number) => {\n    setOpenItems(prev => \n      prev.includes(index) \n        ? prev.filter(i => i !== index)\n        : [...prev, index]\n    );\n  };\n\n  return (\n    <section className=\"py-24 bg-background\">\n      <div className=\"max-w-4xl mx-auto px-6\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"font-heading font-bold text-3xl lg:text-4xl mb-4\">\n            {t('faqTitle')}\n          </h2>\n        </div>\n\n        <div className=\"space-y-4\">\n          {faqItems.map((item, index) => (\n            <div key={index} className=\"border border-border rounded-2xl overflow-hidden\">\n              <button\n                className=\"w-full p-6 text-left flex items-center justify-between hover:bg-muted/50 transition-colors\"\n                onClick={() => toggleItem(index)}\n              >\n                <span className=\"font-semibold text-lg pr-4\">{item.question}</span>\n                <ChevronDown \n                  className={cn(\n                    \"h-5 w-5 transition-transform flex-shrink-0\",\n                    openItems.includes(index) && \"rotate-180\"\n                  )}\n                />\n              </button>\n              <div className={cn(\n                \"transition-all duration-300 overflow-hidden\",\n                openItems.includes(index) ? \"max-h-96 opacity-100\" : \"max-h-0 opacity-0\"\n              )}>\n                <div className=\"px-6 pb-6\">\n                  <p className=\"text-muted-foreground leading-relaxed\">{item.answer}</p>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2404},"client/src/components/sections/features.tsx":{"content":"import { useLanguage } from '@/hooks/use-language';\nimport { Brain, Boxes, Rocket } from 'lucide-react';\n\nexport function FeaturesSection() {\n  const { t } = useLanguage();\n\n  const features = [\n    {\n      icon: Brain,\n      title: t('aiConsultant'),\n      description: t('aiConsultantDesc'),\n      color: 'bg-primary/10 text-primary',\n    },\n    {\n      icon: Boxes,\n      title: t('modularTools'),\n      description: t('modularToolsDesc'),\n      color: 'bg-accent-blue/10 text-accent-blue',\n    },\n    {\n      icon: Rocket,\n      title: t('automationFocused'),\n      description: t('automationFocusedDesc'),\n      color: 'bg-accent-mint/10 text-accent-mint',\n    },\n  ];\n\n  return (\n    <section className=\"py-24 bg-soft-paper\">\n      <div className=\"max-w-7xl mx-auto px-6\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"font-heading font-bold text-3xl lg:text-4xl mb-4\">\n            {t('whyEraEnvision')}\n          </h2>\n          <p className=\"text-xl text-muted-foreground\">\n            {t('featuresSubtitle')}\n          </p>\n        </div>\n        \n        <div className=\"grid md:grid-cols-3 gap-8\">\n          {features.map((feature, index) => (\n            <div \n              key={index} \n              className=\"bg-background p-8 rounded-2xl shadow-lg hover-lift\"\n            >\n              <div className={`w-16 h-16 ${feature.color} rounded-2xl flex items-center justify-center mb-6`}>\n                <feature.icon className=\"h-8 w-8\" />\n              </div>\n              <h3 className=\"font-heading font-semibold text-xl mb-4\">\n                {feature.title}\n              </h3>\n              <p className=\"text-muted-foreground\">\n                {feature.description}\n              </p>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":1814},"client/src/components/sections/hero.tsx":{"content":"import { Button } from '@/components/ui/button';\nimport { useLanguage } from '@/hooks/use-language';\nimport { Play, Sparkles, Zap, Target } from 'lucide-react';\nimport { InteractiveOrb, FloatingElements } from '@/components/ui/animated-blobs';\nimport { MorphingButton, FloatingActionButton, PulsatingDot } from '@/components/ui/apple-widgets';\n\nexport function HeroSection() {\n  const { t } = useLanguage();\n\n  return (\n    <section className=\"pt-24 pb-32 bg-gradient-to-br from-soft-paper via-background to-soft-paper relative overflow-hidden min-h-screen flex items-center\">\n      {/* Floating Elements Background */}\n      <FloatingElements />\n      \n      <div className=\"max-w-7xl mx-auto px-6 relative z-10\">\n        <div className=\"grid lg:grid-cols-2 gap-16 items-center\">\n          <div className=\"text-center lg:text-left space-y-8\">\n            {/* Live indicator */}\n            <div className=\"flex items-center justify-center lg:justify-start space-x-2 mb-4\">\n              <PulsatingDot color=\"mint\" size=\"sm\" />\n              <span className=\"text-sm text-muted-foreground font-medium\">AI-Powered • Live Platform</span>\n            </div>\n            \n            {/* Main Title with enhanced animation */}\n            <div className=\"animate-fade-in-up\">\n              <h1 className=\"font-heading font-bold text-5xl lg:text-7xl leading-tight tracking-wide mb-6 relative\">\n                <span className=\"relative inline-block\">\n                  {t('heroTitle').split(' ').slice(0, -1).join(' ')} \n                  <div className=\"absolute -top-4 -right-4\">\n                    <Sparkles className=\"w-8 h-8 text-accent-mint animate-pulse\" />\n                  </div>\n                </span>\n                <br />\n                <span className=\"gradient-text relative\">\n                  {t('heroTitle').split(' ').slice(-1)[0]}\n                  <div className=\"absolute inset-0 bg-gradient-to-r from-primary via-accent-blue to-accent-mint opacity-20 blur-2xl\"></div>\n                </span>\n              </h1>\n            </div>\n            \n            <p className=\"text-xl lg:text-2xl text-muted-foreground mb-8 leading-relaxed animate-fade-in-up delay-200\">\n              {t('heroSubtitle')}\n            </p>\n            \n            {/* Action buttons with morphing effects */}\n            <div className=\"flex flex-col sm:flex-row gap-6 justify-center lg:justify-start animate-fade-in-up delay-400\">\n              <MorphingButton>\n                {t('startFree')}\n              </MorphingButton>\n              <Button \n                variant=\"outline\" \n                size=\"lg\" \n                className=\"hover-lift text-lg px-8 py-4 flex items-center justify-center gap-2 border-2 border-primary text-primary hover:bg-primary hover:text-primary-foreground frosted-glass group\"\n              >\n                <Play className=\"h-5 w-5 group-hover:scale-110 transition-transform duration-300\" />\n                {t('watchDemo')}\n              </Button>\n            </div>\n            \n            {/* Floating action buttons */}\n            <div className=\"flex space-x-4 justify-center lg:justify-start mt-8 animate-fade-in-up delay-600\">\n              <FloatingActionButton icon={Zap} label=\"Hızlı Start\" color=\"primary\" />\n              <FloatingActionButton icon={Target} label=\"Segment Seç\" color=\"blue\" />\n              <FloatingActionButton icon={Sparkles} label=\"AI Analiz\" color=\"mint\" />\n            </div>\n          </div>\n          \n          {/* Interactive visual section */}\n          <div className=\"relative animate-fade-in-up delay-300\">\n            <div className=\"relative z-10 group\">\n              {/* Main image with advanced effects */}\n              <div className=\"relative overflow-hidden rounded-3xl shadow-2xl group-hover:shadow-4xl transition-all duration-700 transform group-hover:scale-105 group-hover:-rotate-2\">\n                <img \n                  src=\"https://images.unsplash.com/photo-1551434678-e076c223a692?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=800&h=600\" \n                  alt=\"Modern office workspace with digital transformation\" \n                  className=\"w-full h-auto object-cover transition-transform duration-700 group-hover:scale-110\"\n                />\n                \n                {/* Overlay gradient */}\n                <div className=\"absolute inset-0 bg-gradient-to-tr from-primary/20 via-transparent to-accent-blue/20 opacity-0 group-hover:opacity-100 transition-opacity duration-500\"></div>\n                \n                {/* Interactive overlay elements */}\n                <div className=\"absolute top-4 left-4 opacity-0 group-hover:opacity-100 transition-all duration-500 delay-200\">\n                  <div className=\"bg-white/90 backdrop-blur-md rounded-2xl p-3 shadow-lg\">\n                    <div className=\"flex items-center space-x-2\">\n                      <div className=\"w-3 h-3 bg-accent-mint rounded-full animate-pulse\"></div>\n                      <span className=\"text-sm font-medium\">AI Active</span>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"absolute bottom-4 right-4 opacity-0 group-hover:opacity-100 transition-all duration-500 delay-400\">\n                  <div className=\"bg-white/90 backdrop-blur-md rounded-2xl p-3 shadow-lg\">\n                    <div className=\"text-sm font-medium text-primary\">+28% Growth</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            {/* Interactive floating orbs */}\n            <div className=\"absolute -top-8 -right-8 animate-float\">\n              <InteractiveOrb />\n            </div>\n            \n            {/* Enhanced background blobs */}\n            <div className=\"absolute -top-12 -right-12 w-40 h-40 bg-gradient-to-r from-primary/20 to-accent-blue/20 rounded-full blur-3xl animate-pulse\"></div>\n            <div className=\"absolute -bottom-12 -left-12 w-32 h-32 bg-gradient-to-r from-accent-mint/20 to-accent-blue/20 rounded-full blur-2xl animate-pulse delay-300\"></div>\n            <div className=\"absolute top-1/2 -right-6 w-20 h-20 bg-gradient-to-r from-accent-mint/30 to-primary/30 rounded-full blur-xl animate-float delay-500\"></div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":6381},"client/src/components/sections/pricing.tsx":{"content":"import { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Switch } from '@/components/ui/switch';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { useLanguage } from '@/hooks/use-language';\nimport { Check } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\ntype Currency = 'try' | 'usd' | 'eur';\ntype BillingPeriod = 'monthly' | 'yearly';\n\ninterface PlanFeature {\n  text: string;\n  included: boolean;\n}\n\ninterface Plan {\n  name: string;\n  popular?: boolean;\n  prices: Record<Currency, { monthly: number; yearly: number }>;\n  features: PlanFeature[];\n  buttonText: string;\n  buttonVariant: 'default' | 'outline';\n}\n\nexport function PricingSection() {\n  const [currency, setCurrency] = useState<Currency>('try');\n  const [billingPeriod, setBillingPeriod] = useState<BillingPeriod>('monthly');\n  const { t } = useLanguage();\n\n  const getCurrencySymbol = (curr: Currency) => {\n    switch (curr) {\n      case 'try': return '₺';\n      case 'usd': return '$';\n      case 'eur': return '€';\n      default: return '₺';\n    }\n  };\n\n  const plans: Plan[] = [\n    {\n      name: t('starter'),\n      prices: {\n        try: { monthly: 0, yearly: 0 },\n        usd: { monthly: 0, yearly: 0 },\n        eur: { monthly: 0, yearly: 0 },\n      },\n      features: [\n        { text: `5 ${t('roadmapsPerMonth')}`, included: true },\n        { text: t('basicAiConsultant'), included: true },\n        { text: t('emailSupport'), included: true },\n      ],\n      buttonText: t('startFree'),\n      buttonVariant: 'default',\n    },\n    {\n      name: t('pro'),\n      popular: true,\n      prices: {\n        try: { monthly: 299, yearly: 2390 },\n        usd: { monthly: 29, yearly: 232 },\n        eur: { monthly: 26, yearly: 208 },\n      },\n      features: [\n        { text: `50 ${t('roadmapsPerMonth')}`, included: true },\n        { text: t('advancedAiConsultant'), included: true },\n        { text: t('seoAnalysis'), included: true },\n        { text: t('prioritySupport'), included: true },\n      ],\n      buttonText: t('startPro'),\n      buttonVariant: 'default',\n    },\n    {\n      name: t('business'),\n      prices: {\n        try: { monthly: 599, yearly: 4790 },\n        usd: { monthly: 59, yearly: 472 },\n        eur: { monthly: 52, yearly: 416 },\n      },\n      features: [\n        { text: t('unlimitedRoadmaps'), included: true },\n        { text: t('allModularTools'), included: true },\n        { text: t('crmIntegration'), included: true },\n        { text: t('support24_7'), included: true },\n      ],\n      buttonText: t('startBusiness'),\n      buttonVariant: 'default',\n    },\n    {\n      name: t('enterprise'),\n      prices: {\n        try: { monthly: 0, yearly: 0 },\n        usd: { monthly: 0, yearly: 0 },\n        eur: { monthly: 0, yearly: 0 },\n      },\n      features: [\n        { text: t('customSolutions'), included: true },\n        { text: t('customIntegrations'), included: true },\n        { text: t('customTraining'), included: true },\n        { text: t('dedicatedSupport'), included: true },\n      ],\n      buttonText: t('contactSales'),\n      buttonVariant: 'outline',\n    },\n  ];\n\n  const formatPrice = (plan: Plan) => {\n    if (plan.name === t('enterprise')) {\n      return t('custom');\n    }\n    \n    const price = plan.prices[currency][billingPeriod];\n    if (price === 0) return getCurrencySymbol(currency) + '0';\n    \n    return getCurrencySymbol(currency) + price;\n  };\n\n  const getPeriodText = () => {\n    return billingPeriod === 'monthly' ? `/${t('monthly').toLowerCase()}` : `/${t('yearly').toLowerCase()}`;\n  };\n\n  return (\n    <section id=\"pricing\" className=\"py-24 bg-background\">\n      <div className=\"max-w-7xl mx-auto px-6\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"font-heading font-bold text-3xl lg:text-4xl mb-4\">\n            {t('pricingTitle')}\n          </h2>\n          <p className=\"text-xl text-muted-foreground mb-8\">\n            {t('pricingSubtitle')}\n          </p>\n          \n          {/* Currency & Billing Toggle */}\n          <div className=\"flex justify-center items-center space-x-6 mb-8\">\n            <div className=\"flex items-center space-x-2\">\n              <label className=\"text-muted-foreground\">{t('currency')}</label>\n              <Select value={currency} onValueChange={(value: Currency) => setCurrency(value)}>\n                <SelectTrigger className=\"w-32\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"try\">TRY (₺)</SelectItem>\n                  <SelectItem value=\"usd\">USD ($)</SelectItem>\n                  <SelectItem value=\"eur\">EUR (€)</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n            <div className=\"flex items-center space-x-3\">\n              <span className={cn(\"text-muted-foreground\", billingPeriod === 'monthly' && \"text-foreground\")}>{t('monthly')}</span>\n              <Switch\n                checked={billingPeriod === 'yearly'}\n                onCheckedChange={(checked) => setBillingPeriod(checked ? 'yearly' : 'monthly')}\n              />\n              <span className={cn(\"text-muted-foreground\", billingPeriod === 'yearly' && \"text-foreground\")}>{t('yearly')}</span>\n              <span className=\"bg-accent-mint text-white px-2 py-1 rounded-lg text-xs font-medium\">\n                {t('discount20')}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"grid lg:grid-cols-4 gap-8\">\n          {plans.map((plan, index) => (\n            <div \n              key={index} \n              className={cn(\n                \"rounded-2xl p-8 hover-lift relative\",\n                plan.popular \n                  ? \"border-2 border-primary bg-background\" \n                  : \"border border-border bg-background\"\n              )}\n            >\n              {plan.popular && (\n                <div className=\"absolute -top-3 left-1/2 transform -translate-x-1/2 bg-primary text-primary-foreground px-4 py-1 rounded-full text-sm font-medium\">\n                  {t('popular')}\n                </div>\n              )}\n              \n              <div className=\"text-center\">\n                <h3 className=\"font-heading font-semibold text-xl mb-4\">{plan.name}</h3>\n                <div className=\"mb-6\">\n                  <span className=\"text-3xl font-bold text-primary\">\n                    {formatPrice(plan)}\n                  </span>\n                  {plan.name !== t('enterprise') && (\n                    <span className=\"text-muted-foreground\">{getPeriodText()}</span>\n                  )}\n                </div>\n                <div className=\"space-y-3 mb-8 text-left\">\n                  {plan.features.map((feature, featureIndex) => (\n                    <div key={featureIndex} className=\"flex items-center space-x-2\">\n                      <Check className=\"h-5 w-5 text-primary flex-shrink-0\" />\n                      <span className=\"text-sm\">{feature.text}</span>\n                    </div>\n                  ))}\n                </div>\n                <Button \n                  variant={plan.buttonVariant}\n                  className={cn(\n                    \"w-full\",\n                    plan.buttonVariant === 'outline' && \"border-2 border-primary text-primary hover:bg-primary hover:text-primary-foreground\"\n                  )}\n                >\n                  {plan.buttonText}\n                </Button>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"text-center mt-12 text-muted-foreground\">\n          <p className=\"text-sm\">{t('pricingDisclaimer')}</p>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":7746},"client/src/components/sections/segments.tsx":{"content":"import { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { useLanguage } from '@/hooks/use-language';\nimport { Check } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\nexport function SegmentsSection() {\n  const [activeSegment, setActiveSegment] = useState('launch');\n  const { t } = useLanguage();\n\n  const segments = {\n    launch: {\n      badge: t('forEntrepreneurs'),\n      badgeColor: 'bg-primary/10 text-primary',\n      title: t('launchTitle'),\n      subtitle: t('launchSubtitle'),\n      features: [\n        { title: t('ideaGeneration'), description: t('ideaGenerationDesc') },\n        { title: t('marketAnalysis'), description: t('marketAnalysisDesc') },\n        { title: t('mvpRoadmap'), description: t('mvpRoadmapDesc') },\n      ],\n      primaryButton: t('startFree'),\n      secondaryButton: t('sampleRoadmap'),\n      image: 'https://images.unsplash.com/photo-1522202176988-66273c2fd55f?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=800&h=600',\n      imageAlt: 'Startup entrepreneurs collaborating on ideas',\n      primaryColor: 'primary',\n      overlayColor: 'from-primary/20',\n    },\n    scale: {\n      badge: t('forBusinesses'),\n      badgeColor: 'bg-accent-blue/10 text-accent-blue',\n      title: t('scaleTitle'),\n      subtitle: t('scaleSubtitle'),\n      features: [\n        { title: t('funnelOptimization'), description: t('funnelOptimizationDesc') },\n        { title: t('seoAdsPrescriptions'), description: t('seoAdsPrescriptionsDesc') },\n        { title: t('automationIntegration'), description: t('automationIntegrationDesc') },\n      ],\n      primaryButton: t('requestDemo'),\n      secondaryButton: t('seeAuditExample'),\n      image: 'https://images.unsplash.com/photo-1460925895917-afdab827c52f?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=800&h=600',\n      imageAlt: 'Digital transformation and business analytics',\n      primaryColor: 'accent-blue',\n      overlayColor: 'from-accent-blue/20',\n    },\n    invest: {\n      badge: t('forInvestors'),\n      badgeColor: 'bg-accent-mint/10 text-accent-mint',\n      title: t('investTitle'),\n      subtitle: t('investSubtitle'),\n      features: [\n        { title: t('profileDiscovery'), description: t('profileDiscoveryDesc') },\n        { title: t('thesisMatching'), description: t('thesisMatchingDesc') },\n        { title: t('watchLists'), description: t('watchListsDesc') },\n      ],\n      primaryButton: t('earlyAccess'),\n      secondaryButton: t('sampleScoreCard'),\n      image: 'https://images.unsplash.com/photo-1611974789855-9c2a0a7236a3?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=800&h=600',\n      imageAlt: 'Investment analytics dashboard and financial data',\n      primaryColor: 'accent-mint',\n      overlayColor: 'from-accent-mint/20',\n    },\n  };\n\n  const currentSegment = segments[activeSegment as keyof typeof segments];\n\n  return (\n    <section id=\"products\" className=\"py-24 bg-background\">\n      <div className=\"max-w-7xl mx-auto px-6\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"font-heading font-bold text-3xl lg:text-4xl mb-4\">\n            {t('threeSegmentsOnePlatform')}\n          </h2>\n          <p className=\"text-xl text-muted-foreground\">\n            {t('customizedSolutions')}\n          </p>\n        </div>\n\n        {/* Segment Tabs */}\n        <div className=\"flex justify-center mb-12\">\n          <div className=\"bg-soft-paper p-2 rounded-2xl\">\n            {Object.keys(segments).map((segment) => (\n              <Button\n                key={segment}\n                variant=\"ghost\"\n                onClick={() => setActiveSegment(segment)}\n                className={cn(\n                  \"px-6 py-3 rounded-xl transition-all font-medium capitalize\",\n                  activeSegment === segment\n                    ? \"bg-background text-primary shadow-sm\"\n                    : \"text-muted-foreground hover:text-primary\"\n                )}\n              >\n                {segment}\n              </Button>\n            ))}\n          </div>\n        </div>\n\n        {/* Segment Content */}\n        <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n          <div className=\"animate-scale-in\">\n            <div className={cn(\"inline-block px-4 py-2 rounded-xl font-medium mb-4\", currentSegment.badgeColor)}>\n              {currentSegment.badge}\n            </div>\n            <h3 className=\"font-heading font-bold text-3xl lg:text-4xl mb-6\">\n              {currentSegment.title}\n            </h3>\n            <p className=\"text-xl text-muted-foreground mb-8\">\n              {currentSegment.subtitle}\n            </p>\n            \n            <div className=\"space-y-4 mb-8\">\n              {currentSegment.features.map((feature, index) => (\n                <div key={index} className=\"flex items-start space-x-3\">\n                  <div className={cn(\n                    \"w-6 h-6 rounded-full flex items-center justify-center mt-1\",\n                    currentSegment.primaryColor === 'primary' && \"bg-primary\",\n                    currentSegment.primaryColor === 'accent-blue' && \"bg-accent-blue\",\n                    currentSegment.primaryColor === 'accent-mint' && \"bg-accent-mint\"\n                  )}>\n                    <Check className=\"h-3 w-3 text-white\" />\n                  </div>\n                  <div>\n                    <div className=\"font-medium\">{feature.title}</div>\n                    <div className=\"text-muted-foreground\">{feature.description}</div>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            <div className=\"flex flex-col sm:flex-row gap-4\">\n              <Button \n                className={cn(\n                  currentSegment.primaryColor === 'primary' && \"bg-primary hover:bg-primary/90\",\n                  currentSegment.primaryColor === 'accent-blue' && \"bg-accent-blue hover:bg-accent-blue/90\",\n                  currentSegment.primaryColor === 'accent-mint' && \"bg-accent-mint hover:bg-accent-mint/90\"\n                )}\n              >\n                {currentSegment.primaryButton}\n              </Button>\n              <Button \n                variant=\"outline\" \n                className={cn(\n                  \"border-2 hover:text-primary-foreground\",\n                  currentSegment.primaryColor === 'primary' && \"border-primary text-primary hover:bg-primary\",\n                  currentSegment.primaryColor === 'accent-blue' && \"border-accent-blue text-accent-blue hover:bg-accent-blue\",\n                  currentSegment.primaryColor === 'accent-mint' && \"border-accent-mint text-accent-mint hover:bg-accent-mint\"\n                )}\n              >\n                {currentSegment.secondaryButton}\n              </Button>\n            </div>\n          </div>\n          <div className=\"relative\">\n            <img \n              src={currentSegment.image}\n              alt={currentSegment.imageAlt}\n              className=\"rounded-2xl shadow-lg w-full h-auto\"\n            />\n            <div className={cn(\"absolute inset-0 bg-gradient-to-tr to-transparent rounded-2xl\", currentSegment.overlayColor)}></div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":7286},"client/src/components/sections/testimonials.tsx":{"content":"import { useLanguage } from '@/hooks/use-language';\nimport { Star } from 'lucide-react';\n\nexport function TestimonialsSection() {\n  const { t } = useLanguage();\n\n  const testimonials = [\n    {\n      name: \"Ahmet Şimşek\",\n      title: \"Girişimci\",\n      content: \"EraEnvision sayesinde fikrimi 2 hafta içinde MVP'ye dönüştürdüm. AI danışman gerçekten işe yarıyor!\",\n      avatar: \"AS\",\n      rating: 5,\n    },\n    {\n      name: \"Zeynep Kaya\",\n      title: \"E-ticaret Müdürü\",\n      content: \"E-ticaret dönüşüm oranımız %35 arttı. Scale modülü tam olarak ihtiyacımız olan şeydi.\",\n      avatar: \"ZK\",\n      rating: 5,\n    },\n    {\n      name: \"Murat Ren\",\n      title: \"Yatırımcı\",\n      content: \"Yatırım kararlarımı çok daha hızlı verebiliyorum. AI puanlama sistemi çok başarılı.\",\n      avatar: \"MR\",\n      rating: 5,\n    },\n  ];\n\n  return (\n    <section className=\"py-24 bg-soft-paper\">\n      <div className=\"max-w-7xl mx-auto px-6\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"font-heading font-bold text-3xl lg:text-4xl mb-4\">\n            {t('testimonialsTitle')}\n          </h2>\n        </div>\n\n        <div className=\"grid lg:grid-cols-3 gap-8\">\n          {testimonials.map((testimonial, index) => (\n            <div \n              key={index} \n              className=\"bg-background p-8 rounded-2xl shadow-lg hover-lift\"\n            >\n              <div className=\"flex items-center mb-4\">\n                <div className=\"flex text-accent-amber\">\n                  {[...Array(testimonial.rating)].map((_, i) => (\n                    <Star key={i} className=\"h-5 w-5 fill-current\" />\n                  ))}\n                </div>\n              </div>\n              <p className=\"text-muted-foreground mb-6\">\n                \"{testimonial.content}\"\n              </p>\n              <div className=\"flex items-center\">\n                <div className=\"w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center mr-4\">\n                  <span className=\"font-semibold text-primary\">{testimonial.avatar}</span>\n                </div>\n                <div>\n                  <div className=\"font-semibold\">{testimonial.name}</div>\n                  <div className=\"text-muted-foreground text-sm\">{testimonial.title}</div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2427},"client/src/components/sections/workflow.tsx":{"content":"import { Button } from '@/components/ui/button';\nimport { useLanguage } from '@/hooks/use-language';\n\nexport function WorkflowSection() {\n  const { t } = useLanguage();\n\n  const steps = [\n    {\n      number: 1,\n      title: t('defineProfile'),\n      description: t('defineProfileDesc'),\n    },\n    {\n      number: 2,\n      title: t('getYourRoadmap'),\n      description: t('getRoadmapDesc'),\n    },\n    {\n      number: 3,\n      title: t('executeActions'),\n      description: t('executeActionsDesc'),\n    },\n    {\n      number: 4,\n      title: t('trackResults'),\n      description: t('trackResultsDesc'),\n    },\n  ];\n\n  return (\n    <section id=\"how-it-works\" className=\"py-24 bg-soft-paper\">\n      <div className=\"max-w-7xl mx-auto px-6\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"font-heading font-bold text-3xl lg:text-4xl mb-4\">\n            {t('howItWorksTitle')}\n          </h2>\n          <p className=\"text-xl text-muted-foreground\">\n            {t('howItWorksSubtitle')}\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n          {steps.map((step, index) => (\n            <div key={index} className=\"text-center\">\n              <div className=\"w-16 h-16 bg-primary rounded-2xl flex items-center justify-center mx-auto mb-6 text-primary-foreground text-2xl font-bold\">\n                {step.number}\n              </div>\n              <h3 className=\"font-heading font-semibold text-xl mb-4\">\n                {step.title}\n              </h3>\n              <p className=\"text-muted-foreground\">\n                {step.description}\n              </p>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"text-center mt-12\">\n          <Button size=\"lg\" className=\"hover-lift text-lg px-8 py-4\">\n            {t('tryItNow')}\n          </Button>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":1887},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/advanced-illustrations.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { cn } from '@/lib/utils';\nimport { Sparkles, Zap, Target, TrendingUp, Users, Globe, BarChart, Brain, Rocket, Shield, Diamond, Star } from 'lucide-react';\n\nexport function FloatingIcons() {\n  const icons = [Sparkles, Zap, Target, TrendingUp, Users, Globe, BarChart, Brain, Rocket, Shield, Diamond, Star];\n  \n  return (\n    <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\n      {icons.map((Icon, index) => (\n        <div\n          key={index}\n          className=\"absolute animate-float\"\n          style={{\n            left: `${Math.random() * 100}%`,\n            top: `${Math.random() * 100}%`,\n            animationDelay: `${Math.random() * 5}s`,\n            animationDuration: `${Math.random() * 3 + 4}s`,\n          }}\n        >\n          <Icon className=\"w-6 h-6 text-primary/20 animate-pulse\" style={{\n            animationDelay: `${Math.random() * 2}s`\n          }} />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport function GeometricShapes() {\n  const shapes = Array.from({ length: 15 }, (_, i) => ({\n    id: i,\n    size: Math.random() * 100 + 50,\n    x: Math.random() * 100,\n    y: Math.random() * 100,\n    rotation: Math.random() * 360,\n    duration: Math.random() * 10 + 15,\n    delay: Math.random() * 5,\n    type: Math.floor(Math.random() * 4),\n  }));\n\n  return (\n    <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\n      {shapes.map((shape) => (\n        <div\n          key={shape.id}\n          className=\"absolute opacity-10\"\n          style={{\n            left: `${shape.x}%`,\n            top: `${shape.y}%`,\n            width: `${shape.size}px`,\n            height: `${shape.size}px`,\n            transform: `rotate(${shape.rotation}deg)`,\n            animation: `geometricFloat ${shape.duration}s ease-in-out infinite ${shape.delay}s`,\n          }}\n        >\n          {shape.type === 0 && (\n            <div className=\"w-full h-full bg-gradient-to-br from-primary/30 to-accent-blue/30 rounded-full blur-sm animate-pulse\"></div>\n          )}\n          {shape.type === 1 && (\n            <div className=\"w-full h-full bg-gradient-to-br from-accent-mint/30 to-primary/30 rotate-45 blur-sm animate-pulse\"></div>\n          )}\n          {shape.type === 2 && (\n            <div className=\"w-full h-full bg-gradient-to-br from-accent-blue/30 to-accent-mint/30 rounded-2xl blur-sm animate-pulse\"></div>\n          )}\n          {shape.type === 3 && (\n            <div className=\"w-full h-full border-2 border-primary/30 rounded-full animate-spin-slow\"></div>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport function ParticleField() {\n  const particles = Array.from({ length: 50 }, (_, i) => ({\n    id: i,\n    x: Math.random() * 100,\n    y: Math.random() * 100,\n    size: Math.random() * 4 + 2,\n    duration: Math.random() * 20 + 10,\n    delay: Math.random() * 10,\n  }));\n\n  return (\n    <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\n      {particles.map((particle) => (\n        <div\n          key={particle.id}\n          className=\"absolute rounded-full opacity-60 animate-particle-float\"\n          style={{\n            left: `${particle.x}%`,\n            top: `${particle.y}%`,\n            width: `${particle.size}px`,\n            height: `${particle.size}px`,\n            background: `radial-gradient(circle, hsl(var(--primary)) 0%, hsl(var(--accent-blue)) 50%, hsl(var(--accent-mint)) 100%)`,\n            animationDuration: `${particle.duration}s`,\n            animationDelay: `${particle.delay}s`,\n          }}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport function InteractiveDataVisualization() {\n  const [activeBar, setActiveBar] = useState<number | null>(null);\n  const data = [\n    { label: 'Launch', value: 85, color: 'primary' },\n    { label: 'Scale', value: 92, color: 'accent-blue' },\n    { label: 'Invest', value: 78, color: 'accent-mint' },\n    { label: 'Growth', value: 96, color: 'primary' },\n    { label: 'Success', value: 88, color: 'accent-blue' },\n  ];\n\n  return (\n    <div className=\"relative p-8 frosted-glass rounded-3xl overflow-hidden group\">\n      <div className=\"relative z-10\">\n        <h3 className=\"text-xl font-bold mb-6 gradient-text\">Performance Analytics</h3>\n        <div className=\"flex items-end justify-between space-x-4 h-32\">\n          {data.map((item, index) => (\n            <div\n              key={index}\n              className=\"relative group/bar cursor-pointer\"\n              onMouseEnter={() => setActiveBar(index)}\n              onMouseLeave={() => setActiveBar(null)}\n            >\n              <div\n                className={cn(\n                  \"w-12 rounded-t-lg transition-all duration-500 relative overflow-hidden\",\n                  item.color === 'primary' && \"bg-gradient-to-t from-primary/60 to-primary\",\n                  item.color === 'accent-blue' && \"bg-gradient-to-t from-accent-blue/60 to-accent-blue\",\n                  item.color === 'accent-mint' && \"bg-gradient-to-t from-accent-mint/60 to-accent-mint\",\n                  activeBar === index && \"scale-110 shadow-lg\"\n                )}\n                style={{ height: `${item.value}%` }}\n              >\n                {/* Shimmer effect */}\n                <div className=\"absolute inset-0 opacity-0 group-hover/bar:opacity-100 transition-opacity duration-500\">\n                  <div className=\"absolute inset-0 bg-gradient-to-r from-transparent via-white/30 to-transparent -translate-x-full group-hover/bar:translate-x-full transition-transform duration-700\"></div>\n                </div>\n              </div>\n              \n              <div className=\"text-xs font-semibold mt-2 text-center\">{item.label}</div>\n              \n              {activeBar === index && (\n                <div className=\"absolute -top-12 left-1/2 transform -translate-x-1/2 bg-black/80 text-white text-xs px-2 py-1 rounded animate-bounce-in\">\n                  {item.value}%\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n      \n      {/* Background animation */}\n      <div className=\"absolute inset-0 opacity-20\">\n        <div className=\"absolute top-4 right-4 w-8 h-8 bg-primary/30 rounded-full animate-pulse\"></div>\n        <div className=\"absolute bottom-4 left-4 w-6 h-6 bg-accent-blue/30 rounded-full animate-pulse delay-300\"></div>\n        <div className=\"absolute top-1/2 left-1/2 w-4 h-4 bg-accent-mint/30 rounded-full animate-pulse delay-500\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport function AnimatedLogo() {\n  return (\n    <div className=\"relative group\">\n      <div className=\"w-24 h-24 relative\">\n        {/* Outer ring */}\n        <div className=\"absolute inset-0 rounded-full border-4 border-primary/30 animate-spin-slow\"></div>\n        \n        {/* Middle ring */}\n        <div className=\"absolute inset-2 rounded-full border-2 border-accent-blue/40 animate-spin-reverse\"></div>\n        \n        {/* Inner circle */}\n        <div className=\"absolute inset-4 rounded-full bg-gradient-to-r from-primary via-accent-blue to-accent-mint animate-pulse\"></div>\n        \n        {/* Center dot */}\n        <div className=\"absolute inset-8 rounded-full bg-white shadow-lg group-hover:scale-110 transition-transform duration-300\"></div>\n        \n        {/* Floating particles around logo */}\n        {Array.from({ length: 8 }).map((_, i) => (\n          <div\n            key={i}\n            className=\"absolute w-2 h-2 bg-primary/60 rounded-full animate-orbit\"\n            style={{\n              transformOrigin: '48px 48px',\n              animation: `orbit ${8 + i}s linear infinite`,\n              animationDelay: `${i * 0.5}s`,\n            }}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport function ConnectedDots() {\n  const dots = Array.from({ length: 12 }, (_, i) => ({\n    id: i,\n    x: 50 + 40 * Math.cos((i * 2 * Math.PI) / 12),\n    y: 50 + 40 * Math.sin((i * 2 * Math.PI) / 12),\n  }));\n\n  return (\n    <div className=\"relative w-full h-64 overflow-hidden\">\n      <svg className=\"absolute inset-0 w-full h-full\">\n        {/* Connecting lines */}\n        {dots.map((dot, i) => (\n          <g key={`line-${i}`}>\n            {dots.slice(i + 1).map((otherDot, j) => (\n              <line\n                key={`${i}-${j}`}\n                x1={`${dot.x}%`}\n                y1={`${dot.y}%`}\n                x2={`${otherDot.x}%`}\n                y2={`${otherDot.y}%`}\n                stroke=\"hsl(var(--primary))\"\n                strokeWidth=\"1\"\n                opacity=\"0.2\"\n                className=\"animate-pulse\"\n                style={{ animationDelay: `${(i + j) * 0.1}s` }}\n              />\n            ))}\n          </g>\n        ))}\n      </svg>\n      \n      {/* Dots */}\n      {dots.map((dot, i) => (\n        <div\n          key={dot.id}\n          className=\"absolute w-4 h-4 rounded-full bg-gradient-to-r from-primary to-accent-blue animate-pulse cursor-pointer hover:scale-150 transition-transform duration-300\"\n          style={{\n            left: `${dot.x}%`,\n            top: `${dot.y}%`,\n            transform: 'translate(-50%, -50%)',\n            animationDelay: `${i * 0.2}s`,\n          }}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport function MorphingShape() {\n  return (\n    <div className=\"relative w-48 h-48 mx-auto\">\n      <div className=\"absolute inset-0 bg-gradient-to-r from-primary via-accent-blue to-accent-mint opacity-20 animate-morph-shape rounded-full blur-lg\"></div>\n      <div className=\"absolute inset-4 bg-gradient-to-r from-accent-mint via-primary to-accent-blue opacity-30 animate-morph-shape-reverse rounded-full blur-md\"></div>\n      <div className=\"absolute inset-8 bg-gradient-to-r from-accent-blue via-accent-mint to-primary opacity-40 animate-morph-shape rounded-full blur-sm\"></div>\n      <div className=\"absolute inset-12 bg-white rounded-full shadow-2xl flex items-center justify-center\">\n        <Sparkles className=\"w-12 h-12 text-primary animate-pulse\" />\n      </div>\n    </div>\n  );\n}","size_bytes":9976},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/animated-blobs.tsx":{"content":"import { cn } from '@/lib/utils';\n\ninterface AnimatedBlobsProps {\n  className?: string;\n}\n\nexport function AnimatedBlobs({ className }: AnimatedBlobsProps) {\n  return (\n    <div className={cn(\"absolute inset-0 overflow-hidden pointer-events-none\", className)}>\n      {/* Primary Blob */}\n      <div className=\"absolute top-20 left-20 w-96 h-96 blob-1 opacity-30 blur-3xl rounded-full\"></div>\n      \n      {/* Secondary Blob */}\n      <div className=\"absolute bottom-20 right-20 w-80 h-80 blob-2 opacity-25 blur-2xl rounded-full\"></div>\n      \n      {/* Tertiary Blob */}\n      <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-64 h-64 opacity-20 blur-2xl rounded-full\"\n           style={{\n             background: 'linear-gradient(45deg, hsl(var(--accent-mint) / 0.1), hsl(var(--accent-blue) / 0.1))',\n             animation: 'morphing 15s ease-in-out infinite'\n           }}>\n      </div>\n      \n      {/* Floating Particles */}\n      {Array.from({ length: 12 }).map((_, i) => (\n        <div\n          key={i}\n          className=\"absolute w-2 h-2 rounded-full opacity-40\"\n          style={{\n            left: `${Math.random() * 100}%`,\n            top: `${Math.random() * 100}%`,\n            background: `hsl(var(--primary) / ${Math.random() * 0.5 + 0.2})`,\n            animation: `particleFloat ${Math.random() * 10 + 15}s linear infinite ${Math.random() * 5}s`,\n          }}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport function InteractiveOrb({ className }: AnimatedBlobsProps) {\n  return (\n    <div className={cn(\"relative group cursor-pointer\", className)}>\n      <div className=\"w-32 h-32 rounded-full magnetic-hover relative overflow-hidden\">\n        <div className=\"absolute inset-0 bg-gradient-to-r from-primary via-accent-blue to-accent-mint opacity-80 blur-sm\"></div>\n        <div className=\"absolute inset-2 bg-gradient-to-r from-primary/90 via-accent-blue/90 to-accent-mint/90 rounded-full backdrop-blur-md\"></div>\n        <div className=\"absolute inset-4 bg-background/20 rounded-full backdrop-blur-xl border border-white/20\"></div>\n        \n        {/* Inner glow */}\n        <div className=\"absolute inset-6 bg-gradient-to-r from-primary to-accent-blue rounded-full opacity-60 pulse-glow\"></div>\n        \n        {/* Floating elements inside */}\n        <div className=\"absolute inset-8 flex items-center justify-center\">\n          <div className=\"w-4 h-4 bg-white/80 rounded-full float-animation\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function FloatingElements() {\n  return (\n    <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\n      {/* Geometric shapes */}\n      <div className=\"absolute top-1/4 left-1/3 w-8 h-8 border-2 border-primary/30 rotate-45 float-animation\"></div>\n      <div className=\"absolute top-3/4 right-1/4 w-6 h-6 bg-accent-blue/20 rounded-full float-animation-delayed\"></div>\n      <div className=\"absolute top-1/2 right-1/3 w-10 h-1 bg-accent-mint/40 float-animation\"></div>\n      \n      {/* Gradient circles */}\n      {Array.from({ length: 6 }).map((_, i) => (\n        <div\n          key={i}\n          className=\"absolute rounded-full opacity-20 float-animation\"\n          style={{\n            width: `${Math.random() * 20 + 10}px`,\n            height: `${Math.random() * 20 + 10}px`,\n            left: `${Math.random() * 100}%`,\n            top: `${Math.random() * 100}%`,\n            background: `linear-gradient(45deg, hsl(var(--primary) / 0.3), hsl(var(--accent-blue) / 0.3))`,\n            animationDelay: `${Math.random() * 3}s`,\n          }}\n        />\n      ))}\n    </div>\n  );\n}","size_bytes":3613},"client/src/components/ui/apple-widgets.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { cn } from '@/lib/utils';\nimport { TrendingUp, Zap, Target, Sparkles, ArrowRight, Star } from 'lucide-react';\n\ninterface AppleWidgetProps {\n  className?: string;\n  children?: React.ReactNode;\n  onClick?: () => void;\n}\n\nexport function GlassCard({ className, children, onClick }: AppleWidgetProps) {\n  const [isHovered, setIsHovered] = useState(false);\n\n  return (\n    <div \n      className={cn(\n        \"frosted-glass rounded-3xl p-8 transition-all duration-700 group relative overflow-hidden\",\n        \"hover:scale-105 hover:-rotate-1\",\n        onClick && \"cursor-pointer\",\n        className\n      )}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n      onClick={onClick}\n    >\n      {/* Animated gradient overlay */}\n      <div className={cn(\n        \"absolute inset-0 opacity-0 transition-opacity duration-500 bg-gradient-to-br from-primary/10 via-accent-blue/5 to-accent-mint/10\",\n        isHovered && \"opacity-100\"\n      )}></div>\n      \n      {/* Shimmer effect */}\n      <div className=\"absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-1000\">\n        <div className=\"absolute inset-0 bg-gradient-to-r from-transparent via-white/5 to-transparent -translate-x-full group-hover:translate-x-full transition-transform duration-1000\"></div>\n      </div>\n      \n      <div className=\"relative z-10\">\n        {children}\n      </div>\n    </div>\n  );\n}\n\nexport function FloatingActionButton({ icon: Icon, label, onClick, color = \"primary\" }: {\n  icon: any;\n  label: string;\n  onClick?: () => void;\n  color?: \"primary\" | \"blue\" | \"mint\";\n}) {\n  const [ripples, setRipples] = useState<Array<{ id: number; x: number; y: number }>>([]);\n\n  const handleClick = (e: React.MouseEvent) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    \n    const newRipple = { id: Date.now(), x, y };\n    setRipples(prev => [...prev, newRipple]);\n    \n    setTimeout(() => {\n      setRipples(prev => prev.filter(ripple => ripple.id !== newRipple.id));\n    }, 600);\n    \n    onClick?.();\n  };\n\n  return (\n    <button\n      onClick={handleClick}\n      className={cn(\n        \"relative group w-16 h-16 rounded-2xl overflow-hidden transition-all duration-300\",\n        \"hover:scale-110 active:scale-95 shadow-lg hover:shadow-xl\",\n        \"frosted-glass border border-white/20\",\n        color === \"primary\" && \"bg-gradient-to-r from-primary to-primary/90\",\n        color === \"blue\" && \"bg-gradient-to-r from-accent-blue to-accent-blue/90\", \n        color === \"mint\" && \"bg-gradient-to-r from-accent-mint to-accent-mint/90\"\n      )}\n    >\n      <div className=\"absolute inset-0 bg-white/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n      \n      {/* Ripple effects */}\n      {ripples.map(ripple => (\n        <div\n          key={ripple.id}\n          className=\"absolute bg-white/30 rounded-full animate-ping\"\n          style={{\n            left: ripple.x - 10,\n            top: ripple.y - 10,\n            width: 20,\n            height: 20,\n          }}\n        />\n      ))}\n      \n      <Icon className=\"relative z-10 w-6 h-6 text-white mx-auto\" />\n      \n      {/* Tooltip */}\n      <div className=\"absolute -top-12 left-1/2 transform -translate-x-1/2 px-3 py-1 bg-black/80 text-white text-xs rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none\">\n        {label}\n      </div>\n    </button>\n  );\n}\n\nexport function MetricWidget({ \n  icon: Icon, \n  title, \n  value, \n  change, \n  color = \"primary\" \n}: {\n  icon: any;\n  title: string;\n  value: string;\n  change: string;\n  color?: \"primary\" | \"blue\" | \"mint\";\n}) {\n  const [animatedValue, setAnimatedValue] = useState(0);\n  const numericValue = parseInt(value.replace(/\\D/g, ''));\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      let current = 0;\n      const increment = numericValue / 30;\n      const counter = setInterval(() => {\n        current += increment;\n        if (current >= numericValue) {\n          setAnimatedValue(numericValue);\n          clearInterval(counter);\n        } else {\n          setAnimatedValue(Math.floor(current));\n        }\n      }, 50);\n    }, 200);\n\n    return () => clearTimeout(timer);\n  }, [numericValue]);\n\n  return (\n    <GlassCard className=\"hover:scale-105 transition-all duration-500\">\n      <div className=\"flex items-start justify-between mb-4\">\n        <div className={cn(\n          \"w-12 h-12 rounded-2xl flex items-center justify-center\",\n          color === \"primary\" && \"bg-primary/20 text-primary\",\n          color === \"blue\" && \"bg-accent-blue/20 text-accent-blue\",\n          color === \"mint\" && \"bg-accent-mint/20 text-accent-mint\"\n        )}>\n          <Icon className=\"w-6 h-6\" />\n        </div>\n        <div className={cn(\n          \"text-sm font-medium px-2 py-1 rounded-lg\",\n          change.startsWith('+') ? \"text-accent-mint bg-accent-mint/10\" : \"text-red-500 bg-red-500/10\"\n        )}>\n          {change}\n        </div>\n      </div>\n      \n      <div className=\"space-y-1\">\n        <p className=\"text-2xl font-bold\">\n          {value.includes('%') ? `${animatedValue}%` : animatedValue.toLocaleString()}\n        </p>\n        <p className=\"text-muted-foreground text-sm\">{title}</p>\n      </div>\n    </GlassCard>\n  );\n}\n\nexport function InteractiveChart() {\n  const [activePoint, setActivePoint] = useState<number | null>(null);\n  const data = [30, 45, 35, 55, 40, 60, 45, 70];\n\n  return (\n    <GlassCard className=\"overflow-hidden\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <h3 className=\"font-semibold text-lg\">Büyüme Trendi</h3>\n        <div className=\"flex space-x-2\">\n          <div className=\"w-2 h-2 bg-primary rounded-full\"></div>\n          <div className=\"w-2 h-2 bg-accent-blue rounded-full\"></div>\n          <div className=\"w-2 h-2 bg-accent-mint rounded-full\"></div>\n        </div>\n      </div>\n      \n      <div className=\"relative h-24 flex items-end justify-between space-x-2\">\n        {data.map((height, index) => (\n          <div\n            key={index}\n            className=\"relative group cursor-pointer transition-all duration-300\"\n            onMouseEnter={() => setActivePoint(index)}\n            onMouseLeave={() => setActivePoint(null)}\n          >\n            <div \n              className={cn(\n                \"w-8 rounded-t-lg transition-all duration-500 bg-gradient-to-t from-primary/60 to-primary\",\n                \"group-hover:from-primary group-hover:to-primary/80\",\n                activePoint === index && \"scale-110 shadow-lg\"\n              )}\n              style={{ height: `${height}%` }}\n            />\n            {activePoint === index && (\n              <div className=\"absolute -top-10 left-1/2 transform -translate-x-1/2 bg-black/80 text-white text-xs px-2 py-1 rounded\">\n                {height}%\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n    </GlassCard>\n  );\n}\n\nexport function PulsatingDot({ color = \"primary\", size = \"md\" }: { \n  color?: \"primary\" | \"blue\" | \"mint\";\n  size?: \"sm\" | \"md\" | \"lg\";\n}) {\n  return (\n    <div className=\"relative inline-flex\">\n      <div className={cn(\n        \"rounded-full animate-ping absolute inline-flex opacity-75\",\n        color === \"primary\" && \"bg-primary\",\n        color === \"blue\" && \"bg-accent-blue\",\n        color === \"mint\" && \"bg-accent-mint\",\n        size === \"sm\" && \"w-2 h-2\",\n        size === \"md\" && \"w-3 h-3\", \n        size === \"lg\" && \"w-4 h-4\"\n      )}></div>\n      <div className={cn(\n        \"relative inline-flex rounded-full\",\n        color === \"primary\" && \"bg-primary\",\n        color === \"blue\" && \"bg-accent-blue\", \n        color === \"mint\" && \"bg-accent-mint\",\n        size === \"sm\" && \"w-2 h-2\",\n        size === \"md\" && \"w-3 h-3\",\n        size === \"lg\" && \"w-4 h-4\"\n      )}></div>\n    </div>\n  );\n}\n\nexport function MorphingButton({ children, ...props }: { children: React.ReactNode } & React.ButtonHTMLAttributes<HTMLButtonElement>) {\n  const [isClicked, setIsClicked] = useState(false);\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    setIsClicked(true);\n    setTimeout(() => setIsClicked(false), 600);\n    props.onClick?.(e);\n  };\n\n  return (\n    <button\n      {...props}\n      onClick={handleClick}\n      className={cn(\n        \"relative px-8 py-4 rounded-2xl font-semibold transition-all duration-300 overflow-hidden group\",\n        \"bg-gradient-to-r from-primary to-primary/90 text-primary-foreground\",\n        \"hover:from-primary/90 hover:to-primary hover:scale-105 hover:-translate-y-1\",\n        \"active:scale-95 transform-gpu\",\n        \"shadow-lg hover:shadow-xl\",\n        isClicked && \"animate-pulse\",\n        props.className\n      )}\n    >\n      {/* Morphing background */}\n      <div className=\"absolute inset-0 bg-gradient-to-r from-accent-blue to-accent-mint opacity-0 group-hover:opacity-100 transition-opacity duration-500\"></div>\n      \n      {/* Shimmer effect */}\n      <div className=\"absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-700\">\n        <div className=\"absolute inset-0 bg-gradient-to-r from-transparent via-white/20 to-transparent -translate-x-full group-hover:translate-x-full transition-transform duration-700\"></div>\n      </div>\n      \n      {/* Content */}\n      <span className=\"relative z-10 flex items-center justify-center space-x-2\">\n        {children}\n        <ArrowRight className=\"w-4 h-4 group-hover:translate-x-1 transition-transform duration-300\" />\n      </span>\n    </button>\n  );\n}","size_bytes":9694},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }","size_bytes":1127},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/cookie-consent.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { useLanguage } from '@/hooks/use-language';\nimport { X } from 'lucide-react';\n\nexport function CookieConsent() {\n  const [isVisible, setIsVisible] = useState(false);\n  const { t } = useLanguage();\n\n  useEffect(() => {\n    const hasConsent = localStorage.getItem('cookieConsent');\n    if (!hasConsent) {\n      const timer = setTimeout(() => setIsVisible(true), 2000);\n      return () => clearTimeout(timer);\n    }\n  }, []);\n\n  const acceptCookies = () => {\n    localStorage.setItem('cookieConsent', 'accepted');\n    setIsVisible(false);\n  };\n\n  const manageCookies = () => {\n    // TODO: Implement cookie management modal\n    alert(t('manageCookies'));\n  };\n\n  if (!isVisible) return null;\n\n  return (\n    <div className=\"fixed bottom-0 left-0 right-0 bg-ink-black text-white p-4 z-50 animate-slide-up\">\n      <div className=\"max-w-7xl mx-auto flex flex-col sm:flex-row items-center justify-between gap-4\">\n        <div className=\"text-sm flex-1\">\n          <span>{t('cookieMessage')}</span>\n          <a \n            href=\"/cookie-policy\" \n            className=\"text-primary hover:text-primary/80 ml-2 underline\"\n          >\n            {t('cookiePolicyLink')}\n          </a>\n        </div>\n        <div className=\"flex gap-3\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={manageCookies}\n            className=\"border-gray-600 text-white hover:bg-gray-800\"\n          >\n            {t('manageCookies')}\n          </Button>\n          <Button\n            onClick={acceptCookies}\n            size=\"sm\"\n            className=\"bg-primary hover:bg-primary/90\"\n          >\n            {t('acceptCookies')}\n          </Button>\n        </div>\n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={() => setIsVisible(false)}\n          className=\"p-1 hover:bg-gray-800 sm:ml-2\"\n        >\n          <X className=\"h-4 w-4\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\n","size_bytes":2037},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/language-switcher.tsx":{"content":"import { useLanguage } from '@/hooks/use-language';\nimport { Button } from '@/components/ui/button';\nimport { cn } from '@/lib/utils';\n\ninterface LanguageSwitcherProps {\n  className?: string;\n  variant?: 'default' | 'mobile';\n}\n\nexport function LanguageSwitcher({ className, variant = 'default' }: LanguageSwitcherProps) {\n  const { language, setLanguage } = useLanguage();\n\n  if (variant === 'mobile') {\n    return (\n      <div className={cn(\"flex items-center space-x-2\", className)}>\n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={() => setLanguage('tr')}\n          className={cn(\n            \"px-3 py-1 text-sm rounded-lg transition-colors\",\n            language === 'tr' \n              ? \"bg-primary text-primary-foreground\" \n              : \"bg-muted hover:bg-muted/80\"\n          )}\n        >\n          TR\n        </Button>\n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={() => setLanguage('en')}\n          className={cn(\n            \"px-3 py-1 text-sm rounded-lg transition-colors\",\n            language === 'en' \n              ? \"bg-primary text-primary-foreground\" \n              : \"bg-muted hover:bg-muted/80\"\n          )}\n        >\n          EN\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <div className={cn(\"flex items-center space-x-2\", className)}>\n      <Button\n        variant=\"ghost\"\n        size=\"sm\"\n        onClick={() => setLanguage('tr')}\n        className={cn(\n          \"px-2 py-1 text-sm transition-colors\",\n          language === 'tr' ? \"text-primary\" : \"text-muted-foreground hover:text-primary\"\n        )}\n      >\n        TR\n      </Button>\n      <span className=\"text-muted-foreground\">|</span>\n      <Button\n        variant=\"ghost\"\n        size=\"sm\"\n        onClick={() => setLanguage('en')}\n        className={cn(\n          \"px-2 py-1 text-sm transition-colors\",\n          language === 'en' ? \"text-primary\" : \"text-muted-foreground hover:text-primary\"\n        )}\n      >\n        EN\n      </Button>\n    </div>\n  );\n}\n","size_bytes":2029},"client/src/components/ui/loading.tsx":{"content":"import { cn } from '@/lib/utils';\n\ninterface LoadingSpinnerProps {\n  size?: 'sm' | 'md' | 'lg';\n  className?: string;\n}\n\nexport function LoadingSpinner({ size = 'md', className }: LoadingSpinnerProps) {\n  const sizeClasses = {\n    sm: 'w-4 h-4',\n    md: 'w-6 h-6', \n    lg: 'w-8 h-8'\n  };\n\n  return (\n    <div \n      className={cn(\n        'animate-spin rounded-full border-2 border-muted border-t-primary',\n        sizeClasses[size],\n        className\n      )}\n    />\n  );\n}\n\ninterface LoadingDotsProps {\n  className?: string;\n}\n\nexport function LoadingDots({ className }: LoadingDotsProps) {\n  return (\n    <div className={cn('flex items-center space-x-1', className)}>\n      <div className=\"w-2 h-2 bg-primary rounded-full animate-bounce [animation-delay:-0.3s]\"></div>\n      <div className=\"w-2 h-2 bg-primary rounded-full animate-bounce [animation-delay:-0.15s]\"></div>\n      <div className=\"w-2 h-2 bg-primary rounded-full animate-bounce\"></div>\n    </div>\n  );\n}\n\ninterface LoadingBarProps {\n  progress?: number;\n  className?: string;\n}\n\nexport function LoadingBar({ progress = 0, className }: LoadingBarProps) {\n  return (\n    <div className={cn('w-full bg-muted rounded-full h-2', className)}>\n      <div \n        className=\"bg-primary h-2 rounded-full transition-all duration-300 ease-out\"\n        style={{ width: `${Math.min(100, Math.max(0, progress))}%` }}\n      />\n    </div>\n  );\n}\n\ninterface LoadingSkeletonProps {\n  className?: string;\n  lines?: number;\n}\n\nexport function LoadingSkeleton({ className, lines = 3 }: LoadingSkeletonProps) {\n  return (\n    <div className={cn('animate-pulse', className)}>\n      {Array.from({ length: lines }).map((_, index) => (\n        <div \n          key={index}\n          className={cn(\n            'bg-muted rounded h-4 mb-3',\n            index === lines - 1 ? 'w-3/4' : 'w-full'\n          )}\n        />\n      ))}\n    </div>\n  );\n}\n\ninterface PageLoadingProps {\n  message?: string;\n}\n\nexport function PageLoading({ message = 'Yükleniyor...' }: PageLoadingProps) {\n  return (\n    <div className=\"fixed inset-0 bg-background/80 backdrop-blur-sm z-50 flex items-center justify-center\">\n      <div className=\"bg-background rounded-2xl p-8 shadow-lg border border-border\">\n        <div className=\"text-center\">\n          <LoadingSpinner size=\"lg\" className=\"mx-auto mb-4\" />\n          <p className=\"text-muted-foreground font-medium\">{message}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\ninterface CardLoadingProps {\n  className?: string;\n}\n\nexport function CardLoading({ className }: CardLoadingProps) {\n  return (\n    <div className={cn('border border-border rounded-2xl p-6 animate-pulse', className)}>\n      <div className=\"space-y-4\">\n        <div className=\"h-4 bg-muted rounded w-1/4\"></div>\n        <div className=\"h-6 bg-muted rounded w-3/4\"></div>\n        <div className=\"space-y-2\">\n          <div className=\"h-4 bg-muted rounded w-full\"></div>\n          <div className=\"h-4 bg-muted rounded w-2/3\"></div>\n        </div>\n        <div className=\"h-10 bg-muted rounded w-1/3\"></div>\n      </div>\n    </div>\n  );\n}","size_bytes":3077},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/page-transition.tsx":{"content":"import { useEffect, useState } from 'react';\nimport { cn } from '@/lib/utils';\n\ninterface PageTransitionProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport function PageTransition({ children, className }: PageTransitionProps) {\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setIsLoaded(true), 50);\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <div className={cn(\n      'transition-all duration-500 ease-out',\n      isLoaded \n        ? 'opacity-100 translate-y-0' \n        : 'opacity-0 translate-y-4',\n      className\n    )}>\n      {children}\n    </div>\n  );\n}\n\ninterface FadeInProps {\n  children: React.ReactNode;\n  delay?: number;\n  className?: string;\n}\n\nexport function FadeIn({ children, delay = 0, className }: FadeInProps) {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setIsVisible(true), delay);\n    return () => clearTimeout(timer);\n  }, [delay]);\n\n  return (\n    <div className={cn(\n      'transition-all duration-700 ease-out',\n      isVisible \n        ? 'opacity-100 translate-y-0' \n        : 'opacity-0 translate-y-6',\n      className\n    )}>\n      {children}\n    </div>\n  );\n}\n\ninterface SlideInProps {\n  children: React.ReactNode;\n  direction?: 'left' | 'right' | 'up' | 'down';\n  delay?: number;\n  className?: string;\n}\n\nexport function SlideIn({ \n  children, \n  direction = 'up', \n  delay = 0, \n  className \n}: SlideInProps) {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setIsVisible(true), delay);\n    return () => clearTimeout(timer);\n  }, [delay]);\n\n  const getTransform = () => {\n    if (isVisible) return 'translate-x-0 translate-y-0';\n    \n    switch (direction) {\n      case 'left': return '-translate-x-8 translate-y-0';\n      case 'right': return 'translate-x-8 translate-y-0';\n      case 'up': return 'translate-x-0 translate-y-8';\n      case 'down': return 'translate-x-0 -translate-y-8';\n      default: return 'translate-x-0 translate-y-8';\n    }\n  };\n\n  return (\n    <div className={cn(\n      'transition-all duration-600 ease-out',\n      isVisible ? 'opacity-100' : 'opacity-0',\n      getTransform(),\n      className\n    )}>\n      {children}\n    </div>\n  );\n}\n\ninterface StaggeredFadeInProps {\n  children: React.ReactNode[];\n  delay?: number;\n  staggerDelay?: number;\n  className?: string;\n}\n\nexport function StaggeredFadeIn({ \n  children, \n  delay = 0, \n  staggerDelay = 100,\n  className \n}: StaggeredFadeInProps) {\n  const [visibleItems, setVisibleItems] = useState<number[]>([]);\n\n  useEffect(() => {\n    children.forEach((_, index) => {\n      const timer = setTimeout(() => {\n        setVisibleItems(prev => [...prev, index]);\n      }, delay + (index * staggerDelay));\n      \n      return () => clearTimeout(timer);\n    });\n  }, [children.length, delay, staggerDelay]);\n\n  return (\n    <div className={className}>\n      {children.map((child, index) => (\n        <div\n          key={index}\n          className={cn(\n            'transition-all duration-500 ease-out',\n            visibleItems.includes(index)\n              ? 'opacity-100 translate-y-0'\n              : 'opacity-0 translate-y-4'\n          )}\n        >\n          {child}\n        </div>\n      ))}\n    </div>\n  );\n}\n\ninterface ScaleInProps {\n  children: React.ReactNode;\n  delay?: number;\n  className?: string;\n}\n\nexport function ScaleIn({ children, delay = 0, className }: ScaleInProps) {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setIsVisible(true), delay);\n    return () => clearTimeout(timer);\n  }, [delay]);\n\n  return (\n    <div className={cn(\n      'transition-all duration-500 ease-out',\n      isVisible \n        ? 'opacity-100 scale-100' \n        : 'opacity-0 scale-95',\n      className\n    )}>\n      {children}\n    </div>\n  );\n}","size_bytes":3926},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209}}}